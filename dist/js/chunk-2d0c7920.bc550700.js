(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c7920"],{"50d3":function(e,n,t){"use strict";t.r(n);var a=t("7a23"),l={class:"content-section introduction"},r=Object(a["k"])("div",{class:"feature-intro"},[Object(a["k"])("h1",null,[Object(a["n"])("TreeTable "),Object(a["k"])("span",null,"Size")]),Object(a["k"])("p",null,"In addition to a regular table, a smaller and a larger alternatives available.")],-1),o={class:"content-section implementation"},d={class:"card"},i=Object(a["n"])(" Small Table "),c={class:"card"},m=Object(a["n"])(" Normal Table "),s={class:"card"},u=Object(a["n"])(" Large Table ");function p(e,n,t,p,b,v){var f=Object(a["P"])("AppDemoActions"),h=Object(a["P"])("Column"),T=Object(a["P"])("TreeTable"),j=Object(a["P"])("AppDoc");return Object(a["H"])(),Object(a["j"])("div",null,[Object(a["k"])("div",l,[r,Object(a["o"])(f)]),Object(a["k"])("div",o,[Object(a["k"])("div",d,[Object(a["o"])(T,{value:b.nodes,class:"p-treetable-sm",style:{"margin-bottom":"2rem"}},{header:Object(a["Z"])((function(){return[i]})),default:Object(a["Z"])((function(){return[Object(a["o"])(h,{field:"name",header:"Name",expander:!0}),Object(a["o"])(h,{field:"size",header:"Size"}),Object(a["o"])(h,{field:"type",header:"Type"})]})),_:1},8,["value"])]),Object(a["k"])("div",c,[Object(a["o"])(T,{value:b.nodes,style:{"margin-bottom":"2rem"}},{header:Object(a["Z"])((function(){return[m]})),default:Object(a["Z"])((function(){return[Object(a["o"])(h,{field:"name",header:"Name",expander:!0}),Object(a["o"])(h,{field:"size",header:"Size"}),Object(a["o"])(h,{field:"type",header:"Type"})]})),_:1},8,["value"])]),Object(a["k"])("div",s,[Object(a["o"])(T,{value:b.nodes,class:"p-treetable-lg"},{header:Object(a["Z"])((function(){return[u]})),default:Object(a["Z"])((function(){return[Object(a["o"])(h,{field:"name",header:"Name",expander:!0}),Object(a["o"])(h,{field:"size",header:"Size"}),Object(a["o"])(h,{field:"type",header:"Type"})]})),_:1},8,["value"])])]),Object(a["o"])(j,{name:"TreeTableSizeDemo",sources:b.sources,service:["NodeService"],data:["treetablenodes"],github:"treetable/TreeTableSizeDemo.vue"},null,8,["sources"])])}var b=t("82f4"),v={data:function(){return{nodes:null,sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div>\n        <div class="card">\n            <TreeTable :value="nodes" class="p-treetable-sm" style="margin-bottom: 2rem">\n                <template #header>\n                    Small Table\n                </template>\n                <Column field="name" header="Name" :expander="true"></Column>\n                <Column field="size" header="Size"></Column>\n                <Column field="type" header="Type"></Column>\n            </TreeTable>\n        </div>\n\n        <div class="card">\n            <TreeTable :value="nodes" style="margin-bottom: 2rem">\n                <template #header>\n                    Normal Table\n                </template>\n                <Column field="name" header="Name" :expander="true"></Column>\n                <Column field="size" header="Size"></Column>\n                <Column field="type" header="Type"></Column>\n            </TreeTable>\n        </div>\n\n        <div class="card">\n            <TreeTable :value="nodes" class="p-treetable-lg" >\n                <template #header>\n                    Large Table\n                </template>\n                <Column field="name" header="Name" :expander="true"></Column>\n                <Column field="size" header="Size"></Column>\n                <Column field="type" header="Type"></Column>\n            </TreeTable>\n        </div>\n    </div>                    \n</template>\n\n<script>\nimport NodeService from \'./service/NodeService\';\n\nexport default {\n    data() {\n        return {\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    }\n}\n<\\/script>\n'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div>\n        <div class="card">\n            <TreeTable :value="nodes" class="p-treetable-sm" style="margin-bottom: 2rem">\n                <template #header>\n                    Small Table\n                </template>\n                <Column field="name" header="Name" :expander="true"></Column>\n                <Column field="size" header="Size"></Column>\n                <Column field="type" header="Type"></Column>\n            </TreeTable>\n        </div>\n\n        <div class="card">\n            <TreeTable :value="nodes" style="margin-bottom: 2rem">\n                <template #header>\n                    Normal Table\n                </template>\n                <Column field="name" header="Name" :expander="true"></Column>\n                <Column field="size" header="Size"></Column>\n                <Column field="type" header="Type"></Column>\n            </TreeTable>\n        </div>\n\n        <div class="card">\n            <TreeTable :value="nodes" class="p-treetable-lg" >\n                <template #header>\n                    Large Table\n                </template>\n                <Column field="name" header="Name" :expander="true"></Column>\n                <Column field="size" header="Size"></Column>\n                <Column field="type" header="Type"></Column>\n            </TreeTable>\n        </div>\n    </div>                    \n</template>\n\n<script>\nimport { ref, onMounted } from \'vue\';\nimport NodeService from \'./service/NodeService\';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            nodeService.value.getTreeTableNodes().then(data => nodes.value = data);\n        })\n\n        const nodes = ref();\n        const nodeService = ref(new NodeService());\n\n        return { nodes, nodeService }\n    }\n}\n<\\/script>\n'},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/treetable/treetable.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/column/column.min.js"><\\/script>\n        <script src="./NodeService.js"><\\/script>',content:'<div id="app">\n            <div class="card">\n                <p-treetable :value="nodes" class="p-treetable-sm" style="margin-bottom: 2rem">\n                    <template #header>\n                        Small Table\n                    </template>\n                    <p-column field="name" header="Name" :expander="true"></p-column>\n                    <p-column field="size" header="Size"></p-column>\n                    <p-column field="type" header="Type"></p-column>\n                </p-treetable>\n            </div>\n\n            <div class="card">\n                <p-treetable :value="nodes" style="margin-bottom: 2rem">\n                    <template #header>\n                        Normal Table\n                    </template>\n                    <p-column field="name" header="Name" :expander="true"></p-column>\n                    <p-column field="size" header="Size"></p-column>\n                    <p-column field="type" header="Type"></p-column>\n                </p-treetable>\n            </div>\n\n            <div class="card">\n                <p-treetable :value="nodes" class="p-treetable-lg" >\n                    <template #header>\n                        Large Table\n                    </template>\n                    <p-column field="name" header="Name" :expander="true"></p-column>\n                    <p-column field="size" header="Size"></p-column>\n                    <p-column field="type" header="Type"></p-column>\n                </p-treetable>\n            </div>\n        </div>                    \n\n        <script type="module">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    nodeService.value.getTreeTableNodes().then(data => nodes.value = data);\n                })\n\n                const nodes = ref();\n                const nodeService = ref(new NodeService());\n\n                return { nodes, nodeService }\n            },\n            components: {\n                "p-treetable": primevue.treetable,\n                "p-column": primevue.column\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount("#app");\n        <\\/script>\n'}}}},nodeService:null,created:function(){this.nodeService=new b["a"]},mounted:function(){var e=this;this.nodeService.getTreeTableNodes().then((function(n){return e.nodes=n}))}},f=t("6b0d"),h=t.n(f);const T=h()(v,[["render",p]]);n["default"]=T}}]);