(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-1ac5e146"],{"972a":function(e,t,n){"use strict";n.r(t);var o=n("7a23"),c={class:"content-section introduction"},r=Object(o["k"])("div",{class:"feature-intro"},[Object(o["k"])("h1",null,[Object(o["n"])("DataTable "),Object(o["k"])("span",null,"ContextMenu")]),Object(o["k"])("p",null,"DataTable has exclusive integration with ContextMenu.")],-1),u={class:"content-section implementation"},d={class:"card"};function a(e,t,n,a,s,i){var l=Object(o["P"])("AppDemoActions"),p=Object(o["P"])("Column"),m=Object(o["P"])("DataTable"),v=Object(o["P"])("ContextMenu"),f=Object(o["P"])("AppDoc");return Object(o["H"])(),Object(o["j"])("div",null,[Object(o["k"])("div",c,[r,Object(o["o"])(l)]),Object(o["k"])("div",u,[Object(o["k"])("div",d,[Object(o["o"])(m,{value:s.products,contextMenu:"",contextMenuSelection:s.selectedProduct,"onUpdate:contextMenuSelection":t[0]||(t[0]=function(e){return s.selectedProduct=e}),onRowContextmenu:i.onRowContextMenu,responsiveLayout:"scroll"},{default:Object(o["Z"])((function(){return[Object(o["o"])(p,{field:"code",header:"Code"}),Object(o["o"])(p,{field:"name",header:"Name"}),Object(o["o"])(p,{field:"category",header:"Category"}),Object(o["o"])(p,{field:"price",header:"Price"},{body:Object(o["Z"])((function(e){return[Object(o["n"])(Object(o["T"])(i.formatCurrency(e.data.price)),1)]})),_:1})]})),_:1},8,["value","contextMenuSelection","onRowContextmenu"])]),Object(o["o"])(v,{model:s.menuModel,ref:"cm"},null,8,["model"])]),Object(o["o"])(f,{name:"DataTableContextMenuDemo",sources:s.sources,service:["ProductService"],data:["products-small"],github:"datatable/DataTableContextMenuDemo.vue"},null,8,["sources"])])}n("b0c0"),n("4de4"),n("d3b7");var s=n("e9c0"),i={data:function(){var e=this;return{products:null,selectedProduct:null,menuModel:[{label:"View",icon:"pi pi-fw pi-search",command:function(){return e.viewProduct(e.selectedProduct)}},{label:"Delete",icon:"pi pi-fw pi-times",command:function(){return e.deleteProduct(e.selectedProduct)}}],sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div>\n        <Toast />\n        <DataTable :value="products" contextMenu v-model:contextMenuSelection="selectedProduct" @rowContextmenu="onRowContextMenu" responsiveLayout="scroll">\n            <Column field="code" header="Code"></Column>\n            <Column field="name" header="Name"></Column>\n            <Column field="category" header="Category"></Column>\n            <Column field="price" header="Price">\n                <template #body="slotProps">\n                    {{formatCurrency(slotProps.data.price)}}\n                </template>\n            </Column>\n        </DataTable>\n\n        <ContextMenu :model="menuModel" ref="cm" />\n    </div>\n</template>\n\n<script>\nimport ProductService from \'./service/ProductService\';\n\nexport default {\n    data() {\n        return {\n            products: null,\n            selectedProduct: null,\n            menuModel: [\n                {label: \'View\', icon: \'pi pi-fw pi-search\', command: () => this.viewProduct(this.selectedProduct)},\n                {label: \'Delete\', icon: \'pi pi-fw pi-times\', command: () => this.deleteProduct(this.selectedProduct)}\n            ]\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    },\n    methods: {\n        onRowContextMenu(event) {\n            this.$refs.cm.show(event.originalEvent);\n        },\n        viewProduct(product) {\n            this.$toast.add({severity: \'info\', summary: \'Product Selected\', detail: product.name});\n        },\n        deleteProduct(product) {\n            this.products = this.products.filter((p) => p.id !== product.id);\n            this.$toast.add({severity: \'error\', summary: \'Product Deleted\', detail: product.name});\n            this.selectedProduct = null;\n        },\n        formatCurrency(value) {\n            return value.toLocaleString(\'en-US\', {style: \'currency\', currency: \'USD\'});\n        }\n    }\n}\n<\\/script>\n'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div>\n        <Toast />\n        <DataTable :value="products" contextMenu v-model:contextMenuSelection="selectedProduct" @rowContextmenu="onRowContextMenu" responsiveLayout="scroll">\n            <Column field="code" header="Code"></Column>\n            <Column field="name" header="Name"></Column>\n            <Column field="category" header="Category"></Column>\n            <Column field="price" header="Price">\n                <template #body="slotProps">\n                    {{formatCurrency(slotProps.data.price)}}\n                </template>\n            </Column>\n        </DataTable>\n\n        <ContextMenu :model="menuModel" ref="cm" />\n    </div>\n</template>\n\n<script>\nimport { ref, onMounted } from \'vue\';\nimport { useToast } from \'primevue/usetoast\';\nimport ProductService from \'./service/ProductService\';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            productService.value.getProductsSmall().then(data => products.value = data);\n        })\n\n        const cm = ref();\n        const toast = useToast();\n        const products = ref();\n        const productService = ref(new ProductService());\n        const selectedProduct = ref();\n        const menuModel = ref([\n            {label: \'View\', icon: \'pi pi-fw pi-search\', command: () => viewProduct(selectedProduct)},\n            {label: \'Delete\', icon: \'pi pi-fw pi-times\', command: () => deleteProduct(selectedProduct)}\n        ]);\n        const onRowContextMenu = (event) => {\n            cm.value.show(event.originalEvent);\n        };\n        const viewProduct = (product) => {\n            toast.add({severity: \'info\', summary: \'Product Selected\', detail: product.name});\n        };\n        const deleteProduct = (product) => {\n            products.value = products.value.filter((p) => p.id !== product.value.id);\n            toast.add({severity: \'error\', summary: \'Product Deleted\', detail: product.name});\n            selectedProduct.value = null;\n        };\n        const formatCurrency = (value) => {\n            return value.toLocaleString(\'en-US\', {style: \'currency\', currency: \'USD\'});\n        };\n\n        return { cm, products, selectedProduct, menuModel, onRowContextMenu, viewProduct, deleteProduct, formatCurrency }\n    }\n}\n<\\/script>\n'},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/datatable/datatable.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/column/column.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/contextmenu/contextmenu.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/toast/toast.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/toastservice/toastservice.min.js"><\\/script>\n        <script src="./ProductService.js"><\\/script>',content:'<div id="app">\n            <p-toast></p-toast>\n\n            <p-datatable :value="products" context-menu v-model:context-menu-selection="selectedProduct" @row-contextmenu="onRowContextMenu" responsive-layout="scroll">\n                <p-column field="code" header="Code"></p-column>\n                <p-column field="name" header="Name"></p-column>\n                <p-column field="category" header="Category"></p-column>\n                <p-column field="price" header="Price">\n                    <template #body="slotProps">\n                        {{formatCurrency(slotProps.data.price)}}\n                    </template>\n                </p-column>\n            </p-datatable>\n\n            <p-contextmenu :model="menuModel" ref="cm"></p-contextmenu>\n        </div>\n\n        <script type="module">\n        const { createApp, ref, onMounted } = Vue;\n        const { useToast } = primevue.usetoast;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    productService.value.getProductsSmall().then(data => products.value = data);\n                })\n\n                const cm = ref();\n                const toast = useToast();\n                const products = ref();\n                const productService = ref(new ProductService());\n                const selectedProduct = ref();\n                const menuModel = ref([\n                    {label: \'View\', icon: \'pi pi-fw pi-search\', command: () => viewProduct(selectedProduct)},\n                    {label: \'Delete\', icon: \'pi pi-fw pi-times\', command: () => deleteProduct(selectedProduct)}\n                ]);\n                const onRowContextMenu = (event) => {\n                    cm.value.show(event.originalEvent);\n                };\n                const viewProduct = (product) => {\n                    toast.add({severity: \'info\', summary: \'Product Selected\', detail: product.name});\n                };\n                const deleteProduct = (product) => {\n                    products.value = products.value.filter((p) => p.id !== product.value.id);\n                    toast.add({severity: \'error\', summary: \'Product Deleted\', detail: product.name});\n                    selectedProduct.value = null;\n                };\n                const formatCurrency = (value) => {\n                    return value.toLocaleString(\'en-US\', {style: \'currency\', currency: \'USD\'});\n                };\n\n                return { cm, products, selectedProduct, menuModel, onRowContextMenu, viewProduct, deleteProduct, formatCurrency }\n            },\n            components: {\n                "p-datatable": primevue.datatable,\n                "p-column": primevue.column,\n                "p-contextmenu": primevue.contextmenu,\n                "p-toast":primevue.toast\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .use(primevue.toastservice)\n            .mount("#app");\n        <\\/script>\n'}}}},productService:null,created:function(){this.productService=new s["a"]},mounted:function(){var e=this;this.productService.getProductsSmall().then((function(t){return e.products=t}))},methods:{onRowContextMenu:function(e){this.$refs.cm.show(e.originalEvent)},viewProduct:function(e){this.$toast.add({severity:"info",summary:"Product Selected",detail:e.name})},deleteProduct:function(e){this.products=this.products.filter((function(t){return t.id!==e.id})),this.$toast.add({severity:"error",summary:"Product Deleted",detail:e.name}),this.selectedProduct=null},formatCurrency:function(e){return e.toLocaleString("en-US",{style:"currency",currency:"USD"})}}},l=n("6b0d"),p=n.n(l);const m=p()(i,[["render",a]]);t["default"]=m},e9c0:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var o=n("d4ec"),c=n("bee2"),r=(n("d3b7"),function(){function e(){Object(o["a"])(this,e)}return Object(c["a"])(e,[{key:"getProductsSmall",value:function(){return fetch("demo/data/products-small.json").then((function(e){return e.json()})).then((function(e){return e.data}))}},{key:"getProducts",value:function(){return fetch("demo/data/products.json").then((function(e){return e.json()})).then((function(e){return e.data}))}},{key:"getProductsWithOrdersSmall",value:function(){return fetch("demo/data/products-orders-small.json").then((function(e){return e.json()})).then((function(e){return e.data}))}}]),e}())}}]);