(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d207b59"],{a24f:function(e,c,t){"use strict";t.r(c);t("b0c0");var l=t("7a23"),n={class:"content-section introduction"},i=Object(l["k"])("div",{class:"feature-intro"},[Object(l["k"])("h1",null,"Checkbox"),Object(l["k"])("p",null,"Checkbox is an extension to standard checkbox element with theming.")],-1),a={class:"content-section implementation"},o={class:"card"},b=Object(l["k"])("h5",null,"Basic",-1),s={class:"field-checkbox"},d={for:"binary"},r=Object(l["k"])("h5",null,"Multiple",-1),u={class:"field-checkbox"},k=Object(l["k"])("label",{for:"city1"},"Chicago",-1),h={class:"field-checkbox"},j=Object(l["k"])("label",{for:"city2"},"Los Angeles",-1),O={class:"field-checkbox"},y=Object(l["k"])("label",{for:"city3"},"New York",-1),v={class:"field-checkbox"},m=Object(l["k"])("label",{for:"city4"},"San Francisco",-1),p=Object(l["k"])("h5",null,"Dynamic Values, Preselection, Value Binding and Disabled Option",-1),f=["for"];function g(e,c,t,g,x,C){var V=Object(l["P"])("AppDemoActions"),w=Object(l["P"])("Checkbox"),A=Object(l["P"])("CheckboxDoc");return Object(l["H"])(),Object(l["j"])("div",null,[Object(l["k"])("div",n,[i,Object(l["o"])(V)]),Object(l["k"])("div",a,[Object(l["k"])("div",o,[b,Object(l["k"])("div",s,[Object(l["o"])(w,{id:"binary",modelValue:x.checked,"onUpdate:modelValue":c[0]||(c[0]=function(e){return x.checked=e}),binary:!0},null,8,["modelValue"]),Object(l["k"])("label",d,Object(l["T"])(x.checked),1)]),r,Object(l["k"])("div",u,[Object(l["o"])(w,{id:"city1",name:"city",value:"Chicago",modelValue:x.cities,"onUpdate:modelValue":c[1]||(c[1]=function(e){return x.cities=e})},null,8,["modelValue"]),k]),Object(l["k"])("div",h,[Object(l["o"])(w,{id:"city2",name:"city",value:"Los Angeles",modelValue:x.cities,"onUpdate:modelValue":c[2]||(c[2]=function(e){return x.cities=e})},null,8,["modelValue"]),j]),Object(l["k"])("div",O,[Object(l["o"])(w,{id:"city3",name:"city",value:"New York",modelValue:x.cities,"onUpdate:modelValue":c[3]||(c[3]=function(e){return x.cities=e})},null,8,["modelValue"]),y]),Object(l["k"])("div",v,[Object(l["o"])(w,{id:"city4",name:"city",value:"San Francisco",modelValue:x.cities,"onUpdate:modelValue":c[4]||(c[4]=function(e){return x.cities=e})},null,8,["modelValue"]),m]),p,(Object(l["H"])(!0),Object(l["j"])(l["a"],null,Object(l["N"])(x.categories,(function(e){return Object(l["H"])(),Object(l["j"])("div",{key:e.key,class:"field-checkbox"},[Object(l["o"])(w,{id:e.key,name:"category",value:e,modelValue:x.selectedCategories,"onUpdate:modelValue":c[5]||(c[5]=function(e){return x.selectedCategories=e}),disabled:"R"===e.key},null,8,["id","value","modelValue","disabled"]),Object(l["k"])("label",{for:e.key},Object(l["T"])(e.name),9,f)])})),128))])]),Object(l["o"])(A)])}t("fb6a");var x=Object(l["k"])("h5",null,"Import via Module",-1),C=Object(l["k"])("code",null,"\nimport Checkbox from 'primevue/checkbox';\n\n",-1),V=[C],w=Object(l["k"])("h5",null,"Import via CDN",-1),A=Object(l["k"])("code",null,'\n<script src="https://unpkg.com/primevue@^3/core/core.min.js"><\/script>\n<script src="https://unpkg.com/primevue@^3/checkbox/checkbox.min.js"><\/script>\n\n',-1),P=[A],D=Object(l["k"])("h5",null,"Getting Started",-1),N=Object(l["k"])("p",null,"Checkbox can either be used in multiple selection with other checkboxes or as a single checkbox to provide a boolean value.",-1),M=Object(l["k"])("code",null,'\n<Checkbox v-model="checked" :binary="true" />\n\n',-1),S=[M],R=Object(l["k"])("h5",null,"Multiple Values",-1),B=Object(l["k"])("p",null,"Multiple mode is enabled by default, v-model property refers to an array to bind the selected values.",-1),F=Object(l["k"])("code",null,'\n<Checkbox name="city" value="Chicago" v-model="cities" />\n<Checkbox name="city" value="Los Angeles" v-model="cities" />\n<Checkbox name="city" value="New York" v-model="cities" />\n<Checkbox name="city" value="San Francisco" v-model="cities" />\n\n',-1),H=[F],L=Object(l["k"])("code",null,"\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tcities: []\n\t\t}\n\t}\n}\n\n",-1),Y=[L],I=Object(l["k"])("p",null,"As v-model is two-way binding enabled, prepopulating the model array with values is enough to display the related checkboxes as checked by default.",-1),U=Object(l["k"])("h5",null,"Properties",-1),T=Object(l["k"])("p",null,"Any property such as name and autofocus are passed to the underlying input element. Following are the additional properties to configure the component.",-1),E=Object(l["k"])("div",{class:"doc-tablewrapper"},[Object(l["k"])("table",{class:"doc-table"},[Object(l["k"])("thead",null,[Object(l["k"])("tr",null,[Object(l["k"])("th",null,"Name"),Object(l["k"])("th",null,"Type"),Object(l["k"])("th",null,"Default"),Object(l["k"])("th",null,"Description")])]),Object(l["k"])("tbody",null,[Object(l["k"])("tr",null,[Object(l["k"])("td",null,"value"),Object(l["k"])("td",null,"any"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Value of the checkbox.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"modelValue"),Object(l["k"])("td",null,"any"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Value binding of the checkbox.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"binary"),Object(l["k"])("td",null,"boolean"),Object(l["k"])("td",null,"false"),Object(l["k"])("td",null,"Allows to select a boolean value instead of multiple values.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"style"),Object(l["k"])("td",null,"any"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Style class of the component input field.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"class"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Inline style of the component.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"trueValue"),Object(l["k"])("td",null,"any"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Value in checked state.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"falseValue"),Object(l["k"])("td",null,"any"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Value in unchecked state.")])])])],-1),J=Object(l["k"])("h5",null,"Events",-1),Z=Object(l["k"])("p",null,"In addition to the following events, any other valid events such as focus and blur are passed implicitly.",-1),_=Object(l["k"])("div",{class:"doc-tablewrapper"},[Object(l["k"])("table",{class:"doc-table"},[Object(l["k"])("thead",null,[Object(l["k"])("tr",null,[Object(l["k"])("th",null,"Name"),Object(l["k"])("th",null,"Parameters"),Object(l["k"])("th",null,"Description")])]),Object(l["k"])("tbody",null,[Object(l["k"])("tr",null,[Object(l["k"])("td",null,"click"),Object(l["k"])("td",null,"event: Browser event"),Object(l["k"])("td",null,"Callback to invoke on value click.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"change"),Object(l["k"])("td",null,"event: Browser event"),Object(l["k"])("td",null,"Callback to invoke on value change.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"input"),Object(l["k"])("td",null,"value: New value"),Object(l["k"])("td",null,"Callback to invoke on value change.")])])])],-1),G=Object(l["k"])("h5",null,"Styling",-1),Q=Object(l["n"])("Following is the list of structural style classes, for theming classes visit "),q=Object(l["n"])("theming"),z=Object(l["n"])(" page."),K=Object(l["k"])("div",{class:"doc-tablewrapper"},[Object(l["k"])("table",{class:"doc-table"},[Object(l["k"])("thead",null,[Object(l["k"])("tr",null,[Object(l["k"])("th",null,"Name"),Object(l["k"])("th",null,"Element")])]),Object(l["k"])("tbody",null,[Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-checkbox"),Object(l["k"])("td",null,"Container element")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-checkbox-box"),Object(l["k"])("td",null,"Container of icon.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-checkbox-icon"),Object(l["k"])("td",null,"Icon element.")])])])],-1),W=Object(l["k"])("h5",null,"Dependencies",-1),X=Object(l["k"])("p",null,"None.",-1);function $(e,c,t,n,i,a){var o=Object(l["P"])("router-link"),b=Object(l["P"])("AppDoc"),s=Object(l["Q"])("code");return Object(l["H"])(),Object(l["h"])(b,{name:"CheckboxDemo",sources:i.sources,github:"checkbox/CheckboxDemo.vue"},{default:Object(l["Z"])((function(){return[x,Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,V)),[[s,void 0,void 0,{script:!0}]]),w,Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,P)),[[s]]),D,N,Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,S)),[[s]]),R,B,Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,H)),[[s]]),Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,Y)),[[s,void 0,void 0,{script:!0}]]),I,U,T,E,J,Z,_,G,Object(l["k"])("p",null,[Q,Object(l["o"])(o,{to:"/theming"},{default:Object(l["Z"])((function(){return[q]})),_:1}),z]),K,W,X]})),_:1},8,["sources"])}var ee={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div>\n        <h5>Basic</h5>\n        <div class="field-checkbox">\n            <Checkbox id="binary" v-model="checked" :binary="true" />\n            <label for="binary">{{checked}}</label>\n        </div>\n\n        <h5>Multiple</h5>\n        <div class="field-checkbox">\n            <Checkbox id="city1" name="city" value="Chicago" v-model="cities" />\n            <label for="city1">Chicago</label>\n        </div>\n        <div class="field-checkbox">\n            <Checkbox id="city2" name="city" value="Los Angeles" v-model="cities" />\n            <label for="city2">Los Angeles</label>\n        </div>\n        <div class="field-checkbox">\n            <Checkbox id="city3" name="city" value="New York" v-model="cities" />\n            <label for="city3">New York</label>\n        </div>\n        <div class="field-checkbox">\n            <Checkbox id="city4" name="city" value="San Francisco" v-model="cities" />\n            <label for="city4">San Francisco</label>\n        </div>\n\n        <h5>Dynamic Values, Preselection, Value Binding and Disabled Option</h5>\n        <div v-for="category of categories" :key="category.key" class="field-checkbox">\n            <Checkbox :id="category.key" name="category" :value="category" v-model="selectedCategories" :disabled="category.key === \'R\'"/>\n            <label :for="category.key">{{category.name}}</label>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            checked: false,\n            cities: [],\n            categories: [{name: \'Accounting\', key: \'A\'}, {name: \'Marketing\', key: \'M\'}, {name: \'Production\', key: \'P\'}, {name: \'Research\', key: \'R\'}],\n            selectedCategories: []\n        }\n    },\n    created() {\n        this.selectedCategories = this.categories.slice(1,3);\n    }\n}\n<\\/script>'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div>\n        <h5>Basic</h5>\n        <div class="field-checkbox">\n            <Checkbox id="binary" v-model="checked" :binary="true" />\n            <label for="binary">{{checked}}</label>\n        </div>\n\n        <h5>Multiple</h5>\n        <div class="field-checkbox">\n            <Checkbox id="city1" name="city" value="Chicago" v-model="cities" />\n            <label for="city1">Chicago</label>\n        </div>\n        <div class="field-checkbox">\n            <Checkbox id="city2" name="city" value="Los Angeles" v-model="cities" />\n            <label for="city2">Los Angeles</label>\n        </div>\n        <div class="field-checkbox">\n            <Checkbox id="city3" name="city" value="New York" v-model="cities" />\n            <label for="city3">New York</label>\n        </div>\n        <div class="field-checkbox">\n            <Checkbox id="city4" name="city" value="San Francisco" v-model="cities" />\n            <label for="city4">San Francisco</label>\n        </div>\n\n        <h5>Dynamic Values, Preselection, Value Binding and Disabled Option</h5>\n        <div v-for="category of categories" :key="category.key" class="field-checkbox">\n            <Checkbox :id="category.key" name="category" :value="category" v-model="selectedCategories" :disabled="category.key === \'R\'"/>\n            <label :for="category.key">{{category.name}}</label>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref } from \'vue\';\nexport default {\n    setup() {\n        const checked = ref(false);\n        const cities = ref([]);\n        const categories = ref([\n            {name: \'Accounting\', key: \'A\'},\n            {name: \'Marketing\', key: \'M\'},\n            {name: \'Production\', key: \'P\'},\n            {name: \'Research\', key: \'R\'}\n        ]);\n        const selectedCategories = ref(categories.value.slice(1,3));\n\n        return { checked, cities, categories, selectedCategories }\n    }\n}\n<\\/script>'},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/checkbox/checkbox.min.js"><\\/script>',content:'<div id="app">\n        <h5>Basic</h5>\n        <div class="field-checkbox">\n            <p-checkbox id="binary" v-model="checked" :binary="true"></p-checkbox>\n            <label for="binary">{{checked}}</label>\n        </div>\n\n        <h5>Multiple</h5>\n        <div class="field-checkbox">\n            <p-checkbox id="city1" name="city" value="Chicago" v-model="cities"></p-checkbox>\n            <label for="city1">Chicago</label>\n        </div>\n        <div class="field-checkbox">\n            <p-checkbox id="city2" name="city" value="Los Angeles" v-model="cities"></p-checkbox>\n            <label for="city2">Los Angeles</label>\n        </div>\n        <div class="field-checkbox">\n            <p-checkbox id="city3" name="city" value="New York" v-model="cities"></p-checkbox>\n            <label for="city3">New York</label>\n        </div>\n        <div class="field-checkbox">\n            <p-checkbox id="city4" name="city" value="San Francisco" v-model="cities"></p-checkbox>\n            <label for="city4">San Francisco</label>\n        </div>\n\n        <h5>Dynamic Values, Preselection, Value Binding and Disabled Option</h5>\n        <div v-for="category of categories" :key="category.key" class="field-checkbox">\n            <p-checkbox :id="category.key" name="category" :value="category" v-model="selectedCategories" :disabled="category.key === \'R\'"></p-checkbox>\n            <label :for="category.key">{{category.name}}</label>\n        </div>\n    </div>\n\n    <script type="module">\n        const { createApp, ref } = Vue;\n\n        const App = {\n            setup() {\n                const checked = ref(false);\n                const cities = ref([]);\n                const categories = ref([\n                    {name: \'Accounting\', key: \'A\'},\n                    {name: \'Marketing\', key: \'M\'},\n                    {name: \'Production\', key: \'P\'},\n                    {name: \'Research\', key: \'R\'}\n                ]);\n                const selectedCategories = ref(categories.value.slice(1,3));\n\n                return { checked, cities, categories, selectedCategories }\n            },\n            components: {\n                "p-checkbox": primevue.checkbox\n            }\n        };\n\n        createApp(App).use(primevue.config.default).mount(\'#app\');\n    <\\/script>\n'}}}}},ce=t("6b0d"),te=t.n(ce);const le=te()(ee,[["render",$]]);var ne=le,ie={data:function(){return{checked:!1,cities:[],categories:[{name:"Accounting",key:"A"},{name:"Marketing",key:"M"},{name:"Production",key:"P"},{name:"Research",key:"R"}],selectedCategories:[]}},created:function(){this.selectedCategories=this.categories.slice(1,3)},components:{CheckboxDoc:ne}};const ae=te()(ie,[["render",g]]);c["default"]=ae}}]);