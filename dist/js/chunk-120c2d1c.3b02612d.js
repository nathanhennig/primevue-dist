(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-120c2d1c"],{1729:function(e,t,l){"use strict";l.r(t);var n=l("7a23"),i=function(e){return Object(n["K"])("data-v-f93854e8"),e=e(),Object(n["I"])(),e},s={class:"content-section introduction"},o=i((function(){return Object(n["k"])("div",{class:"feature-intro"},[Object(n["k"])("h1",null,"VirtualScroller"),Object(n["k"])("p",null,"VirtualScroller is a performant approach to handle huge data efficiently.")],-1)})),a={class:"content-section implementation virtualscroller-demo"},c={class:"card"},r=i((function(){return Object(n["k"])("h5",{class:"mb-0"},"Basic",-1)})),d={class:"flex align-items-center flex-wrap"},m={class:"flex flex-column mr-3 mt-3"},p=i((function(){return Object(n["k"])("h6",null,"Vertical",-1)})),u={class:"flex flex-column mr-3 mt-3"},h=i((function(){return Object(n["k"])("h6",null,"Horizontal",-1)})),b={class:"flex flex-column mr-3 mt-3"},v=i((function(){return Object(n["k"])("h6",null,"Both",-1)})),j={class:"card"},O=i((function(){return Object(n["k"])("h5",{class:"mb-0"},"Scroll Delay",-1)})),f={class:"flex align-items-center flex-wrap"},x={class:"flex flex-column mr-3 mt-3"},k=i((function(){return Object(n["k"])("h6",null,"0ms Delay",-1)})),g={class:"flex flex-column mr-3 mt-3"},y=i((function(){return Object(n["k"])("h6",null,"150ms Delay",-1)})),z={class:"flex flex-column mr-3 mt-3"},w=i((function(){return Object(n["k"])("h6",null,"250ms Delay",-1)})),I={class:"card"},S=i((function(){return Object(n["k"])("h5",{class:"mb-0"},"Loading",-1)})),L={class:"flex align-items-center flex-wrap"},T={class:"flex flex-column mr-3 mt-3"},V=i((function(){return Object(n["k"])("h6",null,"Basic",-1)})),A={class:"flex flex-column mr-3 mt-3"},D=i((function(){return Object(n["k"])("h6",null,"Templating",-1)})),_={class:"card"},$=i((function(){return Object(n["k"])("h5",{class:"mb-0"},"Lazy",-1)})),H={class:"flex align-items-center flex-wrap"},B={class:"flex flex-column mr-3 mt-3"},M={class:"card"},Z=i((function(){return Object(n["k"])("h5",{class:"mb-0"},"Template",-1)})),C={class:"flex align-items-center flex-wrap"},P={class:"flex flex-column mr-3 mt-3"},N={class:"flex align-items-center px-2",style:{height:"25px"}},W={class:"flex align-items-center px-2",style:{height:"25px"}},F={class:"flex align-items-center px-2",style:{height:"25px"}},E={class:"flex align-items-center px-2",style:{height:"25px"}},R={class:"flex align-items-center px-2",style:{height:"25px"}},q={class:"flex align-items-center px-2",style:{height:"25px"}},U={class:"flex align-items-center px-2",style:{height:"25px"}},J={class:"flex align-items-center px-2",style:{height:"25px"}},G={class:"flex align-items-center px-2",style:{height:"25px"}},K={class:"flex align-items-center px-2",style:{height:"25px"}},Q={class:"flex align-items-center px-2",style:{height:"25px"}},X={class:"flex align-items-center px-2",style:{height:"25px"}},Y={class:"flex align-items-center px-2",style:{height:"25px"}},ee={class:"flex align-items-center px-2",style:{height:"25px"}};function te(e,t,l,i,te,le){var ne=Object(n["P"])("AppDemoActions"),ie=Object(n["P"])("VirtualScroller"),se=Object(n["P"])("Skeleton"),oe=Object(n["P"])("VirtualScrollerDoc");return Object(n["H"])(),Object(n["j"])("div",null,[Object(n["k"])("div",s,[o,Object(n["o"])(ne)]),Object(n["k"])("div",a,[Object(n["k"])("div",c,[r,Object(n["k"])("div",d,[Object(n["k"])("div",m,[p,Object(n["o"])(ie,{items:te.basicItems,itemSize:50},{item:Object(n["Z"])((function(e){var t=e.item,l=e.options;return[Object(n["k"])("div",{class:Object(n["A"])(["scroll-item p-2",{odd:l.odd}]),style:{height:"50px"}},Object(n["T"])(t),3)]})),_:1},8,["items"])]),Object(n["k"])("div",u,[h,Object(n["o"])(ie,{items:te.basicItems,itemSize:50,orientation:"horizontal"},{item:Object(n["Z"])((function(e){var t=e.item,l=e.options;return[Object(n["k"])("div",{class:Object(n["A"])(["scroll-item p-2",{odd:l.odd}]),style:{width:"50px"}},Object(n["T"])(t),3)]})),_:1},8,["items"])]),Object(n["k"])("div",b,[v,Object(n["o"])(ie,{items:te.multiItems,itemSize:[50,100],orientation:"both"},{item:Object(n["Z"])((function(e){var t=e.item,l=e.options;return[Object(n["k"])("div",{class:Object(n["A"])(["scroll-item p-2",{odd:l.odd}]),style:{height:"50px"}},[(Object(n["H"])(!0),Object(n["j"])(n["a"],null,Object(n["N"])(t,(function(e,t){return Object(n["H"])(),Object(n["j"])("div",{key:t,style:{width:"100px"}},Object(n["T"])(e),1)})),128))],2)]})),_:1},8,["items"])])])]),Object(n["k"])("div",j,[O,Object(n["k"])("div",f,[Object(n["k"])("div",x,[k,Object(n["o"])(ie,{items:te.basicItems,itemSize:50},{item:Object(n["Z"])((function(e){var t=e.item,l=e.options;return[Object(n["k"])("div",{class:Object(n["A"])(["scroll-item p-2",{odd:l.odd}]),style:{height:"50px"}},Object(n["T"])(t),3)]})),_:1},8,["items"])]),Object(n["k"])("div",g,[y,Object(n["o"])(ie,{items:te.basicItems,itemSize:50,delay:150},{item:Object(n["Z"])((function(e){var t=e.item,l=e.options;return[Object(n["k"])("div",{class:Object(n["A"])(["scroll-item p-2",{odd:l.odd}]),style:{height:"50px"}},Object(n["T"])(t),3)]})),_:1},8,["items"])]),Object(n["k"])("div",z,[w,Object(n["o"])(ie,{items:te.basicItems,itemSize:50,delay:250},{item:Object(n["Z"])((function(e){var t=e.item,l=e.options;return[Object(n["k"])("div",{class:Object(n["A"])(["scroll-item p-2",{odd:l.odd}]),style:{height:"50px"}},Object(n["T"])(t),3)]})),_:1},8,["items"])])])]),Object(n["k"])("div",I,[S,Object(n["k"])("div",L,[Object(n["k"])("div",T,[V,Object(n["o"])(ie,{items:te.basicItems,itemSize:50,showLoader:"",delay:250},{item:Object(n["Z"])((function(e){var t=e.item,l=e.options;return[Object(n["k"])("div",{class:Object(n["A"])(["scroll-item p-2",{odd:l.odd}]),style:{height:"50px"}},Object(n["T"])(t),3)]})),_:1},8,["items"])]),Object(n["k"])("div",A,[D,Object(n["o"])(ie,{class:"custom-loading",items:te.basicItems,itemSize:50,showLoader:"",delay:250},{item:Object(n["Z"])((function(e){var t=e.item,l=e.options;return[Object(n["k"])("div",{class:Object(n["A"])(["scroll-item p-2",{odd:l.odd}]),style:{height:"50px"}},Object(n["T"])(t),3)]})),loader:Object(n["Z"])((function(e){var t=e.options;return[Object(n["k"])("div",{class:Object(n["A"])(["scroll-item p-2",{odd:t.odd}]),style:{height:"50px"}},[Object(n["o"])(se,{width:t.even?"60%":"50%",height:"1.3rem"},null,8,["width"])],2)]})),_:1},8,["items"])])])]),Object(n["k"])("div",_,[$,Object(n["k"])("div",H,[Object(n["k"])("div",B,[Object(n["o"])(ie,{items:te.lazyItems,itemSize:50,showLoader:"",delay:250,loading:te.lazyLoading,lazy:"",onLazyLoad:le.onLazyLoad},{item:Object(n["Z"])((function(e){var t=e.item,l=e.options;return[Object(n["k"])("div",{class:Object(n["A"])(["scroll-item p-2",{odd:l.odd}]),style:{height:"50px"}},Object(n["T"])(t),3)]})),_:1},8,["items","loading","onLazyLoad"])])])]),Object(n["k"])("div",M,[Z,Object(n["k"])("div",C,[Object(n["k"])("div",P,[Object(n["o"])(ie,{class:"custom-loading",items:te.basicItems,itemSize:175,showLoader:"",delay:250},{item:Object(n["Z"])((function(e){var t=e.item,l=e.options;return[Object(n["k"])("div",{class:Object(n["A"])(["custom-scroll-item scroll-item",{odd:l.odd}])},[Object(n["k"])("div",N,Object(n["T"])("Item: ".concat(t)),1),Object(n["k"])("div",W,Object(n["T"])("Index: ".concat(l.index)),1),Object(n["k"])("div",F,Object(n["T"])("Count: ".concat(l.count)),1),Object(n["k"])("div",E,Object(n["T"])("First: ".concat(l.first)),1),Object(n["k"])("div",R,Object(n["T"])("Last: ".concat(l.last)),1),Object(n["k"])("div",q,Object(n["T"])("Even: ".concat(l.even)),1),Object(n["k"])("div",U,Object(n["T"])("Odd: ".concat(l.odd)),1)],2)]})),loader:Object(n["Z"])((function(e){var t=e.options;return[Object(n["k"])("div",{class:Object(n["A"])(["custom-scroll-item scroll-item",{odd:t.odd}])},[Object(n["k"])("div",J,[Object(n["o"])(se,{width:"60%",height:"1.2rem"})]),Object(n["k"])("div",G,[Object(n["o"])(se,{width:"50%",height:"1.2rem"})]),Object(n["k"])("div",K,[Object(n["o"])(se,{width:"60%",height:"1.2rem"})]),Object(n["k"])("div",Q,[Object(n["o"])(se,{width:"50%",height:"1.2rem"})]),Object(n["k"])("div",X,[Object(n["o"])(se,{width:"60%",height:"1.2rem"})]),Object(n["k"])("div",Y,[Object(n["o"])(se,{width:"50%",height:"1.2rem"})]),Object(n["k"])("div",ee,[Object(n["o"])(se,{width:"60%",height:"1.2rem"})])],2)]})),_:1},8,["items"])])])])]),Object(n["o"])(oe)])}var le=l("2909"),ne=(l("d81d"),l("a630"),l("3ca3"),l("99af"),Object(n["k"])("h5",null,"Imports",-1)),ie=Object(n["k"])("code",null,"\nimport VirtualScroller from 'primevue/virtualscroller';\n\n",-1),se=[ie],oe=Object(n["k"])("h5",null,"Import via CDN",-1),ae=Object(n["k"])("code",null,'\n<script src="https://unpkg.com/primevue@^3/core/core.min.js"><\/script>\n\n',-1),ce=[ae],re=Object(n["k"])("h5",null,"Getting Started",-1),de=Object(n["k"])("p",null,[Object(n["n"])("VirtualScroller is used to display huge data. It periodically adds special elements defined according to the scroll's position to the DOM. The "),Object(n["k"])("i",null,"item"),Object(n["n"])(" and "),Object(n["k"])("i",null,"itemSize"),Object(n["n"])(" properties and "),Object(n["k"])("i",null,"item"),Object(n["n"])(" template are required on component. In addition, an initial array is required based on the total number of items to display."),Object(n["k"])("br"),Object(n["n"])(" VirtualScroller automatically calculates how many items will be displayed in the view according to "),Object(n["k"])("i",null,"itemSize"),Object(n["n"])(" using a specified scroll height. Its scroll height can be adjusted with "),Object(n["k"])("i",null,"scrollHeight"),Object(n["n"])(" property or height property of CSS.")],-1),me=Object(n["k"])("code",null,[Object(n["k"])("template",null,[Object(n["n"])('\n<VirtualScroller :items="basicItems" :itemSize="50">\n    <template v-slot:item="{ item, options }">\n        <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n    </template>\n</VirtualScroller>\n')]),Object(n["n"])("\n")],-1),pe=[me],ue=Object(n["k"])("code",null,"\nexport default {\n    data() {\n        return {\n            basicItems: null\n        }\n    },\n    mounted() {\n        this.basicItems = Array.from({ length: 100000 }).map((_, i) => `Item #${i}`);\n    }\n}\n\n",-1),he=[ue],be=Object(n["k"])("h5",null,"Loader",-1),ve=Object(n["k"])("p",null,[Object(n["n"])("VirtualScroller has a special loader. It can be activated with the "),Object(n["k"])("i",null,"showLoader"),Object(n["n"])(" property. In addition, "),Object(n["k"])("i",null,"loader"),Object(n["n"])(" template can be used to add custom loaders to item elements.")],-1),je=Object(n["k"])("code",null,[Object(n["k"])("template",null,[Object(n["n"])('\n<VirtualScroller :items="basicItems" :itemSize="50" showLoader :delay="250">\n    <template v-slot:item="{ item, options }">\n        <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n    </template>\n    <template v-slot:loader="{ options }">\n        <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px" >\n            <Skeleton :width="options.even ? \'60%\' : \'50%\'" height="1.3rem" />\n        </div>\n    </template>\n</VirtualScroller>\n')]),Object(n["n"])("\n")],-1),Oe=[je],fe=Object(n["k"])("h5",null,"Lazy",-1),xe=Object(n["k"])("p",null,[Object(n["n"])("Lazy mode is handy to deal with large datasets, instead of loading the entire data, small chunks of data is loaded by invoking "),Object(n["k"])("i",null,"lazy-load"),Object(n["n"])(" event.")],-1),ke=Object(n["k"])("code",null,[Object(n["k"])("template",null,[Object(n["n"])('\n<VirtualScroller :items="lazyItems" :itemSize="50" showLoader :delay="250" :loading="lazyLoading" :lazy=true @lazy-load="onLazyLoad">\n    <template v-slot:item="{ item, options }">\n        <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n    </template>\n</VirtualScroller>\n')]),Object(n["n"])("\n")],-1),ge=[ke],ye=Object(n["k"])("code",null,"\nexport default {\n    data() {\n        return {\n            lazyItems: null,\n            lazyLoading: false,\n            loadLazyTimeout: null,\n        }\n    },\n    mounted() {\n        this.lazyItems = Array.from({ length: 100000 });\n    },\n    methods: {\n        onLazyLoad(event) {\n            this.lazyLoading = true;\n\n            if (this.loadLazyTimeout) {\n                clearTimeout(this.loadLazyTimeout);\n            }\n\n            //imitate delay of a backend call\n            this.loadLazyTimeout = setTimeout(() => {\n                const { first, last } = event;\n                const lazyItems = [...this.lazyItems];\n\n                for (let i = first; i < last; i++) {\n                    lazyItems[i] = `Item #${i}`;\n                }\n\n                this.lazyItems = lazyItems;\n                this.lazyLoading = false;\n\n            }, Math.random() * 1000 + 250);\n        }\n    }\n}\n\n",-1),ze=[ye],we=Object(n["k"])("h5",null,"Properties",-1),Ie=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Name"),Object(n["k"])("th",null,"Type"),Object(n["k"])("th",null,"Default"),Object(n["k"])("th",null,"Description")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,"id"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Unique identifier of the element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"style"),Object(n["k"])("td",null,"any"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Inline style of the component.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"class"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Style class of the component.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"items"),Object(n["k"])("td",null,"array"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"An array of objects to display.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"itemSize"),Object(n["k"])("td",null,"number / [number, number]"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"The height/width of item according to orientation.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"scrollHeight"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Height of the scroll viewport.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"scrollWidth"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Width of the scroll viewport.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"orientation"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"'vertical'"),Object(n["k"])("td",null,"The orientation of scrollbar, valid values are 'vertical', 'horizontal' and 'both'.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"numToleratedItems"),Object(n["k"])("td",null,"number"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,[Object(n["n"])("Determines how many additional elements to add to the DOM outside of the view. "),Object(n["k"])("br"),Object(n["n"])(" According to the scrolls made up and down, extra items are added in a certain algorithm in the form of multiples of this number. "),Object(n["k"])("br"),Object(n["n"])(" Default value is half the number of items shown in the view.")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"delay"),Object(n["k"])("td",null,"number"),Object(n["k"])("td",null,"0"),Object(n["k"])("td",null,"Delay in scroll before new data is loaded.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"lazy"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"Defines if data is loaded and interacted with in lazy manner.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"disabled"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"If disabled, the VirtualScroller feature is eliminated and the content is displayed directly.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"loaderDisabled"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"Used to implement a custom loader instead of using the loader feature in the VirtualScroller.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"loading"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"Whether the data is loaded.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"showSpacer"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"true"),Object(n["k"])("td",null,"Used to implement a custom spacer instead of using the spacer feature in the VirtualScroller.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"showLoader"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"Whether to show loader.")])])])],-1),Se=Object(n["k"])("h5",null,"Events",-1),Le=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Name"),Object(n["k"])("th",null,"Parameters"),Object(n["k"])("th",null,"Description")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,"scroll"),Object(n["k"])("td",null,"event: Browser event"),Object(n["k"])("td",null,"Callback to invoke when scroll position changes.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"scroll-index-change"),Object(n["k"])("td",null,[Object(n["n"])("event.first: First index of the new data range to be loaded."),Object(n["k"])("br"),Object(n["n"])(" event.last: Last index of the new data range to be loaded. ")]),Object(n["k"])("td",null,"Callback to invoke when scroll position and item's range in view changes.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"lazy-load"),Object(n["k"])("td",null,[Object(n["n"])("event.first: First index of the new data range to be loaded."),Object(n["k"])("br"),Object(n["n"])(" event.last: Last index of the new data range to be loaded. ")]),Object(n["k"])("td",null,"Callback to invoke in lazy mode to load new data.")])])])],-1),Te=Object(n["k"])("h5",null,"Methods",-1),Ve=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Name"),Object(n["k"])("th",null,"Parameters"),Object(n["k"])("th",null,"Description")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,"scrollTo"),Object(n["k"])("td",null,[Object(n["n"])(" left: Left position of scroll. "),Object(n["k"])("br"),Object(n["n"])(" top: Top position of scroll "),Object(n["k"])("br"),Object(n["n"])(" behavior: Behavior of scroll, valid values are 'auto' and 'smooth' ")]),Object(n["k"])("td",null,"Scroll to move to a specific position.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"scrollToIndex"),Object(n["k"])("td",null,[Object(n["n"])(" index: Index of item according to orientation mode. "),Object(n["k"])("br"),Object(n["n"])(" behavior: Behavior of scroll, valid values are 'auto' and 'smooth' ")]),Object(n["k"])("td",null,"Scroll to move to a specific item.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"scrollInView"),Object(n["k"])("td",null,[Object(n["n"])(" index: Index of item according to orientation mode. "),Object(n["k"])("br"),Object(n["n"])(" to: Defines the location of the item in view, valid values are 'to-start' and 'to-end'. "),Object(n["k"])("br"),Object(n["n"])(" behavior: Behavior of scroll, valid values are 'auto' and 'smooth' ")]),Object(n["k"])("td",null,"It is used to move the specified index into the view. It is a method that will usually be needed when keyboard support is added to the virtualScroller component.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"getRenderedRange"),Object(n["k"])("td",null,"-"),Object(n["k"])("td",null,"Returns the range of items added to the DOM.")])])])],-1),Ae=Object(n["k"])("h5",null,"Slots",-1),De=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Name"),Object(n["k"])("th",null,"Parameters")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,"content"),Object(n["k"])("td",null,[Object(n["n"])("items: An array of objects to display."),Object(n["k"])("br"),Object(n["n"])(" styleClass: Style class of the component"),Object(n["k"])("br"),Object(n["n"])(" contentRef: Referance of the content"),Object(n["k"])("br"),Object(n["n"])(" getItemOptions: Options of the items"),Object(n["k"])("br"),Object(n["n"])(" loading: Whether the data is loaded"),Object(n["k"])("br"),Object(n["n"])(" getLoaderOptions: Loader options of the items while the data is loading."),Object(n["k"])("br"),Object(n["n"])(" itemSize: The height/width of item according to orientation."),Object(n["k"])("br"),Object(n["n"])(" rows: The number of the rendered rows."),Object(n["k"])("br"),Object(n["n"])(" columns: The number of the rendered columns."),Object(n["k"])("br"),Object(n["n"])(" spacerStyle: The style of spacer element."),Object(n["k"])("br"),Object(n["n"])(" contentStyle: The style of content element."),Object(n["k"])("br"),Object(n["n"])(" vertical: Whether the orientation is vertical."),Object(n["k"])("br"),Object(n["n"])(" horizontal: Whether the orientation is horizontal."),Object(n["k"])("br"),Object(n["n"])(" both: Whether the orientation is both."),Object(n["k"])("br")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"item"),Object(n["k"])("td",null,[Object(n["n"])("item: Item instance"),Object(n["k"])("br"),Object(n["n"])(" options: Options of the item instance")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"loader"),Object(n["k"])("td",null,"options: Options of the loader items")])])])],-1),_e=Object(n["k"])("h5",null,"Styling",-1),$e=Object(n["n"])("Following is the list of structural style classes, for theming classes visit "),He=Object(n["n"])("theming"),Be=Object(n["n"])(" page."),Me=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Name"),Object(n["k"])("th",null,"Element")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-virtualscroller"),Object(n["k"])("td",null,"Container element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-virtualscroller-content"),Object(n["k"])("td",null,"Content element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-virtualscroller-loader"),Object(n["k"])("td",null,"Loader element.")])])])],-1),Ze=Object(n["k"])("h5",null,"Dependencies",-1),Ce=Object(n["k"])("p",null,"None.",-1);function Pe(e,t,l,i,s,o){var a=Object(n["P"])("router-link"),c=Object(n["P"])("AppDoc"),r=Object(n["Q"])("code");return Object(n["H"])(),Object(n["h"])(c,{name:"VirtualScrollerDemo",sources:s.sources,github:"virtualscroller/VirtualScrollerDemo.vue"},{default:Object(n["Z"])((function(){return[ne,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,se)),[[r,void 0,void 0,{script:!0}]]),oe,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,ce)),[[r]]),re,de,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,pe)),[[r]]),Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,he)),[[r,void 0,void 0,{script:!0}]]),be,ve,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,Oe)),[[r]]),fe,xe,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,ge)),[[r]]),Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,ze)),[[r,void 0,void 0,{script:!0}]]),we,Ie,Se,Le,Te,Ve,Ae,De,_e,Object(n["k"])("p",null,[$e,Object(n["o"])(a,{to:"/theming"},{default:Object(n["Z"])((function(){return[He]})),_:1}),Be]),Me,Ze,Ce]})),_:1},8,["sources"])}var Ne={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div class="virtualscroller-demo">\n        <div class="card">\n            <h5 class="mb-0">Basic</h5>\n            <div class="flex align-items-center flex-wrap">\n                <div class="flex flex-column mr-3 mt-3">\n                    <h6>Vertical</h6>\n                    <VirtualScroller :items="basicItems" :itemSize="50">\n                        <template v-slot:item="{ item, options }">\n                            <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                        </template>\n                    </VirtualScroller>\n                </div>\n\n                <div class="flex flex-column mr-3 mt-3">\n                    <h6>Horizontal</h6>\n                    <VirtualScroller :items="basicItems" :itemSize="50" orientation="horizontal">\n                        <template v-slot:item="{ item, options }">\n                            <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="width: 50px">{{ item }}</div>\n                        </template>\n                    </VirtualScroller>\n                </div>\n\n                <div class="flex flex-column mr-3 mt-3">\n                    <h6>Both</h6>\n                    <VirtualScroller :items="multiItems" :itemSize="[50, 100]" orientation="both">\n                        <template v-slot:item="{ item, options }">\n                            <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px" >\n                                <template v-for="(el, index) of item" :key="index">\n                                    <div style="width: 100px">{{ el }}</div>\n                                </template>\n                            </div>\n                        </template>\n                    </VirtualScroller>\n                </div>\n            </div>\n        </div>\n\n        <div class="card">\n            <h5 class="mb-0">Scroll Delay</h5>\n            <div class="flex align-items-center flex-wrap">\n                <div class="flex flex-column mr-3 mt-3">\n                    <h6>0ms Delay</h6>\n                    <VirtualScroller :items="basicItems" :itemSize="50">\n                        <template v-slot:item="{ item, options }">\n                            <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                        </template>\n                    </VirtualScroller>\n                </div>\n\n                <div class="flex flex-column mr-3 mt-3">\n                    <h6>150ms Delay</h6>\n                    <VirtualScroller :items="basicItems" :itemSize="50" :delay="150">\n                        <template v-slot:item="{ item, options }">\n                            <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                        </template>\n                    </VirtualScroller>\n                </div>\n\n                <div class="flex flex-column mr-3 mt-3">\n                    <h6>250ms Delay</h6>\n                    <VirtualScroller :items="basicItems" :itemSize="50" :delay="250">\n                        <template v-slot:item="{ item, options }">\n                            <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                        </template>\n                    </VirtualScroller>\n                </div>\n            </div>\n        </div>\n\n        <div class="card">\n            <h5 class="mb-0">Loading</h5>\n            <div class="flex align-items-center flex-wrap">\n                <div class="flex flex-column mr-3 mt-3">\n                    <h6>Basic</h6>\n                    <VirtualScroller :items="basicItems" :itemSize="50" showLoader :delay="250">\n                        <template v-slot:item="{ item, options }">\n                            <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                        </template>\n                    </VirtualScroller>\n                </div>\n\n                <div class="flex flex-column mr-3 mt-3">\n                    <h6>Templating</h6>\n                    <VirtualScroller class="custom-loading" :items="basicItems" :itemSize="50" showLoader :delay="250">\n                        <template v-slot:item="{ item, options }">\n                            <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                        </template>\n                        <template v-slot:loader="{ options }">\n                            <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px" >\n                                <Skeleton :width="options.even ? \'60%\' : \'50%\'" height="1.3rem" />\n                            </div>\n                        </template>\n                    </VirtualScroller>\n                </div>\n            </div>\n        </div>\n\n        <div class="card">\n            <h5 class="mb-0">Lazy</h5>\n            <div class="flex align-items-center flex-wrap">\n                <div class="flex flex-column mr-3 mt-3">\n                    <VirtualScroller :items="lazyItems" :itemSize="50" showLoader :delay="250" :loading="lazyLoading" :lazy=true @lazy-load="onLazyLoad">\n                        <template v-slot:item="{ item, options }">\n                            <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                        </template>\n                    </VirtualScroller>\n                </div>\n            </div>\n        </div>\n\n        <div class="card">\n            <h5 class="mb-0">Template</h5>\n            <div class="flex align-items-center flex-wrap">\n                <div class="flex flex-column mr-3 mt-3">\n                    <VirtualScroller class="custom-loading" :items="basicItems" :itemSize="25 * 7" showLoader :delay="250">\n                        <template v-slot:item="{ item, options }">\n                            <div :class="[\'custom-scroll-item scroll-item\', {\'odd\': options.odd}]">\n                                <div class="flex align-items-center px-2" style="height: 25px">{{`Item: ${item}`}}</div>\n                                <div class="flex align-items-center px-2" style="height: 25px">{{`Index: ${options.index}`}}</div>\n                                <div class="flex align-items-center px-2" style="height: 25px">{{`Count: ${options.count}`}}</div>\n                                <div class="flex align-items-center px-2" style="height: 25px">{{`First: ${options.first}`}}</div>\n                                <div class="flex align-items-center px-2" style="height: 25px">{{`Last: ${options.last}`}}</div>\n                                <div class="flex align-items-center px-2" style="height: 25px">{{`Even: ${options.even}`}}</div>\n                                <div class="flex align-items-center px-2" style="height: 25px">{{`Odd: ${options.odd}`}}</div>\n                            </div>\n                        </template>\n                        <template v-slot:loader="{ options }">\n                            <div :class="[\'custom-scroll-item scroll-item\', {\'odd\': options.odd}]">\n                                <div class="flex align-items-center px-2" style="height: 25px"><Skeleton width="60%" height="1.2rem" /></div>\n                                <div class="flex align-items-center px-2" style="height: 25px"><Skeleton width="50%" height="1.2rem" /></div>\n                                <div class="flex align-items-center px-2" style="height: 25px"><Skeleton width="60%" height="1.2rem" /></div>\n                                <div class="flex align-items-center px-2" style="height: 25px"><Skeleton width="50%" height="1.2rem" /></div>\n                                <div class="flex align-items-center px-2" style="height: 25px"><Skeleton width="60%" height="1.2rem" /></div>\n                                <div class="flex align-items-center px-2" style="height: 25px"><Skeleton width="50%" height="1.2rem" /></div>\n                                <div class="flex align-items-center px-2" style="height: 25px"><Skeleton width="60%" height="1.2rem" /></div>\n                            </div>\n                        </template>\n                    </VirtualScroller>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            basicItems: null,\n            multiItems: null,\n            lazyItems: null,\n            lazyLoading: false,\n            loadLazyTimeout: null,\n        }\n    },\n    mounted() {\n        this.basicItems = Array.from({ length: 100000 }).map((_, i) => `Item #${i}`);\n        this.multiItems = Array.from({ length: 1000 }).map((_, i) => Array.from({ length: 1000 }).map((_j, j) => `Item #${i}_${j}`));\n        this.lazyItems = Array.from({ length: 10000 });\n    },\n    methods: {\n        onLazyLoad(event) {\n            this.lazyLoading = true;\n\n            if (this.loadLazyTimeout) {\n                clearTimeout(this.loadLazyTimeout);\n            }\n\n            //imitate delay of a backend call\n            this.loadLazyTimeout = setTimeout(() => {\n                const { first, last } = event;\n                const lazyItems = [...this.lazyItems];\n\n                for (let i = first; i < last; i++) {\n                    lazyItems[i] = `Item #${i}`;\n                }\n\n                this.lazyItems = lazyItems;\n                this.lazyLoading = false;\n\n            }, Math.random() * 1000 + 250);\n        }\n    }\n}\n<\\/script>\n\n<style lang="scss" scoped>\n.virtualscroller-demo {\n\t::v-deep(.p-virtualscroller) {\n\t\theight: 200px;\n\t\twidth: 200px;\n\t\tborder: 1px solid var(--surface-border);\n\n        .scroll-item {\n            background-color: var(--surface-card);\n            display: flex;\n            align-items: center;\n        }\n\n        .custom-scroll-item {\n            flex-direction: column;\n            align-items: stretch;\n        }\n\n        .odd {\n            background-color: var(--surface-ground);\n        }\n\t}\n\n    ::v-deep(.p-horizontal-scroll) {\n        .p-virtualscroller-content {\n            display: flex;\n            flex-direction: row;\n        }\n\n        .scroll-item {\n            writing-mode: vertical-lr;\n        }\n    }\n\n    ::v-deep(.custom-loading > .p-virtualscroller-loader) {\n        display: block;\n    }\n}\n</style>\n\n'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div class="virtualscroller-demo">\n        <div class="card">\n            <h5 class="mb-0">Basic</h5>\n            <div class="flex align-items-center flex-wrap">\n                <div class="flex flex-column mr-3 mt-3">\n                    <h6>Vertical</h6>\n                    <VirtualScroller :items="basicItems" :itemSize="50">\n                        <template v-slot:item="{ item, options }">\n                            <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                        </template>\n                    </VirtualScroller>\n                </div>\n\n                <div class="flex flex-column mr-3 mt-3">\n                    <h6>Horizontal</h6>\n                    <VirtualScroller :items="basicItems" :itemSize="50" orientation="horizontal">\n                        <template v-slot:item="{ item, options }">\n                            <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="width: 50px">{{ item }}</div>\n                        </template>\n                    </VirtualScroller>\n                </div>\n\n                <div class="flex flex-column mr-3 mt-3">\n                    <h6>Both</h6>\n                    <VirtualScroller :items="multiItems" :itemSize="[50, 100]" orientation="both">\n                        <template v-slot:item="{ item, options }">\n                            <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px" >\n                                <template v-for="(el, index) of item" :key="index">\n                                    <div style="width: 100px">{{ el }}</div>\n                                </template>\n                            </div>\n                        </template>\n                    </VirtualScroller>\n                </div>\n            </div>\n        </div>\n\n        <div class="card">\n            <h5 class="mb-0">Scroll Delay</h5>\n            <div class="flex align-items-center flex-wrap">\n                <div class="flex flex-column mr-3 mt-3">\n                    <h6>0ms Delay</h6>\n                    <VirtualScroller :items="basicItems" :itemSize="50">\n                        <template v-slot:item="{ item, options }">\n                            <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                        </template>\n                    </VirtualScroller>\n                </div>\n\n                <div class="flex flex-column mr-3 mt-3">\n                    <h6>150ms Delay</h6>\n                    <VirtualScroller :items="basicItems" :itemSize="50" :delay="150">\n                        <template v-slot:item="{ item, options }">\n                            <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                        </template>\n                    </VirtualScroller>\n                </div>\n\n                <div class="flex flex-column mr-3 mt-3">\n                    <h6>250ms Delay</h6>\n                    <VirtualScroller :items="basicItems" :itemSize="50" :delay="250">\n                        <template v-slot:item="{ item, options }">\n                            <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                        </template>\n                    </VirtualScroller>\n                </div>\n            </div>\n        </div>\n\n        <div class="card">\n            <h5 class="mb-0">Loading</h5>\n            <div class="flex align-items-center flex-wrap">\n                <div class="flex flex-column mr-3 mt-3">\n                    <h6>Basic</h6>\n                    <VirtualScroller :items="basicItems" :itemSize="50" showLoader :delay="250">\n                        <template v-slot:item="{ item, options }">\n                            <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                        </template>\n                    </VirtualScroller>\n                </div>\n\n                <div class="flex flex-column mr-3 mt-3">\n                    <h6>Templating</h6>\n                    <VirtualScroller class="custom-loading" :items="basicItems" :itemSize="50" showLoader :delay="250">\n                        <template v-slot:item="{ item, options }">\n                            <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                        </template>\n                        <template v-slot:loader="{ options }">\n                            <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px" >\n                                <Skeleton :width="options.even ? \'60%\' : \'50%\'" height="1.3rem" />\n                            </div>\n                        </template>\n                    </VirtualScroller>\n                </div>\n            </div>\n        </div>\n\n        <div class="card">\n            <h5 class="mb-0">Lazy</h5>\n            <div class="flex align-items-center flex-wrap">\n                <div class="flex flex-column mr-3 mt-3">\n                    <VirtualScroller :items="lazyItems" :itemSize="50" showLoader :delay="250" :loading="lazyLoading" :lazy=true @lazy-load="onLazyLoad">\n                        <template v-slot:item="{ item, options }">\n                            <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                        </template>\n                    </VirtualScroller>\n                </div>\n            </div>\n        </div>\n\n        <div class="card">\n            <h5 class="mb-0">Template</h5>\n            <div class="flex align-items-center flex-wrap">\n                <div class="flex flex-column mr-3 mt-3">\n                    <VirtualScroller class="custom-loading" :items="basicItems" :itemSize="25 * 7" showLoader :delay="250">\n                        <template v-slot:item="{ item, options }">\n                            <div :class="[\'custom-scroll-item scroll-item\', {\'odd\': options.odd}]">\n                                <div class="flex align-items-center px-2" style="height: 25px">{{`Item: ${item}`}}</div>\n                                <div class="flex align-items-center px-2" style="height: 25px">{{`Index: ${options.index}`}}</div>\n                                <div class="flex align-items-center px-2" style="height: 25px">{{`Count: ${options.count}`}}</div>\n                                <div class="flex align-items-center px-2" style="height: 25px">{{`First: ${options.first}`}}</div>\n                                <div class="flex align-items-center px-2" style="height: 25px">{{`Last: ${options.last}`}}</div>\n                                <div class="flex align-items-center px-2" style="height: 25px">{{`Even: ${options.even}`}}</div>\n                                <div class="flex align-items-center px-2" style="height: 25px">{{`Odd: ${options.odd}`}}</div>\n                            </div>\n                        </template>\n                        <template v-slot:loader="{ options }">\n                            <div :class="[\'custom-scroll-item scroll-item\', {\'odd\': options.odd}]">\n                                <div class="flex align-items-center px-2" style="height: 25px"><Skeleton width="60%" height="1.2rem" /></div>\n                                <div class="flex align-items-center px-2" style="height: 25px"><Skeleton width="50%" height="1.2rem" /></div>\n                                <div class="flex align-items-center px-2" style="height: 25px"><Skeleton width="60%" height="1.2rem" /></div>\n                                <div class="flex align-items-center px-2" style="height: 25px"><Skeleton width="50%" height="1.2rem" /></div>\n                                <div class="flex align-items-center px-2" style="height: 25px"><Skeleton width="60%" height="1.2rem" /></div>\n                                <div class="flex align-items-center px-2" style="height: 25px"><Skeleton width="50%" height="1.2rem" /></div>\n                                <div class="flex align-items-center px-2" style="height: 25px"><Skeleton width="60%" height="1.2rem" /></div>\n                            </div>\n                        </template>\n                    </VirtualScroller>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref, onMounted } from \'vue\';\n\nexport default {\n    setup() {\n        const basicItems = ref(Array.from({ length: 100000 }).map((_, i) => `Item #${i}`));\n        const multiItems = ref(Array.from({ length: 1000 }).map((_, i) => Array.from({ length: 1000 }).map((_j, j) => `Item #${i}_${j}`)));\n        const lazyItems = ref(Array.from({ length: 10000 }));\n        const lazyLoading = ref(false);\n        const loadLazyTimeout = ref(null);\n\n        const onLazyLoad = (event) => {\n            lazyLoading.value = true;\n\n            if (loadLazyTimeout.value) {\n                clearTimeout(loadLazyTimeout.value);\n            }\n\n            //imitate delay of a backend call\n            loadLazyTimeout.value = setTimeout(() => {\n                const { first, last } = event;\n                const _lazyItems = [...lazyItems.value];\n\n                for (let i = first; i < last; i++) {\n                    _lazyItems[i] = `Item #${i}`;\n                }\n\n                lazyItems.value = _lazyItems;\n                lazyLoading.value = false;\n\n            }, Math.random() * 1000 + 250);\n        }\n\n        return { basicItems, multiItems, lazyItems, lazyLoading, onLazyLoad }\n    },\n    methods: {\n\n    }\n}\n<\\/script>\n\n<style lang="scss" scoped>\n.virtualscroller-demo {\n\t::v-deep(.p-virtualscroller) {\n\t\theight: 200px;\n\t\twidth: 200px;\n\t\tborder: 1px solid var(--surface-border);\n\n        .scroll-item {\n            background-color: var(--surface-card);\n            display: flex;\n            align-items: center;\n        }\n\n        .custom-scroll-item {\n            flex-direction: column;\n            align-items: stretch;\n        }\n\n        .odd {\n            background-color: var(--surface-ground);\n        }\n\t}\n\n    ::v-deep(.p-horizontal-scroll) {\n        .p-virtualscroller-content {\n            display: flex;\n            flex-direction: row;\n        }\n\n        .scroll-item {\n            writing-mode: vertical-lr;\n        }\n    }\n\n    ::v-deep(.custom-loading > .p-virtualscroller-loader) {\n        display: block;\n    }\n}\n</style>\n'},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/skeleton/skeleton.min.js"><\\/script>',content:'<div id="app">\n            <div class="virtualscroller-demo">\n                <div class="card">\n                    <h5 class="mb-0">Basic</h5>\n                    <div class="flex align-items-center flex-wrap">\n                        <div class="flex flex-column mr-3 mt-3">\n                            <h6>Vertical</h6>\n                            <p-virtualscroller :items="basicItems" :item-size="50">\n                                <template v-slot:item="{ item, options }">\n                                    <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                                </template>\n                            </p-virtualscroller>\n                        </div>\n\n                        <div class="flex flex-column mr-3 mt-3">\n                            <h6>Horizontal</h6>\n                            <p-virtualscroller :items="basicItems" :item-size="50" orientation="horizontal">\n                                <template v-slot:item="{ item, options }">\n                                    <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="width: 50px">{{ item }}</div>\n                                </template>\n                            </p-virtualscroller>\n                        </div>\n\n                        <div class="flex flex-column mr-3 mt-3">\n                            <h6>Both</h6>\n                            <p-virtualscroller :items="multiItems" :item-size="[50, 100]" orientation="both">\n                                <template v-slot:item="{ item, options }">\n                                    <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px" >\n                                        <template v-for="(el, index) of item" :key="index">\n                                            <div style="width: 100px">{{ el }}</div>\n                                        </template>\n                                    </div>\n                                </template>\n                            </p-virtualscroller>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="card">\n                    <h5 class="mb-0">Scroll Delay</h5>\n                    <div class="flex align-items-center flex-wrap">\n                        <div class="flex flex-column mr-3 mt-3">\n                            <h6>0ms Delay</h6>\n                            <p-virtualscroller :items="basicItems" :item-size="50">\n                                <template v-slot:item="{ item, options }">\n                                    <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                                </template>\n                            </p-virtualscroller>\n                        </div>\n\n                        <div class="flex flex-column mr-3 mt-3">\n                            <h6>150ms Delay</h6>\n                            <p-virtualscroller :items="basicItems" :item-size="50" :delay="150">\n                                <template v-slot:item="{ item, options }">\n                                    <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                                </template>\n                            </p-virtualscroller>\n                        </div>\n\n                        <div class="flex flex-column mr-3 mt-3">\n                            <h6>250ms Delay</h6>\n                            <p-virtualscroller :items="basicItems" :item-size="50" :delay="250">\n                                <template v-slot:item="{ item, options }">\n                                    <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                                </template>\n                            </p-virtualscroller>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="card">\n                    <h5 class="mb-0">Loading</h5>\n                    <div class="flex align-items-center flex-wrap">\n                        <div class="flex flex-column mr-3 mt-3">\n                            <h6>Basic</h6>\n                            <p-virtualscroller :items="basicItems" :item-size="50" show-loader :delay="250">\n                                <template v-slot:item="{ item, options }">\n                                    <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                                </template>\n                            </p-virtualscroller>\n                        </div>\n\n                        <div class="flex flex-column mr-3 mt-3">\n                            <h6>Templating</h6>\n                            <p-virtualscroller class="custom-loading" :items="basicItems" :item-size="50" show-loader :delay="250">\n                                <template v-slot:item="{ item, options }">\n                                    <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                                </template>\n                                <template v-slot:loader="{ options }">\n                                    <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px" >\n                                        <p-skeleton :width="options.even ? \'60%\' : \'50%\'" height="1.3rem"></p-skeleton>\n                                    </div>\n                                </template>\n                            </p-virtualscroller>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="card">\n                    <h5 class="mb-0">Lazy</h5>\n                    <div class="flex align-items-center flex-wrap">\n                        <div class="flex flex-column mr-3 mt-3">\n                            <p-virtualscroller :items="lazyItems" :item-size="50" show-loader :delay="250" :loading="lazyLoading" :lazy=true @lazy-load="onLazyLoad">\n                                <template v-slot:item="{ item, options }">\n                                    <div :class="[\'scroll-item p-2\', {\'odd\': options.odd}]" style="height: 50px">{{ item }}</div>\n                                </template>\n                            </p-virtualscroller>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="card">\n                    <h5 class="mb-0">Template</h5>\n                    <div class="flex align-items-center flex-wrap">\n                        <div class="flex flex-column mr-3 mt-3">\n                            <p-virtualscroller class="custom-loading" :items="basicItems" :item-size="25 * 7" show-loader :delay="250">\n                                <template v-slot:item="{ item, options }">\n                                    <div :class="[\'custom-scroll-item scroll-item\', {\'odd\': options.odd}]">\n                                        <div class="flex align-items-center px-2" style="height: 25px">{{`Item: ${item}`}}</div>\n                                        <div class="flex align-items-center px-2" style="height: 25px">{{`Index: ${options.index}`}}</div>\n                                        <div class="flex align-items-center px-2" style="height: 25px">{{`Count: ${options.count}`}}</div>\n                                        <div class="flex align-items-center px-2" style="height: 25px">{{`First: ${options.first}`}}</div>\n                                        <div class="flex align-items-center px-2" style="height: 25px">{{`Last: ${options.last}`}}</div>\n                                        <div class="flex align-items-center px-2" style="height: 25px">{{`Even: ${options.even}`}}</div>\n                                        <div class="flex align-items-center px-2" style="height: 25px">{{`Odd: ${options.odd}`}}</div>\n                                    </div>\n                                </template>\n                                <template v-slot:loader="{ options }">\n                                    <div :class="[\'custom-scroll-item scroll-item\', {\'odd\': options.odd}]">\n                                        <div class="flex align-items-center px-2" style="height: 25px"><p-skeleton width="60%" height="1.2rem"></p-skeleton></div>\n                                        <div class="flex align-items-center px-2" style="height: 25px"><p-skeleton width="50%" height="1.2rem"></p-skeleton></div>\n                                        <div class="flex align-items-center px-2" style="height: 25px"><p-skeleton width="60%" height="1.2rem"></p-skeleton></div>\n                                        <div class="flex align-items-center px-2" style="height: 25px"><p-skeleton width="50%" height="1.2rem"></p-skeleton></div>\n                                        <div class="flex align-items-center px-2" style="height: 25px"><p-skeleton width="60%" height="1.2rem"></p-skeleton></div>\n                                        <div class="flex align-items-center px-2" style="height: 25px"><p-skeleton width="50%" height="1.2rem"></p-skeleton></div>\n                                        <div class="flex align-items-center px-2" style="height: 25px"><p-skeleton width="60%" height="1.2rem"></p-skeleton></div>\n                                    </div>\n                                </template>\n                            </p-virtualscroller>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <script type="module">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                const basicItems = ref(Array.from({ length: 100000 }).map((_, i) => `Item #${i}`));\n                const multiItems = ref(Array.from({ length: 1000 }).map((_, i) => Array.from({ length: 1000 }).map((_j, j) => `Item #${i}_${j}`)));\n                const lazyItems = ref(Array.from({ length: 10000 }));\n                const lazyLoading = ref(false);\n                const loadLazyTimeout = ref(null);\n\n                const onLazyLoad = (event) => {\n                    lazyLoading.value = true;\n\n                    if (loadLazyTimeout.value) {\n                        clearTimeout(loadLazyTimeout.value);\n                    }\n\n                    //imitate delay of a backend call\n                    loadLazyTimeout.value = setTimeout(() => {\n                        const { first, last } = event;\n                        const _lazyItems = [...lazyItems.value];\n\n                        for (let i = first; i < last; i++) {\n                            _lazyItems[i] = `Item #${i}`;\n                        }\n\n                        lazyItems.value = _lazyItems;\n                        lazyLoading.value = false;\n\n                    }, Math.random() * 1000 + 250);\n                }\n\n                return { basicItems, multiItems, lazyItems, lazyLoading, onLazyLoad }\n            },\n            components: {\n                "p-virtualscroller": primevue.virtualscroller,\n                "p-skeleton": primevue.skeleton\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount("#app");\n        <\\/script>\n\n        <style>\n            .virtualscroller-demo .p-virtualscroller {\n                height: 200px;\n                width: 200px;\n                border: 1px solid var(--surface-border);\n            }\n\n            .virtualscroller-demo .p-virtualscroller .scroll-item {\n                background-color: var(--surface-card);\n                display: flex;\n                align-items: center;\n            }\n\n            .virtualscroller-demo .p-virtualscroller .custom-scroll-item {\n                flex-direction: column;\n                align-items: stretch;\n            }\n\n            .virtualscroller-demo .p-virtualscroller .odd {\n                background-color: var(--surface-ground);\n            }\n\n            .virtualscroller-demo .p-horizontal-scroll .p-virtualscroller-content {\n                display: flex;\n                flex-direction: row;\n            }\n\n            .virtualscroller-demo .p-horizontal-scroll .scroll-item {\n                writing-mode: vertical-lr;\n            }\n\n            .virtualscroller-demo .custom-loading > .p-virtualscroller-loader {\n                display: block;\n            }\n\n        </style>\n'}}}}},We=l("6b0d"),Fe=l.n(We);const Ee=Fe()(Ne,[["render",Pe]]);var Re=Ee,qe={data:function(){return{basicItems:null,multiItems:null,lazyItems:null,lazyLoading:!1,loadLazyTimeout:null}},mounted:function(){this.basicItems=Array.from({length:1e5}).map((function(e,t){return"Item #".concat(t)})),this.multiItems=Array.from({length:1e3}).map((function(e,t){return Array.from({length:1e3}).map((function(e,l){return"Item #".concat(t,"_").concat(l)}))})),this.lazyItems=Array.from({length:1e5})},methods:{onLazyLoad:function(e){var t=this;this.lazyLoading=!0,this.loadLazyTimeout&&clearTimeout(this.loadLazyTimeout),this.loadLazyTimeout=setTimeout((function(){for(var l=e.first,n=e.last,i=Object(le["a"])(t.lazyItems),s=l;s<n;s++)i[s]="Item #".concat(s);t.lazyItems=i,t.lazyLoading=!1}),1e3*Math.random()+250)}},components:{VirtualScrollerDoc:Re}};l("3859");const Ue=Fe()(qe,[["render",te],["__scopeId","data-v-f93854e8"]]);t["default"]=Ue},3859:function(e,t,l){"use strict";l("6d476")},"6d476":function(e,t,l){var n=l("befc");n.__esModule&&(n=n.default),"string"===typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);var i=l("499e").default;i("9aeb2236",n,!0,{sourceMap:!1,shadowMode:!1})},befc:function(e,t,l){var n=l("24fb");t=n(!1),t.push([e.i,".virtualscroller-demo[data-v-f93854e8] .p-virtualscroller{height:200px;width:200px;border:1px solid var(--surface-border)}.virtualscroller-demo[data-v-f93854e8] .p-virtualscroller .scroll-item{background-color:var(--surface-card);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.virtualscroller-demo[data-v-f93854e8] .p-virtualscroller .custom-scroll-item{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch}.virtualscroller-demo[data-v-f93854e8] .p-virtualscroller .odd{background-color:var(--surface-ground)}.virtualscroller-demo[data-v-f93854e8] .p-horizontal-scroll .p-virtualscroller-content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.virtualscroller-demo[data-v-f93854e8] .p-horizontal-scroll .scroll-item{-webkit-writing-mode:vertical-lr;-ms-writing-mode:tb-lr;writing-mode:vertical-lr}.virtualscroller-demo[data-v-f93854e8] .custom-loading>.p-virtualscroller-loader{display:block}",""]),e.exports=t}}]);