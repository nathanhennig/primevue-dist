(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d230fb5"],{ef31:function(e,n,t){"use strict";t.r(n);var r=t("7a23"),o={class:"content-section introduction"},l=Object(r["k"])("div",{class:"feature-intro"},[Object(r["k"])("h1",null,[Object(r["n"])("TreeTable "),Object(r["k"])("span",null,"Sort")]),Object(r["k"])("p",null,"TreeTable supports both single column and multiple column sorting..")],-1),a={class:"content-section implementation"},d={class:"card"},i=Object(r["k"])("h5",null,"Single Column Sorting",-1),u={class:"card"},s=Object(r["k"])("h5",null,"Multiple Column Sorting",-1),c={class:"card"},m=Object(r["k"])("h5",null,"Removable Sort",-1);function p(e,n,t,p,b,v){var h=Object(r["P"])("AppDemoActions"),f=Object(r["P"])("Column"),S=Object(r["P"])("TreeTable"),T=Object(r["P"])("AppDoc");return Object(r["H"])(),Object(r["j"])("div",null,[Object(r["k"])("div",o,[l,Object(r["o"])(h)]),Object(r["k"])("div",a,[Object(r["k"])("div",d,[i,Object(r["o"])(S,{value:b.nodes,sortMode:"single"},{default:Object(r["Z"])((function(){return[Object(r["o"])(f,{field:"name",header:"Name",expander:!0,sortable:!0}),Object(r["o"])(f,{field:"size",header:"Size",sortable:!0}),Object(r["o"])(f,{field:"type",header:"Type",sortable:!0})]})),_:1},8,["value"])]),Object(r["k"])("div",u,[s,Object(r["o"])(S,{value:b.nodes,sortMode:"multiple"},{default:Object(r["Z"])((function(){return[Object(r["o"])(f,{field:"name",header:"Name",expander:!0,sortable:!0}),Object(r["o"])(f,{field:"size",header:"Size",sortable:!0}),Object(r["o"])(f,{field:"type",header:"Type",sortable:!0})]})),_:1},8,["value"])]),Object(r["k"])("div",c,[m,Object(r["o"])(S,{value:b.nodes,sortMode:"single",removableSort:""},{default:Object(r["Z"])((function(){return[Object(r["o"])(f,{field:"name",header:"Name",expander:!0,sortable:!0}),Object(r["o"])(f,{field:"size",header:"Size",sortable:!0}),Object(r["o"])(f,{field:"type",header:"Type",sortable:!0})]})),_:1},8,["value"])])]),Object(r["o"])(T,{name:"TreeTableSortDemo",sources:b.sources,service:["NodeService"],data:["treetablenodes"],github:"treetable/TreeTableSortDemo.vue"},null,8,["sources"])])}var b=t("82f4"),v={data:function(){return{nodes:null,sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div>\n        <div class="card">\n            <h5>Single Column Sorting</h5>\n            <TreeTable :value="nodes" sortMode="single">\n                <Column field="name" header="Name" :expander="true" :sortable="true"></Column>\n                <Column field="size" header="Size" :sortable="true"></Column>\n                <Column field="type" header="Type" :sortable="true"></Column>\n            </TreeTable>\n        </div>\n\n        <div class="card">\n            <h5>Multiple Column Sorting</h5>\n            <TreeTable :value="nodes" sortMode="multiple">\n                <Column field="name" header="Name" :expander="true" :sortable="true"></Column>\n                <Column field="size" header="Size" :sortable="true"></Column>\n                <Column field="type" header="Type" :sortable="true"></Column>\n            </TreeTable>\n        </div>\n\n        <div class="card">\n            <h5>Removable Sort</h5>\n            <TreeTable :value="nodes" sortMode="single" removableSort>\n                <Column field="name" header="Name" :expander="true" :sortable="true"></Column>\n                <Column field="size" header="Size" :sortable="true"></Column>\n                <Column field="type" header="Type" :sortable="true"></Column>\n            </TreeTable>\n        </div>\n    </div>                    \n</template>\n\n<script>\nimport NodeService from \'./service/NodeService\';\n\nexport default {\n    data() {\n        return {\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    }\n}\n<\\/script>\n'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div>\n        <div class="card">\n            <h5>Single Column Sorting</h5>\n            <TreeTable :value="nodes" sortMode="single">\n                <Column field="name" header="Name" :expander="true" :sortable="true"></Column>\n                <Column field="size" header="Size" :sortable="true"></Column>\n                <Column field="type" header="Type" :sortable="true"></Column>\n            </TreeTable>\n        </div>\n\n        <div class="card">\n            <h5>Multiple Column Sorting</h5>\n            <TreeTable :value="nodes" sortMode="multiple">\n                <Column field="name" header="Name" :expander="true" :sortable="true"></Column>\n                <Column field="size" header="Size" :sortable="true"></Column>\n                <Column field="type" header="Type" :sortable="true"></Column>\n            </TreeTable>\n        </div>\n\n        <div class="card">\n            <h5>Removable Sort</h5>\n            <TreeTable :value="nodes" sortMode="single" removableSort>\n                <Column field="name" header="Name" :expander="true" :sortable="true"></Column>\n                <Column field="size" header="Size" :sortable="true"></Column>\n                <Column field="type" header="Type" :sortable="true"></Column>\n            </TreeTable>\n        </div>\n    </div>                  \n</template>\n\n<script>\nimport { ref, onMounted } from \'vue\';\nimport NodeService from \'./service/NodeService\';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            nodeService.value.getTreeTableNodes().then(data => nodes.value = data);\n        })\n\n        const nodes = ref();\n        const nodeService = ref(new NodeService());\n\n        return { nodes, nodeService }\n    }\n}\n<\\/script>\n'},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/treetable/treetable.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/column/column.min.js"><\\/script>\n        <script src="./NodeService.js"><\\/script>',content:'<div id="app">\n            <div class="card">\n                <h5>Single Column Sorting</h5>\n                <p-treetable :value="nodes" sort-mode="single">\n                    <p-column field="name" header="Name" :expander="true" :sortable="true"></p-column>\n                    <p-column field="size" header="Size" :sortable="true"></p-column>\n                    <p-column field="type" header="Type" :sortable="true"></p-column>\n                </p-treetable>\n            </div>\n\n            <div class="card">\n                <h5>Multiple Column Sorting</h5>\n                <p-treetable :value="nodes" sort-mode="multiple">\n                    <p-column field="name" header="Name" :expander="true" :sortable="true"></p-column>\n                    <p-column field="size" header="Size" :sortable="true"></p-column>\n                    <p-column field="type" header="Type" :sortable="true"></p-column>\n                </p-treetable>\n            </div>\n\n            <div class="card">\n                <h5>Removable Sort</h5>\n                <p-treetable :value="nodes" sort-mode="single" removable-sort>\n                    <p-column field="name" header="Name" :expander="true" :sortable="true"></p-column>\n                    <p-column field="size" header="Size" :sortable="true"></p-column>\n                    <p-column field="type" header="Type" :sortable="true"></p-column>\n                </p-treetable>\n            </div>\n        </div>                  \n\n        <script type="module">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    nodeService.value.getTreeTableNodes().then(data => nodes.value = data);\n                })\n\n                const nodes = ref();\n                const nodeService = ref(new NodeService());\n\n                return { nodes, nodeService }\n            },\n            components: {\n                "p-treetable": primevue.treetable,\n                "p-column": primevue.column\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount("#app");\n        <\\/script>\n'}}}},nodeService:null,created:function(){this.nodeService=new b["a"]},mounted:function(){var e=this;this.nodeService.getTreeTableNodes().then((function(n){return e.nodes=n}))}},h=t("6b0d"),f=t.n(h);const S=f()(v,[["render",p]]);n["default"]=S}}]);