(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0af9fa"],{"0eb1":function(e,t,n){"use strict";n.r(t);var c=n("7a23"),l={class:"content-section introduction"},o=Object(c["k"])("div",{class:"feature-intro"},[Object(c["k"])("h1",null,"ToggleButton"),Object(c["k"])("p",null,"ToggleButton is used to select a boolean value using a button.")],-1),u={class:"content-section implementation"},b={class:"card"},i=Object(c["k"])("h5",null,"Basic",-1),r=Object(c["k"])("h5",null,"Customized",-1);function a(e,t,n,a,d,s){var p=Object(c["P"])("AppDemoActions"),j=Object(c["P"])("ToggleButton"),k=Object(c["P"])("ToggleButtonDoc");return Object(c["H"])(),Object(c["j"])("div",null,[Object(c["k"])("div",l,[o,Object(c["o"])(p)]),Object(c["k"])("div",u,[Object(c["k"])("div",b,[i,Object(c["o"])(j,{modelValue:d.checked1,"onUpdate:modelValue":t[0]||(t[0]=function(e){return d.checked1=e}),onIcon:"pi pi-check",offIcon:"pi pi-times"},null,8,["modelValue"]),r,Object(c["o"])(j,{modelValue:d.checked2,"onUpdate:modelValue":t[1]||(t[1]=function(e){return d.checked2=e}),onLabel:"I confirm",offLabel:"I reject",onIcon:"pi pi-check",offIcon:"pi pi-times",style:{width:"10em"}},null,8,["modelValue"])])]),Object(c["o"])(k)])}var d=Object(c["k"])("h5",null,"Import via Module",-1),s=Object(c["k"])("code",null,"\nimport ToggleButton from 'primevue/togglebutton';\n\n",-1),p=[s],j=Object(c["k"])("h5",null,"Import via CDN",-1),k=Object(c["k"])("code",null,'\n<script src="https://unpkg.com/primevue@^3/core/core.min.js"><\/script>\n<script src="https://unpkg.com/primevue@^3/togglebutton/togglebutton.min.js"><\/script>\n\n',-1),O=[k],h=Object(c["k"])("h5",null,"Getting Started",-1),m=Object(c["k"])("p",null,"Two-way binding to a boolean property is defined using the standard v-model directive.",-1),f=Object(c["k"])("code",null,'\n<ToggleButton v-model="checked" />\n\n',-1),g=[f],v=Object(c["k"])("p",null,"As model is two-way binding enabled, setting the bound value as true displays the state as checked.",-1),I=Object(c["k"])("code",null,"\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tchecked: true\n\t\t}\n\t}\n}\n\n",-1),w=[I],y=Object(c["k"])("h5",null,"Labels and Icons",-1),B=Object(c["k"])("p",null,[Object(c["n"])("Icons and Labels can be customized using "),Object(c["k"])("i",null,"onLabel"),Object(c["n"])(", "),Object(c["k"])("i",null,"offLabel"),Object(c["n"])(", "),Object(c["k"])("i",null,"onIcon"),Object(c["n"])(" and "),Object(c["k"])("i",null,"offIcon"),Object(c["n"])(" properties.")],-1),L=Object(c["k"])("code",null,'\n<ToggleButton v-model="checked" onLabel="I confirm" offLabel="I reject" onIcon="pi pi-check" offIcon="pi pi-times" />\n\n',-1),T=[L],A=Object(c["k"])("h5",null,"Properties",-1),D=Object(c["k"])("p",null,"Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.",-1),P=Object(c["k"])("div",{class:"doc-tablewrapper"},[Object(c["k"])("table",{class:"doc-table"},[Object(c["k"])("thead",null,[Object(c["k"])("tr",null,[Object(c["k"])("th",null,"Name"),Object(c["k"])("th",null,"Type"),Object(c["k"])("th",null,"Default"),Object(c["k"])("th",null,"Description")])]),Object(c["k"])("tbody",null,[Object(c["k"])("tr",null,[Object(c["k"])("td",null,"modelValue"),Object(c["k"])("td",null,"any"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Value of the component.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"onIcon"),Object(c["k"])("td",null,"string"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Icon for the on state.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"offIcon"),Object(c["k"])("td",null,"string"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Icon for the off state.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"onLabel"),Object(c["k"])("td",null,"string"),Object(c["k"])("td",null,"yes"),Object(c["k"])("td",null,"Label for the on state.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"offLabel"),Object(c["k"])("td",null,"string"),Object(c["k"])("td",null,"no"),Object(c["k"])("td",null,"Label for the off state.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"iconPos"),Object(c["k"])("td",null,"string"),Object(c["k"])("td",null,"left"),Object(c["k"])("td",null,'Position of the icon, valid values are "left" and "right".')])])])],-1),V=Object(c["k"])("h5",null,"Events",-1),C=Object(c["k"])("div",{class:"doc-tablewrapper"},[Object(c["k"])("table",{class:"doc-table"},[Object(c["k"])("thead",null,[Object(c["k"])("tr",null,[Object(c["k"])("th",null,"Name"),Object(c["k"])("th",null,"Parameters"),Object(c["k"])("th",null,"Description")])]),Object(c["k"])("tbody",null,[Object(c["k"])("tr",null,[Object(c["k"])("td",null,"change"),Object(c["k"])("td",null,"event: Browser event"),Object(c["k"])("td",null,"Callback to invoke on value change.")])])])],-1),N=Object(c["k"])("h5",null,"Styling",-1),H=Object(c["n"])("Following is the list of structural style classes, for theming classes visit "),z=Object(c["n"])("theming"),S=Object(c["n"])(" page."),x=Object(c["k"])("div",{class:"doc-tablewrapper"},[Object(c["k"])("table",{class:"doc-table"},[Object(c["k"])("thead",null,[Object(c["k"])("tr",null,[Object(c["k"])("th",null,"Name"),Object(c["k"])("th",null,"Element")])]),Object(c["k"])("tbody",null,[Object(c["k"])("tr",null,[Object(c["k"])("td",null,"p-togglebutton"),Object(c["k"])("td",null,"Container element")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"p-button-icon"),Object(c["k"])("td",null,"Icon element.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"p-button-text"),Object(c["k"])("td",null,"Label element.")])])])],-1),E=Object(c["k"])("h5",null,"Dependencies",-1),F=Object(c["k"])("p",null,"None.",-1);function J(e,t,n,l,o,u){var b=Object(c["P"])("router-link"),i=Object(c["P"])("AppDoc"),r=Object(c["Q"])("code");return Object(c["H"])(),Object(c["h"])(i,{name:"ToggleButtonDemo",sources:o.sources,github:"togglebutton/ToggleButtonDemo.vue"},{default:Object(c["Z"])((function(){return[d,Object(c["ab"])((Object(c["H"])(),Object(c["j"])("pre",null,p)),[[r,void 0,void 0,{script:!0}]]),j,Object(c["ab"])((Object(c["H"])(),Object(c["j"])("pre",null,O)),[[r]]),h,m,Object(c["ab"])((Object(c["H"])(),Object(c["j"])("pre",null,g)),[[r]]),v,Object(c["ab"])((Object(c["H"])(),Object(c["j"])("pre",null,w)),[[r,void 0,void 0,{script:!0}]]),y,B,Object(c["ab"])((Object(c["H"])(),Object(c["j"])("pre",null,T)),[[r]]),A,D,P,V,C,N,Object(c["k"])("p",null,[H,Object(c["o"])(b,{to:"/theming"},{default:Object(c["Z"])((function(){return[z]})),_:1}),S]),x,E,F]})),_:1},8,["sources"])}var U={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div>\n        <h5>Basic</h5>\n        <ToggleButton v-model="checked1" onIcon="pi pi-check" offIcon="pi pi-times" />\n\n        <h5>Customized</h5>\n        <ToggleButton v-model="checked2" onLabel="I confirm" offLabel="I reject" onIcon="pi pi-check" offIcon="pi pi-times" style="width: 10em" />\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            checked1: false,\n            checked2: true\n        }\n    }\n}\n<\\/script>\n'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div>\n        <h5>Basic</h5>\n        <ToggleButton v-model="checked1" onIcon="pi pi-check" offIcon="pi pi-times" />\n\n        <h5>Customized</h5>\n        <ToggleButton v-model="checked2" onLabel="I confirm" offLabel="I reject" onIcon="pi pi-check" offIcon="pi pi-times" style="width: 10em" />\n    </div>\n</template>\n\n<script>\nimport { ref } from \'vue\';\n\nexport default {\n    setup() {\n        const checked1 = ref(false);\n        const checked2 = ref(true);\n\n        return { checked1, checked2 }\n    }\n}\n<\\/script>\n'},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/togglebutton/togglebutton.min.js"><\\/script>',content:'<div id="app">\n            <h5>Basic</h5>\n            <p-togglebutton v-model="checked1" on-icon="pi pi-check" off-icon="pi pi-times"></p-togglebutton>\n\n            <h5>Customized</h5>\n            <p-togglebutton v-model="checked2" on-label="I confirm" off-label="I reject" on-icon="pi pi-check" off-icon="pi pi-times" style="width: 10em"></p-togglebutton>\n        </div>\n\n        <script type="module">\n        const { createApp, ref } = Vue;\n\n        const App = {\n            setup() {\n                const checked1 = ref(false);\n                const checked2 = ref(true);\n\n                return { checked1, checked2 }\n            },\n            components: {\n                "p-togglebutton": primevue.togglebutton\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount("#app");\n        <\\/script>\n'}}}}},Z=n("6b0d"),_=n.n(Z);const G=_()(U,[["render",J]]);var M=G,Q={data:function(){return{checked1:!1,checked2:!0}},components:{ToggleButtonDoc:M}};const q=_()(Q,[["render",a]]);t["default"]=q}}]);