(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-1968e166"],{"0111":function(t,e,n){"use strict";n.r(e);n("b0c0"),n("a4d3"),n("e01a");var o=n("7a23"),a=function(t){return Object(o["K"])("data-v-abd42e2c"),t=t(),Object(o["I"])(),t},l={class:"content-section introduction"},r=a((function(){return Object(o["k"])("div",{class:"feature-intro"},[Object(o["k"])("h1",null,[Object(o["n"])("DataTable "),Object(o["k"])("span",null,"Crud")]),Object(o["k"])("p",null,"This sample demonstrates a CRUD implementation using various PrimeVue components.")],-1)})),i={class:"content-section implementation"},s={class:"card"},c={class:"table-header flex flex-column md:flex-row md:justiify-content-between"},d=a((function(){return Object(o["k"])("h5",{class:"mb-2 md:m-0 p-as-md-center"},"Manage Products",-1)})),u={class:"p-input-icon-left"},p=a((function(){return Object(o["k"])("i",{class:"pi pi-search"},null,-1)})),m=["src","alt"],b=["src","alt"],v={class:"field"},f=a((function(){return Object(o["k"])("label",{for:"name"},"Name",-1)})),g={key:0,class:"p-error"},h={class:"field"},y=a((function(){return Object(o["k"])("label",{for:"description"},"Description",-1)})),P={class:"field"},x=a((function(){return Object(o["k"])("label",{for:"inventoryStatus",class:"mb-3"},"Inventory Status",-1)})),w={key:0},S={key:1},j={key:2},O={class:"field"},k=a((function(){return Object(o["k"])("label",{class:"mb-3"},"Category",-1)})),D={class:"formgrid grid"},C={class:"field-radiobutton col-6"},I=a((function(){return Object(o["k"])("label",{for:"category1"},"Accessories",-1)})),N={class:"field-radiobutton col-6"},T=a((function(){return Object(o["k"])("label",{for:"category2"},"Clothing",-1)})),V={class:"field-radiobutton col-6"},L=a((function(){return Object(o["k"])("label",{for:"category3"},"Electronics",-1)})),B={class:"field-radiobutton col-6"},U=a((function(){return Object(o["k"])("label",{for:"category4"},"Fitness",-1)})),M={class:"formgrid grid"},A={class:"field col"},F=a((function(){return Object(o["k"])("label",{for:"price"},"Price",-1)})),R={class:"field col"},q=a((function(){return Object(o["k"])("label",{for:"quantity"},"Quantity",-1)})),K={class:"confirmation-content"},Z=a((function(){return Object(o["k"])("i",{class:"pi pi-exclamation-triangle mr-3",style:{"font-size":"2rem"}},null,-1)})),z={key:0},E=Object(o["n"])("Are you sure you want to delete "),_=Object(o["n"])("?"),$={class:"confirmation-content"},H=a((function(){return Object(o["k"])("i",{class:"pi pi-exclamation-triangle mr-3",style:{"font-size":"2rem"}},null,-1)})),Y={key:0};function W(t,e,n,a,W,Q){var J=Object(o["P"])("AppDemoActions"),G=Object(o["P"])("Button"),X=Object(o["P"])("FileUpload"),tt=Object(o["P"])("Toolbar"),et=Object(o["P"])("InputText"),nt=Object(o["P"])("Column"),ot=Object(o["P"])("Rating"),at=Object(o["P"])("DataTable"),lt=Object(o["P"])("Textarea"),rt=Object(o["P"])("Dropdown"),it=Object(o["P"])("RadioButton"),st=Object(o["P"])("InputNumber"),ct=Object(o["P"])("Dialog"),dt=Object(o["P"])("AppDoc");return Object(o["H"])(),Object(o["j"])("div",null,[Object(o["k"])("div",l,[r,Object(o["o"])(J)]),Object(o["k"])("div",i,[Object(o["k"])("div",s,[Object(o["o"])(tt,{class:"mb-4"},{start:Object(o["Z"])((function(){return[Object(o["o"])(G,{label:"New",icon:"pi pi-plus",class:"p-button-success mr-2",onClick:Q.openNew},null,8,["onClick"]),Object(o["o"])(G,{label:"Delete",icon:"pi pi-trash",class:"p-button-danger",onClick:Q.confirmDeleteSelected,disabled:!W.selectedProducts||!W.selectedProducts.length},null,8,["onClick","disabled"])]})),end:Object(o["Z"])((function(){return[Object(o["o"])(X,{mode:"basic",accept:"image/*",maxFileSize:1e6,label:"Import",chooseLabel:"Import",class:"mr-2 inline-block"}),Object(o["o"])(G,{label:"Export",icon:"pi pi-upload",class:"p-button-help",onClick:e[0]||(e[0]=function(t){return Q.exportCSV(t)})})]})),_:1}),Object(o["o"])(at,{ref:"dt",value:W.products,selection:W.selectedProducts,"onUpdate:selection":e[2]||(e[2]=function(t){return W.selectedProducts=t}),dataKey:"id",paginator:!0,rows:10,filters:W.filters,paginatorTemplate:"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown",rowsPerPageOptions:[5,10,25],currentPageReportTemplate:"Showing {first} to {last} of {totalRecords} products",responsiveLayout:"scroll"},{header:Object(o["Z"])((function(){return[Object(o["k"])("div",c,[d,Object(o["k"])("span",u,[p,Object(o["o"])(et,{modelValue:W.filters["global"].value,"onUpdate:modelValue":e[1]||(e[1]=function(t){return W.filters["global"].value=t}),placeholder:"Search..."},null,8,["modelValue"])])])]})),default:Object(o["Z"])((function(){return[Object(o["o"])(nt,{selectionMode:"multiple",style:{width:"3rem"},exportable:!1}),Object(o["o"])(nt,{field:"code",header:"Code",sortable:!0,style:{"min-width":"12rem"}}),Object(o["o"])(nt,{field:"name",header:"Name",sortable:!0,style:{"min-width":"16rem"}}),Object(o["o"])(nt,{header:"Image"},{body:Object(o["Z"])((function(t){return[Object(o["k"])("img",{src:"demo/images/product/"+t.data.image,alt:t.data.image,class:"product-image"},null,8,m)]})),_:1}),Object(o["o"])(nt,{field:"price",header:"Price",sortable:!0,style:{"min-width":"8rem"}},{body:Object(o["Z"])((function(t){return[Object(o["n"])(Object(o["T"])(Q.formatCurrency(t.data.price)),1)]})),_:1}),Object(o["o"])(nt,{field:"category",header:"Category",sortable:!0,style:{"min-width":"10rem"}}),Object(o["o"])(nt,{field:"rating",header:"Reviews",sortable:!0,style:{"min-width":"12rem"}},{body:Object(o["Z"])((function(t){return[Object(o["o"])(ot,{modelValue:t.data.rating,readonly:!0,cancel:!1},null,8,["modelValue"])]})),_:1}),Object(o["o"])(nt,{field:"inventoryStatus",header:"Status",sortable:!0,style:{"min-width":"12rem"}},{body:Object(o["Z"])((function(t){return[Object(o["k"])("span",{class:Object(o["A"])("product-badge status-"+(t.data.inventoryStatus?t.data.inventoryStatus.toLowerCase():""))},Object(o["T"])(t.data.inventoryStatus),3)]})),_:1}),Object(o["o"])(nt,{exportable:!1,style:{"min-width":"8rem"}},{body:Object(o["Z"])((function(t){return[Object(o["o"])(G,{icon:"pi pi-pencil",class:"p-button-rounded p-button-success mr-2",onClick:function(e){return Q.editProduct(t.data)}},null,8,["onClick"]),Object(o["o"])(G,{icon:"pi pi-trash",class:"p-button-rounded p-button-warning",onClick:function(e){return Q.confirmDeleteProduct(t.data)}},null,8,["onClick"])]})),_:1})]})),_:1},8,["value","selection","filters"])]),Object(o["o"])(ct,{visible:W.productDialog,"onUpdate:visible":e[12]||(e[12]=function(t){return W.productDialog=t}),style:{width:"450px"},header:"Product Details",modal:!0,class:"p-fluid"},{footer:Object(o["Z"])((function(){return[Object(o["o"])(G,{label:"Cancel",icon:"pi pi-times",class:"p-button-text",onClick:Q.hideDialog},null,8,["onClick"]),Object(o["o"])(G,{label:"Save",icon:"pi pi-check",class:"p-button-text",onClick:Q.saveProduct},null,8,["onClick"])]})),default:Object(o["Z"])((function(){return[W.product.image?(Object(o["H"])(),Object(o["j"])("img",{key:0,src:"demo/images/product/"+W.product.image,alt:W.product.image,class:"product-image"},null,8,b)):Object(o["i"])("",!0),Object(o["k"])("div",v,[f,Object(o["o"])(et,{id:"name",modelValue:W.product.name,"onUpdate:modelValue":e[3]||(e[3]=function(t){return W.product.name=t}),modelModifiers:{trim:!0},required:"true",autofocus:"",class:Object(o["A"])({"p-invalid":W.submitted&&!W.product.name})},null,8,["modelValue","class"]),W.submitted&&!W.product.name?(Object(o["H"])(),Object(o["j"])("small",g,"Name is required.")):Object(o["i"])("",!0)]),Object(o["k"])("div",h,[y,Object(o["o"])(lt,{id:"description",modelValue:W.product.description,"onUpdate:modelValue":e[4]||(e[4]=function(t){return W.product.description=t}),required:"true",rows:"3",cols:"20"},null,8,["modelValue"])]),Object(o["k"])("div",P,[x,Object(o["o"])(rt,{id:"inventoryStatus",modelValue:W.product.inventoryStatus,"onUpdate:modelValue":e[5]||(e[5]=function(t){return W.product.inventoryStatus=t}),options:W.statuses,optionLabel:"label",placeholder:"Select a Status"},{value:Object(o["Z"])((function(t){return[t.value&&t.value.value?(Object(o["H"])(),Object(o["j"])("div",w,[Object(o["k"])("span",{class:Object(o["A"])("product-badge status-"+t.value.value)},Object(o["T"])(t.value.label),3)])):t.value&&!t.value.value?(Object(o["H"])(),Object(o["j"])("div",S,[Object(o["k"])("span",{class:Object(o["A"])("product-badge status-"+t.value.toLowerCase())},Object(o["T"])(t.value),3)])):(Object(o["H"])(),Object(o["j"])("span",j,Object(o["T"])(t.placeholder),1))]})),_:1},8,["modelValue","options"])]),Object(o["k"])("div",O,[k,Object(o["k"])("div",D,[Object(o["k"])("div",C,[Object(o["o"])(it,{id:"category1",name:"category",value:"Accessories",modelValue:W.product.category,"onUpdate:modelValue":e[6]||(e[6]=function(t){return W.product.category=t})},null,8,["modelValue"]),I]),Object(o["k"])("div",N,[Object(o["o"])(it,{id:"category2",name:"category",value:"Clothing",modelValue:W.product.category,"onUpdate:modelValue":e[7]||(e[7]=function(t){return W.product.category=t})},null,8,["modelValue"]),T]),Object(o["k"])("div",V,[Object(o["o"])(it,{id:"category3",name:"category",value:"Electronics",modelValue:W.product.category,"onUpdate:modelValue":e[8]||(e[8]=function(t){return W.product.category=t})},null,8,["modelValue"]),L]),Object(o["k"])("div",B,[Object(o["o"])(it,{id:"category4",name:"category",value:"Fitness",modelValue:W.product.category,"onUpdate:modelValue":e[9]||(e[9]=function(t){return W.product.category=t})},null,8,["modelValue"]),U])])]),Object(o["k"])("div",M,[Object(o["k"])("div",A,[F,Object(o["o"])(st,{id:"price",modelValue:W.product.price,"onUpdate:modelValue":e[10]||(e[10]=function(t){return W.product.price=t}),mode:"currency",currency:"USD",locale:"en-US"},null,8,["modelValue"])]),Object(o["k"])("div",R,[q,Object(o["o"])(st,{id:"quantity",modelValue:W.product.quantity,"onUpdate:modelValue":e[11]||(e[11]=function(t){return W.product.quantity=t}),integeronly:""},null,8,["modelValue"])])])]})),_:1},8,["visible"]),Object(o["o"])(ct,{visible:W.deleteProductDialog,"onUpdate:visible":e[14]||(e[14]=function(t){return W.deleteProductDialog=t}),style:{width:"450px"},header:"Confirm",modal:!0},{footer:Object(o["Z"])((function(){return[Object(o["o"])(G,{label:"No",icon:"pi pi-times",class:"p-button-text",onClick:e[13]||(e[13]=function(t){return W.deleteProductDialog=!1})}),Object(o["o"])(G,{label:"Yes",icon:"pi pi-check",class:"p-button-text",onClick:Q.deleteProduct},null,8,["onClick"])]})),default:Object(o["Z"])((function(){return[Object(o["k"])("div",K,[Z,W.product?(Object(o["H"])(),Object(o["j"])("span",z,[E,Object(o["k"])("b",null,Object(o["T"])(W.product.name),1),_])):Object(o["i"])("",!0)])]})),_:1},8,["visible"]),Object(o["o"])(ct,{visible:W.deleteProductsDialog,"onUpdate:visible":e[16]||(e[16]=function(t){return W.deleteProductsDialog=t}),style:{width:"450px"},header:"Confirm",modal:!0},{footer:Object(o["Z"])((function(){return[Object(o["o"])(G,{label:"No",icon:"pi pi-times",class:"p-button-text",onClick:e[15]||(e[15]=function(t){return W.deleteProductsDialog=!1})}),Object(o["o"])(G,{label:"Yes",icon:"pi pi-check",class:"p-button-text",onClick:Q.deleteSelectedProducts},null,8,["onClick"])]})),default:Object(o["Z"])((function(){return[Object(o["k"])("div",$,[H,W.product?(Object(o["H"])(),Object(o["j"])("span",Y,"Are you sure you want to delete the selected products?")):Object(o["i"])("",!0)])]})),_:1},8,["visible"])]),Object(o["o"])(dt,{name:"DataTableCrudDemo",sources:W.sources,service:["ProductService"],data:["products"],github:"datatable/DataTableCrudDemo.vue"},null,8,["sources"])])}var Q=n("5530"),J=(n("498a"),n("4de4"),n("d3b7"),n("caad"),n("2532"),n("bcab")),G=n("e9c0"),X={data:function(){return{products:null,productDialog:!1,deleteProductDialog:!1,deleteProductsDialog:!1,product:{},selectedProducts:null,filters:{},submitted:!1,statuses:[{label:"INSTOCK",value:"instock"},{label:"LOWSTOCK",value:"lowstock"},{label:"OUTOFSTOCK",value:"outofstock"}],sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div>\n        <div class="card">\n            <Toolbar class="mb-4">\n                <template #start>\n                    <Button label="New" icon="pi pi-plus" class="p-button-success mr-2" @click="openNew" />\n                    <Button label="Delete" icon="pi pi-trash" class="p-button-danger" @click="confirmDeleteSelected" :disabled="!selectedProducts || !selectedProducts.length" />\n                </template>\n\n                <template #end>\n                    <FileUpload mode="basic" accept="image/*" :maxFileSize="1000000" label="Import" chooseLabel="Import" class="mr-2 inline-block" />\n                    <Button label="Export" icon="pi pi-upload" class="p-button-help" @click="exportCSV($event)"  />\n                </template>\n            </Toolbar>\n\n            <DataTable ref="dt" :value="products" v-model:selection="selectedProducts" dataKey="id" \n                :paginator="true" :rows="10" :filters="filters"\n                paginatorTemplate="FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown" :rowsPerPageOptions="[5,10,25]"\n                currentPageReportTemplate="Showing {first} to {last} of {totalRecords} products" responsiveLayout="scroll">\n                <template #header>\n                    <div class="table-header flex flex-column md:flex-row md:justiify-content-between">\n\t\t\t\t\t\t<h5 class="mb-2 md:m-0 p-as-md-center">Manage Products</h5>\n\t\t\t\t\t\t<span class="p-input-icon-left">\n                            <i class="pi pi-search" />\n                            <InputText v-model="filters[\'global\'].value" placeholder="Search..." />\n                        </span>\n\t\t\t\t\t</div>\n                </template>\n\n                <Column selectionMode="multiple" style="width: 3rem" :exportable="false"></Column>\n                <Column field="code" header="Code" :sortable="true" style="min-width:12rem"></Column>\n                <Column field="name" header="Name" :sortable="true" style="min-width:16rem"></Column>\n                <Column header="Image">\n                     <template #body="slotProps">\n                        <img src="https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png" :alt="slotProps.data.image" class="product-image" />\n                    </template>\n                </Column>\n                <Column field="price" header="Price" :sortable="true" style="min-width:8rem">\n                    <template #body="slotProps">\n                        {{formatCurrency(slotProps.data.price)}}\n                    </template>\n                </Column>\n                <Column field="category" header="Category" :sortable="true" style="min-width:10rem"></Column>\n                <Column field="rating" header="Reviews" :sortable="true" style="min-width:12rem">\n                    <template #body="slotProps">\n                       <Rating :modelValue="slotProps.data.rating" :readonly="true" :cancel="false" />\n                    </template>\n                </Column>\n                <Column field="inventoryStatus" header="Status" :sortable="true" style="min-width:12rem">\n                    <template #body="slotProps">\n                        <span :class="\'product-badge status-\' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : \'\')">{{slotProps.data.inventoryStatus}}</span>\n                    </template>\n                </Column>\n                <Column :exportable="false" style="min-width:8rem">\n                    <template #body="slotProps">\n                        <Button icon="pi pi-pencil" class="p-button-rounded p-button-success mr-2" @click="editProduct(slotProps.data)" />\n                        <Button icon="pi pi-trash" class="p-button-rounded p-button-warning" @click="confirmDeleteProduct(slotProps.data)" />\n                    </template>\n                </Column>\n            </DataTable>\n        </div>\n\n        <Dialog v-model:visible="productDialog" :style="{width: \'450px\'}" header="Product Details" :modal="true" class="p-fluid">\n            <img src="https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png" :alt="product.image" class="product-image" v-if="product.image" />\n            <div class="field">\n                <label for="name">Name</label>\n                <InputText id="name" v-model.trim="product.name" required="true" autofocus :class="{\'p-invalid\': submitted && !product.name}" />\n                <small class="p-error" v-if="submitted && !product.name">Name is required.</small>\n            </div>\n            <div class="field">\n                <label for="description">Description</label>\n                <Textarea id="description" v-model="product.description" required="true" rows="3" cols="20" />\n            </div>\n\n            <div class="field">\n\t\t\t\t<label for="inventoryStatus" class="mb-3">Inventory Status</label>\n\t\t\t\t<Dropdown id="inventoryStatus" v-model="product.inventoryStatus" :options="statuses" optionLabel="label" placeholder="Select a Status">\n\t\t\t\t\t<template #value="slotProps">\n\t\t\t\t\t\t<div v-if="slotProps.value && slotProps.value.value">\n\t\t\t\t\t\t\t<span :class="\'product-badge status-\' +slotProps.value.value">{{slotProps.value.label}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div v-else-if="slotProps.value && !slotProps.value.value">\n\t\t\t\t\t\t\t<span :class="\'product-badge status-\' +slotProps.value.toLowerCase()">{{slotProps.value}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span v-else>\n\t\t\t\t\t\t\t{{slotProps.placeholder}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</template>\n\t\t\t\t</Dropdown>\n\t\t\t</div>\n\n            <div class="field">\n                <label class="mb-3">Category</label>\n                <div class="formgrid grid">\n                    <div class="field-radiobutton col-6">\n                        <RadioButton id="category1" name="category" value="Accessories" v-model="product.category" />\n                        <label for="category1">Accessories</label>\n                    </div>\n                    <div class="field-radiobutton col-6">\n                        <RadioButton id="category2" name="category" value="Clothing" v-model="product.category" />\n                        <label for="category2">Clothing</label>\n                    </div>\n                    <div class="field-radiobutton col-6">\n                        <RadioButton id="category3" name="category" value="Electronics" v-model="product.category" />\n                        <label for="category3">Electronics</label>\n                    </div>\n                    <div class="field-radiobutton col-6">\n                        <RadioButton id="category4" name="category" value="Fitness" v-model="product.category" />\n                        <label for="category4">Fitness</label>\n                    </div>\n                </div>\n            </div>\n\n            <div class="formgrid grid">\n                <div class="field col">\n                    <label for="price">Price</label>\n                    <InputNumber id="price" v-model="product.price" mode="currency" currency="USD" locale="en-US" />\n                </div>\n                <div class="field col">\n                    <label for="quantity">Quantity</label>\n                    <InputNumber id="quantity" v-model="product.quantity" integeronly />\n                </div>\n            </div>\n            <template #footer>\n                <Button label="Cancel" icon="pi pi-times" class="p-button-text" @click="hideDialog"/>\n                <Button label="Save" icon="pi pi-check" class="p-button-text" @click="saveProduct" />\n            </template>\n        </Dialog>\n\n        <Dialog v-model:visible="deleteProductDialog" :style="{width: \'450px\'}" header="Confirm" :modal="true">\n            <div class="confirmation-content">\n                <i class="pi pi-exclamation-triangle mr-3" style="font-size: 2rem" />\n                <span v-if="product">Are you sure you want to delete <b>{{product.name}}</b>?</span>\n            </div>\n            <template #footer>\n                <Button label="No" icon="pi pi-times" class="p-button-text" @click="deleteProductDialog = false"/>\n                <Button label="Yes" icon="pi pi-check" class="p-button-text" @click="deleteProduct" />\n            </template>\n        </Dialog>\n\n        <Dialog v-model:visible="deleteProductsDialog" :style="{width: \'450px\'}" header="Confirm" :modal="true">\n            <div class="confirmation-content">\n                <i class="pi pi-exclamation-triangle mr-3" style="font-size: 2rem" />\n                <span v-if="product">Are you sure you want to delete the selected products?</span>\n            </div>\n            <template #footer>\n                <Button label="No" icon="pi pi-times" class="p-button-text" @click="deleteProductsDialog = false"/>\n                <Button label="Yes" icon="pi pi-check" class="p-button-text" @click="deleteSelectedProducts" />\n            </template>\n        </Dialog>\n\t</div>\n</template>\n\n<script>\nimport { FilterMatchMode } from \'primevue/api\';\nimport ProductService from \'./service/ProductService\';\n\nexport default {\n    data() {\n        return {\n            products: null,\n            productDialog: false,\n            deleteProductDialog: false,\n            deleteProductsDialog: false,\n            product: {},\n            selectedProducts: null,\n            filters: {},\n            submitted: false,\n            statuses: [\n\t\t\t\t{label: \'INSTOCK\', value: \'instock\'},\n\t\t\t\t{label: \'LOWSTOCK\', value: \'lowstock\'},\n\t\t\t\t{label: \'OUTOFSTOCK\', value: \'outofstock\'}\n            ]\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n        this.initFilters();\n    },\n    mounted() {\n        this.productService.getProducts().then(data => this.products = data);\n    },\n    methods: {\n        formatCurrency(value) {\n            if(value)\n\t\t\t\treturn value.toLocaleString(\'en-US\', {style: \'currency\', currency: \'USD\'});\n\t\t\treturn;\n        },\n        openNew() {\n            this.product = {};\n            this.submitted = false;\n            this.productDialog = true;\n        },\n        hideDialog() {\n            this.productDialog = false;\n            this.submitted = false;\n        },\n        saveProduct() {\n            this.submitted = true;\n\n\t\t\tif (this.product.name.trim()) {\n                if (this.product.id) {\n                    this.product.inventoryStatus = this.product.inventoryStatus.value ? this.product.inventoryStatus.value: this.product.inventoryStatus;\n                    this.products[this.findIndexById(this.product.id)] = this.product;\n                    this.$toast.add({severity:\'success\', summary: \'Successful\', detail: \'Product Updated\', life: 3000});\n                }\n                else {\n                    this.product.id = this.createId();\n                    this.product.code = this.createId();\n                    this.product.image = \'product-placeholder.svg\';\n                    this.product.inventoryStatus = this.product.inventoryStatus ? this.product.inventoryStatus.value : \'INSTOCK\';\n                    this.products.push(this.product);\n                    this.$toast.add({severity:\'success\', summary: \'Successful\', detail: \'Product Created\', life: 3000});\n                }\n\n                this.productDialog = false;\n                this.product = {};\n            }\n        },\n        editProduct(product) {\n            this.product = {...product};\n            this.productDialog = true;\n        },\n        confirmDeleteProduct(product) {\n            this.product = product;\n            this.deleteProductDialog = true;\n        },\n        deleteProduct() {\n            this.products = this.products.filter(val => val.id !== this.product.id);\n            this.deleteProductDialog = false;\n            this.product = {};\n            this.$toast.add({severity:\'success\', summary: \'Successful\', detail: \'Product Deleted\', life: 3000});\n        },\n        findIndexById(id) {\n            let index = -1;\n            for (let i = 0; i < this.products.length; i++) {\n                if (this.products[i].id === id) {\n                    index = i;\n                    break;\n                }\n            }\n\n            return index;\n        },\n        createId() {\n            let id = \'\';\n            var chars = \'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\';\n            for ( var i = 0; i < 5; i++ ) {\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n            return id;\n        },\n        exportCSV() {\n            this.$refs.dt.exportCSV();\n        },\n        confirmDeleteSelected() {\n            this.deleteProductsDialog = true;\n        },\n        deleteSelectedProducts() {\n            this.products = this.products.filter(val => !this.selectedProducts.includes(val));\n            this.deleteProductsDialog = false;\n            this.selectedProducts = null;\n            this.$toast.add({severity:\'success\', summary: \'Successful\', detail: \'Products Deleted\', life: 3000});\n        },\n        initFilters() {\n            this.filters = {\n                \'global\': {value: null, matchMode: FilterMatchMode.CONTAINS},\n            }\n        }\n    }\n}\n<\\/script>\n\n<style lang="scss" scoped>\n.table-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    @media screen and (max-width: 960px) {\n        align-items: start;\n\t}\n}\n\n.product-image {\n    width: 50px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n}\n\n.p-dialog .product-image {\n    width: 50px;\n    margin: 0 auto 2rem auto;\n    display: block;\n}\n\n.confirmation-content {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n@media screen and (max-width: 960px) {\n\t::v-deep(.p-toolbar) {\n\t\tflex-wrap: wrap;\n        \n\t\t.p-button {\n            margin-bottom: 0.25rem;\n        }\n\t}\n}\n</style>\n'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div>\n        <div class="card">\n            <Toolbar class="mb-4">\n                <template #start>\n                    <Button label="New" icon="pi pi-plus" class="p-button-success mr-2" @click="openNew" />\n                    <Button label="Delete" icon="pi pi-trash" class="p-button-danger" @click="confirmDeleteSelected" :disabled="!selectedProducts || !selectedProducts.length" />\n                </template>\n\n                <template #end>\n                    <FileUpload mode="basic" accept="image/*" :maxFileSize="1000000" label="Import" chooseLabel="Import" class="mr-2 inline-block" />\n                    <Button label="Export" icon="pi pi-upload" class="p-button-help" @click="exportCSV($event)"  />\n                </template>\n            </Toolbar>\n\n            <DataTable ref="dt" :value="products" v-model:selection="selectedProducts" dataKey="id" \n                :paginator="true" :rows="10" :filters="filters"\n                paginatorTemplate="FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown" :rowsPerPageOptions="[5,10,25]"\n                currentPageReportTemplate="Showing {first} to {last} of {totalRecords} products" responsiveLayout="scroll">\n                <template #header>\n                    <div class="table-header flex flex-column md:flex-row md:justiify-content-between">\n\t\t\t\t\t\t<h5 class="mb-2 md:m-0 p-as-md-center">Manage Products</h5>\n\t\t\t\t\t\t<span class="p-input-icon-left">\n                            <i class="pi pi-search" />\n                            <InputText v-model="filters[\'global\'].value" placeholder="Search..." />\n                        </span>\n\t\t\t\t\t</div>\n                </template>\n\n                <Column selectionMode="multiple" style="width: 3rem" :exportable="false"></Column>\n                <Column field="code" header="Code" :sortable="true" style="min-width:12rem"></Column>\n                <Column field="name" header="Name" :sortable="true" style="min-width:16rem"></Column>\n                <Column header="Image">\n                     <template #body="slotProps">\n                        <img src="https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png" :alt="slotProps.data.image" class="product-image" />\n                    </template>\n                </Column>\n                <Column field="price" header="Price" :sortable="true" style="min-width:8rem">\n                    <template #body="slotProps">\n                        {{formatCurrency(slotProps.data.price)}}\n                    </template>\n                </Column>\n                <Column field="category" header="Category" :sortable="true" style="min-width:10rem"></Column>\n                <Column field="rating" header="Reviews" :sortable="true" style="min-width:12rem">\n                    <template #body="slotProps">\n                       <Rating :modelValue="slotProps.data.rating" :readonly="true" :cancel="false" />\n                    </template>\n                </Column>\n                <Column field="inventoryStatus" header="Status" :sortable="true" style="min-width:12rem">\n                    <template #body="slotProps">\n                        <span :class="\'product-badge status-\' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : \'\')">{{slotProps.data.inventoryStatus}}</span>\n                    </template>\n                </Column>\n                <Column :exportable="false" style="min-width:8rem">\n                    <template #body="slotProps">\n                        <Button icon="pi pi-pencil" class="p-button-rounded p-button-success mr-2" @click="editProduct(slotProps.data)" />\n                        <Button icon="pi pi-trash" class="p-button-rounded p-button-warning" @click="confirmDeleteProduct(slotProps.data)" />\n                    </template>\n                </Column>\n            </DataTable>\n        </div>\n\n        <Dialog v-model:visible="productDialog" :style="{width: \'450px\'}" header="Product Details" :modal="true" class="p-fluid">\n            <img src="https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png" :alt="product.image" class="product-image" v-if="product.image" />\n            <div class="field">\n                <label for="name">Name</label>\n                <InputText id="name" v-model.trim="product.name" required="true" autofocus :class="{\'p-invalid\': submitted && !product.name}" />\n                <small class="p-error" v-if="submitted && !product.name">Name is required.</small>\n            </div>\n            <div class="field">\n                <label for="description">Description</label>\n                <Textarea id="description" v-model="product.description" required="true" rows="3" cols="20" />\n            </div>\n\n            <div class="field">\n\t\t\t\t<label for="inventoryStatus" class="mb-3">Inventory Status</label>\n\t\t\t\t<Dropdown id="inventoryStatus" v-model="product.inventoryStatus" :options="statuses" optionLabel="label" placeholder="Select a Status">\n\t\t\t\t\t<template #value="slotProps">\n\t\t\t\t\t\t<div v-if="slotProps.value && slotProps.value.value">\n\t\t\t\t\t\t\t<span :class="\'product-badge status-\' +slotProps.value.value">{{slotProps.value.label}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div v-else-if="slotProps.value && !slotProps.value.value">\n\t\t\t\t\t\t\t<span :class="\'product-badge status-\' +slotProps.value.toLowerCase()">{{slotProps.value}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span v-else>\n\t\t\t\t\t\t\t{{slotProps.placeholder}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</template>\n\t\t\t\t</Dropdown>\n\t\t\t</div>\n\n            <div class="field">\n                <label class="mb-3">Category</label>\n                <div class="formgrid grid">\n                    <div class="field-radiobutton col-6">\n                        <RadioButton id="category1" name="category" value="Accessories" v-model="product.category" />\n                        <label for="category1">Accessories</label>\n                    </div>\n                    <div class="field-radiobutton col-6">\n                        <RadioButton id="category2" name="category" value="Clothing" v-model="product.category" />\n                        <label for="category2">Clothing</label>\n                    </div>\n                    <div class="field-radiobutton col-6">\n                        <RadioButton id="category3" name="category" value="Electronics" v-model="product.category" />\n                        <label for="category3">Electronics</label>\n                    </div>\n                    <div class="field-radiobutton col-6">\n                        <RadioButton id="category4" name="category" value="Fitness" v-model="product.category" />\n                        <label for="category4">Fitness</label>\n                    </div>\n                </div>\n            </div>\n\n            <div class="formgrid grid">\n                <div class="field col">\n                    <label for="price">Price</label>\n                    <InputNumber id="price" v-model="product.price" mode="currency" currency="USD" locale="en-US" />\n                </div>\n                <div class="field col">\n                    <label for="quantity">Quantity</label>\n                    <InputNumber id="quantity" v-model="product.quantity" integeronly />\n                </div>\n            </div>\n            <template #footer>\n                <Button label="Cancel" icon="pi pi-times" class="p-button-text" @click="hideDialog"/>\n                <Button label="Save" icon="pi pi-check" class="p-button-text" @click="saveProduct" />\n            </template>\n        </Dialog>\n\n        <Dialog v-model:visible="deleteProductDialog" :style="{width: \'450px\'}" header="Confirm" :modal="true">\n            <div class="confirmation-content">\n                <i class="pi pi-exclamation-triangle mr-3" style="font-size: 2rem" />\n                <span v-if="product">Are you sure you want to delete <b>{{product.name}}</b>?</span>\n            </div>\n            <template #footer>\n                <Button label="No" icon="pi pi-times" class="p-button-text" @click="deleteProductDialog = false"/>\n                <Button label="Yes" icon="pi pi-check" class="p-button-text" @click="deleteProduct" />\n            </template>\n        </Dialog>\n\n        <Dialog v-model:visible="deleteProductsDialog" :style="{width: \'450px\'}" header="Confirm" :modal="true">\n            <div class="confirmation-content">\n                <i class="pi pi-exclamation-triangle mr-3" style="font-size: 2rem" />\n                <span v-if="product">Are you sure you want to delete the selected products?</span>\n            </div>\n            <template #footer>\n                <Button label="No" icon="pi pi-times" class="p-button-text" @click="deleteProductsDialog = false"/>\n                <Button label="Yes" icon="pi pi-check" class="p-button-text" @click="deleteSelectedProducts" />\n            </template>\n        </Dialog>\n\t</div>\n</template>\n\n<script>\nimport { ref, onMounted } from \'vue\';\nimport { FilterMatchMode } from \'primevue/api\';\nimport { useToast } from \'primevue/usetoast\';\nimport ProductService from \'./service/ProductService\';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            productService.value.getProducts().then(data => products.value = data);\n        })\n\n        const toast = useToast();\n        const dt = ref();\n        const products = ref();\n        const productDialog = ref(false);\n        const deleteProductDialog = ref(false);\n        const deleteProductsDialog = ref(false);\n        const product = ref({});\n        const productService = ref(new ProductService());\n        const selectedProducts = ref();\n        const filters = ref({\n            \'global\': {value: null, matchMode: FilterMatchMode.CONTAINS},\n        });\n        const submitted = ref(false);\n        const statuses = ref([\n\t     \t{label: \'INSTOCK\', value: \'instock\'},\n\t     \t{label: \'LOWSTOCK\', value: \'lowstock\'},\n\t     \t{label: \'OUTOFSTOCK\', value: \'outofstock\'}\n        ]);\n\n        const formatCurrency = (value) => {\n            if(value)\n\t\t\t\treturn value.toLocaleString(\'en-US\', {style: \'currency\', currency: \'USD\'});\n\t\t\treturn;\n        };\n        const openNew = () => {\n            product.value = {};\n            submitted.value = false;\n            productDialog.value = true;\n        };\n        const hideDialog = () => {\n            productDialog.value = false;\n            submitted.value = false;\n        };\n        const saveProduct = () => {\n            submitted.value = true;\n\n\t\t\tif (product.value.name.trim()) {\n                if (product.value.id) {\n                    product.value.inventoryStatus = product.value.inventoryStatus.value ? product.value.inventoryStatus.value : product.value.inventoryStatus;\n                    products.value[findIndexById(product.value.id)] = product.value;\n                    toast.add({severity:\'success\', summary: \'Successful\', detail: \'Product Updated\', life: 3000});\n                }\n                else {\n                    product.value.id = createId();\n                    product.value.code = createId();\n                    product.value.image = \'product-placeholder.svg\';\n                    product.value.inventoryStatus = product.value.inventoryStatus ? product.value.inventoryStatus.value : \'INSTOCK\';\n                    products.value.push(product.value);\n                    toast.add({severity:\'success\', summary: \'Successful\', detail: \'Product Created\', life: 3000});\n                }\n\n                productDialog.value = false;\n                product.value = {};\n            }\n        };\n        const editProduct = (prod) => {\n            product.value = {...prod};\n            productDialog.value = true;\n        };\n        const confirmDeleteProduct = (prod) => {\n            product.value = prod;\n            deleteProductDialog.value = true;\n        };\n        const deleteProduct = () => {\n            products.value = products.value.filter(val => val.id !== product.value.id);\n            deleteProductDialog.value = false;\n            product.value = {};\n            toast.add({severity:\'success\', summary: \'Successful\', detail: \'Product Deleted\', life: 3000});\n        };\n        const findIndexById = (id) => {\n            let index = -1;\n            for (let i = 0; i < products.value.length; i++) {\n                if (products.value[i].id === id) {\n                    index = i;\n                    break;\n                }\n            }\n\n            return index;\n        };\n        const createId = () => {\n            let id = \'\';\n            var chars = \'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\';\n            for ( var i = 0; i < 5; i++ ) {\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n            return id;\n        }\n        const exportCSV = () => {\n            dt.value.exportCSV();\n        };\n        const confirmDeleteSelected = () => {\n            deleteProductsDialog.value = true;\n        };\n        const deleteSelectedProducts = () => {\n            products.value = products.value.filter(val => !selectedProducts.value.includes(val));\n            deleteProductsDialog.value = false;\n            selectedProducts.value = null;\n            toast.add({severity:\'success\', summary: \'Successful\', detail: \'Products Deleted\', life: 3000});\n        };\n\n        return { dt, products, productDialog, deleteProductDialog, deleteProductsDialog, product, \n            selectedProducts, filters, submitted, statuses, formatCurrency, openNew, hideDialog, saveProduct, editProduct,\n            confirmDeleteProduct, deleteProduct, findIndexById, createId, exportCSV, confirmDeleteSelected, deleteSelectedProducts}\n    }\n}\n<\\/script>\n\n<style lang="scss" scoped>\n.table-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    @media screen and (max-width: 960px) {\n        align-items: start;\n\t}\n}\n\n.product-image {\n    width: 50px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n}\n\n.p-dialog .product-image {\n    width: 50px;\n    margin: 0 auto 2rem auto;\n    display: block;\n}\n\n.confirmation-content {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n@media screen and (max-width: 960px) {\n\t::v-deep(.p-toolbar) {\n\t\tflex-wrap: wrap;\n        \n\t\t.p-button {\n            margin-bottom: 0.25rem;\n        }\n\t}\n}\n</style>\n'},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/datatable/datatable.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/column/column.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/toolbar/toolbar.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/fileupload/fileupload.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/rating/rating.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/toast/toast.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/toastservice/toastservice.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/textarea/textarea.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/radiobutton/radiobutton.min.js"><\\/script>\n        <script src="./ProductService.js"><\\/script>',content:'<div id="app">\n            <div class="card">\n                <p-toast></p-toast>\n\n                <p-toolbar class="mb-4">\n                    <template #start>\n                        <p-button label="New" icon="pi pi-plus" class="p-button-success mr-2" @click="openNew"></p-button>\n                        <p-button label="Delete" icon="pi pi-trash" class="p-button-danger" @click="confirmDeleteSelected" :disabled="!selectedProducts || !selectedProducts.length"></p-button>\n                    </template>\n\n                    <template #end>\n                        <p-fileupload mode="basic" accept="image/*" :maxFileSize="1000000" label="Import" chooseLabel="Import" class="mr-2 inline-block"></p-fileupload>\n                        <p-button label="Export" icon="pi pi-upload" class="p-button-help" @click="exportCSV($event)"></p-button>\n                    </template>\n                </p-toolbar>\n\n                <p-datatable ref="dt" :value="products" v-model:selection="selectedProducts" dataKey="id"\n                    :paginator="true" :rows="10" :filters="filters"\n                    paginator-template="FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown" :rows-per-page-options="[5,10,25]"\n                    current-page-report-template="Showing {first} to {last} of {totalRecords} products" responsive-layout="scroll">\n                    <template #header>\n                        <div class="table-header flex flex-column md:flex-row md:justiify-content-between">\n\t\t\t\t\t\t\t<h5 class="mb-2 md:m-0 p-as-md-center">Manage Products</h5>\n\t\t\t\t\t\t\t<span class="p-input-icon-left">\n                                <i class="pi pi-search"></i>\n                                <p-inputtext v-model="filters[\'global\'].value" placeholder="Search..."></p-inputtext>\n                            </span>\n\t\t\t\t\t\t</div>\n                    </template>\n\n                    <column selectionMode="multiple" style="width: 3rem" :exportable="false"></column>\n                    <column field="code" header="Code" :sortable="true" style="min-width:12rem"></column>\n                    <column field="name" header="Name" :sortable="true" style="min-width:16rem"></column>\n                    <column header="Image">\n                         <template #body="slotProps">\n                            <img src="https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png" class="product-image" />\n                        </template>\n                    </column>\n                    <column field="price" header="Price" :sortable="true" style="min-width:8rem">\n                        <template #body="slotProps">\n                            {{formatCurrency(slotProps.data.price)}}\n                        </template>\n                    </column>\n                    <column field="category" header="Category" :sortable="true" style="min-width:10rem"></column>\n                    <column field="rating" header="Reviews" :sortable="true" style="min-width:12rem">\n                        <template #body="slotProps">\n                           <p-rating :modelValue="slotProps.data.rating" :readonly="true" :cancel="false"></p-rating>\n                        </template>\n                    </column>\n                    <column field="inventoryStatus" header="Status" :sortable="true" style="min-width:12rem">\n                        <template #body="slotProps">\n                            <span :class="\'product-badge status-\' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : \'\')">{{slotProps.data.inventoryStatus}}</span>\n                        </template>\n                    </column>\n                    <column :exportable="false" style="min-width:8rem">\n                        <template #body="slotProps">\n                            <p-button icon="pi pi-pencil" class="p-button-rounded p-button-success mr-2" @click="editProduct(slotProps.data)"></p-button>\n                            <p-button icon="pi pi-trash" class="p-button-rounded p-button-warning" @click="confirmDeleteProduct(slotProps.data)"></p-button>\n                        </template>\n                    </column>\n                </p-datatable>\n            </div>\n\n            <p-dialog v-model:visible="productDialog" :style="{width: \'450px\'}" header="Product Details" :modal="true" class="p-fluid">\n                <img src="https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png" class="product-image" v-if="product.image" />\n                <div class="field">\n                    <label for="name">Name</label>\n                    <p-inputtext id="name" v-model.trim="product.name" required="true" autofocus :class="{\'p-invalid\': submitted && !product.name}"></p-inputtext>\n                    <small class="p-error" v-if="submitted && !product.name">Name is required.</small>\n                </div>\n                <div class="field">\n                    <label for="description">Description</label>\n                    <p-textarea id="description" v-model="product.description" required="true" rows="3" cols="20"></p-textarea>\n                </div>\n\n                <div class="field">\n\t\t\t\t\t<label for="inventoryStatus" class="mb-3">Inventory Status</label>\n\t\t\t\t\t<p-dropdown id="inventoryStatus" v-model="product.inventoryStatus" :options="statuses" option-label="label" placeholder="Select a Status">\n\t\t\t\t\t\t<template #value="slotProps">\n\t\t\t\t\t\t\t<div v-if="slotProps.value && slotProps.value.value">\n\t\t\t\t\t\t\t\t<span :class="\'product-badge status-\' +slotProps.value.value">{{slotProps.value.label}}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div v-else-if="slotProps.value && !slotProps.value.value">\n\t\t\t\t\t\t\t\t<span :class="\'product-badge status-\' +slotProps.value.toLowerCase()">{{slotProps.value}}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span v-else>\n\t\t\t\t\t\t\t\t{{slotProps.placeholder}}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</p-dropdown>\n\t\t\t\t</div>\n\n                <div class="field">\n                    <label class="mb-3">Category</label>\n                    <div class="formgrid grid">\n                        <div class="field-radiobutton col-6">\n                            <p-radiobutton id="category1" name="category" value="Accessories" v-model="product.category"></p-radiobutton>\n                            <label for="category1">Accessories</label>\n                        </div>\n                        <div class="field-radiobutton col-6">\n                            <p-radiobutton id="category2" name="category" value="Clothing" v-model="product.category"></p-radiobutton>\n                            <label for="category2">Clothing</label>\n                        </div>\n                        <div class="field-radiobutton col-6">\n                            <p-radiobutton id="category3" name="category" value="Electronics" v-model="product.category"></p-radiobutton>\n                            <label for="category3">Electronics</label>\n                        </div>\n                        <div class="field-radiobutton col-6">\n                            <p-radiobutton id="category4" name="category" value="Fitness" v-model="product.category"></p-radiobutton>\n                            <label for="category4">Fitness</label>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="formgrid grid">\n                    <div class="field col">\n                        <label for="price">Price</label>\n                        <p-inputnumber id="price" v-model="product.price" mode="currency" currency="USD" locale="en-US"></p-inputnumber></p-inputnumber>\n                    </div>\n                    <div class="field col">\n                        <label for="quantity">Quantity</label>\n                        <p-inputnumber id="quantity" v-model="product.quantity" integeronly></p-inputnumber>\n                    </div>\n                </div>\n                <template #footer>\n                    <p-button label="Cancel" icon="pi pi-times" class="p-button-text" @click="hideDialog"></p-button>\n                    <p-button label="Save" icon="pi pi-check" class="p-button-text" @click="saveProduct"></p-button>\n                </template>\n            </p-dialog>\n\n            <p-dialog v-model:visible="deleteProductDialog" :style="{width: \'450px\'}" header="Confirm" :modal="true">\n                <div class="confirmation-content">\n                    <i class="pi pi-exclamation-triangle mr-3" style="font-size: 2rem"></i>\n                    <span v-if="product">Are you sure you want to delete <b>{{product.name}}</b>?</span>\n                </div>\n                <template #footer>\n                    <p-button label="No" icon="pi pi-times" class="p-button-text" @click="deleteProductDialog = false"></p-button>\n                    <p-button label="Yes" icon="pi pi-check" class="p-button-text" @click="deleteProduct"></p-button>\n                </template>\n            </p-dialog>\n\n            <p-dialog v-model:visible="deleteProductsDialog" :style="{width: \'450px\'}" header="Confirm" :modal="true">\n                <div class="confirmation-content">\n                    <i class="pi pi-exclamation-triangle mr-3" style="font-size: 2rem"></i>\n                    <span v-if="product">Are you sure you want to delete the selected products?</span>\n                </div>\n                <template #footer>\n                    <p-button label="No" icon="pi pi-times" class="p-button-text" @click="deleteProductsDialog = false"></p-button>\n                    <p-button label="Yes" icon="pi pi-check" class="p-button-text" @click="deleteSelectedProducts"></p-button>\n                </template>\n            </p-dialog>            \n        </div>\n\n        <script type="module">\n            const { createApp, onMounted, ref } = Vue;\n            const { useToast } = primevue.usetoast;\n            const { FilterMatchMode } = primevue.api;\n\n            const App = {\n                setup() {\n                    onMounted(() => {\n                        productService.value.getProducts().then(data => products.value = data);\n                    })\n\n                    const toast = useToast();\n                    const dt = ref();\n                    const products = ref();\n                    const productDialog = ref(false);\n                    const deleteProductDialog = ref(false);\n                    const deleteProductsDialog = ref(false);\n                    const product = ref({});\n                    const productService = ref(new ProductService());\n                    const selectedProducts = ref();\n                    const filters = ref({\n                        \'global\': {value: null, matchMode: FilterMatchMode.CONTAINS},\n                    });\n                    const submitted = ref(false);\n                    const statuses = ref([\n\t                 \t{label: \'INSTOCK\', value: \'instock\'},\n\t                 \t{label: \'LOWSTOCK\', value: \'lowstock\'},\n\t                 \t{label: \'OUTOFSTOCK\', value: \'outofstock\'}\n                    ]);\n\n                    const formatCurrency = (value) => {\n                        if(value)\n\t\t            \t\treturn value.toLocaleString(\'en-US\', {style: \'currency\', currency: \'USD\'});\n\t\t            \treturn;\n                    };\n                    const openNew = () => {\n                        product.value = {};\n                        submitted.value = false;\n                        productDialog.value = true;\n                    };\n                    const hideDialog = () => {\n                        productDialog.value = false;\n                        submitted.value = false;\n                    };\n                    const saveProduct = () => {\n                        submitted.value = true;\n\n\t\t            \tif (product.value.name.trim()) {\n                            if (product.value.id) {\n                                product.value.inventoryStatus = product.value.inventoryStatus.value ? product.value.inventoryStatus.value : product.value.inventoryStatus;\n                                products.value[findIndexById(product.value.id)] = product.value;\n                                toast.add({severity:\'success\', summary: \'Successful\', detail: \'Product Updated\', life: 3000});\n                            }\n                            else {\n                                product.value.id = createId();\n                                product.value.code = createId();\n                                product.value.image = \'product-placeholder.svg\';\n                                product.value.inventoryStatus = product.value.inventoryStatus ? product.value.inventoryStatus.value : \'INSTOCK\';\n                                products.value.push(product.value);\n                                toast.add({severity:\'success\', summary: \'Successful\', detail: \'Product Created\', life: 3000});\n                            }\n\n                            productDialog.value = false;\n                            product.value = {};\n                        }\n                    };\n                    const editProduct = (prod) => {\n                        product.value = {...prod};\n                        productDialog.value = true;\n                    };\n                    const confirmDeleteProduct = (prod) => {\n                        product.value = prod;\n                        deleteProductDialog.value = true;\n                    };\n                    const deleteProduct = () => {\n                        products.value = products.value.filter(val => val.id !== product.value.id);\n                        deleteProductDialog.value = false;\n                        product.value = {};\n                        toast.add({severity:\'success\', summary: \'Successful\', detail: \'Product Deleted\', life: 3000});\n                    };\n                    const findIndexById = (id) => {\n                        let index = -1;\n                        for (let i = 0; i < products.value.length; i++) {\n                            if (products.value[i].id === id) {\n                                index = i;\n                                break;\n                            }\n                        }\n\n                        return index;\n                    };\n                    const createId = () => {\n                        let id = \'\';\n                        var chars = \'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\';\n                        for ( var i = 0; i < 5; i++ ) {\n                            id += chars.charAt(Math.floor(Math.random() * chars.length));\n                        }\n                        return id;\n                    }\n                    const exportCSV = () => {\n                        dt.value.exportCSV();\n                    };\n                    const confirmDeleteSelected = () => {\n                        deleteProductsDialog.value = true;\n                    };\n                    const deleteSelectedProducts = () => {\n                        products.value = products.value.filter(val => !selectedProducts.value.includes(val));\n                        deleteProductsDialog.value = false;\n                        selectedProducts.value = null;\n                        toast.add({severity:\'success\', summary: \'Successful\', detail: \'Products Deleted\', life: 3000});\n                    };\n\n                    return { dt, products, productDialog, deleteProductDialog, deleteProductsDialog, product, \n                        selectedProducts, filters, submitted, statuses, formatCurrency, openNew, hideDialog, saveProduct, editProduct,\n                        confirmDeleteProduct, deleteProduct, findIndexById, createId, exportCSV, confirmDeleteSelected, deleteSelectedProducts}\n                },\n                components: {\n                    "p-datatable": primevue.datatable,\n                    "column": primevue.column,\n                    "p-toolbar": primevue.toolbar,\n                    "p-fileupload": primevue.fileupload,\n                    "p-rating": primevue.rating,\n                    "p-toast": primevue.toast,\n                    "p-inputtext": primevue.inputtext,\n                    "p-inputnumber": primevue.inputnumber,\n                    "p-button": primevue.button,\n                    "p-dialog": primevue.dialog,\n                    "p-textarea": primevue.textarea,\n                    "p-dropdown": primevue.dropdown,\n                    "p-radiobutton": primevue.radiobutton\n                }\n            };\n\n            createApp(App)\n                .use(primevue.config.default)\n                .use(primevue.toastservice)\n                .mount("#app");\n        <\\/script>\n        \n        <style lang="scss" scoped>\n        .table-header {\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n        }\n\n        .product-image {\n            width: 50px;\n            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n        }\n\n        .p-dialog .product-image {\n            width: 50px;\n            margin: 0 auto 2rem auto;\n            display: block;\n        }\n\n        .confirmation-content {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n        @media screen and (max-width: 960px) {\n            .table-header {\n                align-items: start;\n            }\n\n            .p-toolbar {\n                flex-wrap: wrap;\n            }\n                \n            .p-toolbar .p-button {\n                margin-bottom: 0.25rem;\n            }\n        }\n        </style>\n'}}}},productService:null,created:function(){this.productService=new G["a"],this.initFilters()},mounted:function(){var t=this;this.productService.getProducts().then((function(e){return t.products=e}))},methods:{formatCurrency:function(t){if(t)return t.toLocaleString("en-US",{style:"currency",currency:"USD"})},openNew:function(){this.product={},this.submitted=!1,this.productDialog=!0},hideDialog:function(){this.productDialog=!1,this.submitted=!1},saveProduct:function(){this.submitted=!0,this.product.name.trim()&&(this.product.id?(this.product.inventoryStatus=this.product.inventoryStatus.value?this.product.inventoryStatus.value:this.product.inventoryStatus,this.products[this.findIndexById(this.product.id)]=this.product,this.$toast.add({severity:"success",summary:"Successful",detail:"Product Updated",life:3e3})):(this.product.id=this.createId(),this.product.code=this.createId(),this.product.image="product-placeholder.svg",this.product.inventoryStatus=this.product.inventoryStatus?this.product.inventoryStatus.value:"INSTOCK",this.products.push(this.product),this.$toast.add({severity:"success",summary:"Successful",detail:"Product Created",life:3e3})),this.productDialog=!1,this.product={})},editProduct:function(t){this.product=Object(Q["a"])({},t),this.productDialog=!0},confirmDeleteProduct:function(t){this.product=t,this.deleteProductDialog=!0},deleteProduct:function(){var t=this;this.products=this.products.filter((function(e){return e.id!==t.product.id})),this.deleteProductDialog=!1,this.product={},this.$toast.add({severity:"success",summary:"Successful",detail:"Product Deleted",life:3e3})},findIndexById:function(t){for(var e=-1,n=0;n<this.products.length;n++)if(this.products[n].id===t){e=n;break}return e},createId:function(){for(var t="",e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",n=0;n<5;n++)t+=e.charAt(Math.floor(Math.random()*e.length));return t},exportCSV:function(){this.$refs.dt.exportCSV()},confirmDeleteSelected:function(){this.deleteProductsDialog=!0},deleteSelectedProducts:function(){var t=this;this.products=this.products.filter((function(e){return!t.selectedProducts.includes(e)})),this.deleteProductsDialog=!1,this.selectedProducts=null,this.$toast.add({severity:"success",summary:"Successful",detail:"Products Deleted",life:3e3})},initFilters:function(){this.filters={global:{value:null,matchMode:J["a"].CONTAINS}}}}},tt=(n("d381"),n("6b0d")),et=n.n(tt);const nt=et()(X,[["render",W],["__scopeId","data-v-abd42e2c"]]);e["default"]=nt},a450:function(t,e,n){var o=n("24fb");e=o(!1),e.push([t.i,".table-header[data-v-abd42e2c]{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media screen and (max-width:960px){.table-header[data-v-abd42e2c]{-webkit-box-align:start;-ms-flex-align:start;align-items:start}}.product-image[data-v-abd42e2c]{width:100px;-webkit-box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23)}.p-dialog .product-image[data-v-abd42e2c]{width:150px;margin:0 auto 2rem auto;display:block}.confirmation-content[data-v-abd42e2c]{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}@media screen and (max-width:960px){[data-v-abd42e2c] .p-toolbar{-ms-flex-wrap:wrap;flex-wrap:wrap}[data-v-abd42e2c] .p-toolbar .p-button{margin-bottom:.25rem}}",""]),t.exports=e},a882:function(t,e,n){var o=n("a450");o.__esModule&&(o=o.default),"string"===typeof o&&(o=[[t.i,o,""]]),o.locals&&(t.exports=o.locals);var a=n("499e").default;a("69252ba2",o,!0,{sourceMap:!1,shadowMode:!1})},d381:function(t,e,n){"use strict";n("a882")},e9c0:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var o=n("d4ec"),a=n("bee2"),l=(n("d3b7"),function(){function t(){Object(o["a"])(this,t)}return Object(a["a"])(t,[{key:"getProductsSmall",value:function(){return fetch("demo/data/products-small.json").then((function(t){return t.json()})).then((function(t){return t.data}))}},{key:"getProducts",value:function(){return fetch("demo/data/products.json").then((function(t){return t.json()})).then((function(t){return t.data}))}},{key:"getProductsWithOrdersSmall",value:function(){return fetch("demo/data/products-orders-small.json").then((function(t){return t.json()})).then((function(t){return t.data}))}}]),t}())}}]);