(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-260b5e21"],{"030d":function(e,n,t){var r=t("24fb");n=r(!1),n.push([e.i,"p[data-v-7963fce0]{margin-top:0}[data-v-7963fce0] .dark-demo-terminal{background-color:#212121;color:#fff}[data-v-7963fce0] .dark-demo-terminal .p-terminal-command{color:#80cbc4}[data-v-7963fce0] .dark-demo-terminal .p-terminal-prompt{color:#ffd54f}[data-v-7963fce0] .dark-demo-terminal .p-terminal-response{color:#9fa8da}",""]),e.exports=n},"0db1":function(e,n,t){"use strict";t("1ee2")},"1ee2":function(e,n,t){var r=t("030d");r.__esModule&&(r=r.default),"string"===typeof r&&(r=[[e.i,r,""]]),r.locals&&(e.exports=r.locals);var o=t("499e").default;o("1896e465",r,!0,{sourceMap:!1,shadowMode:!1})},b39e:function(e,n,t){"use strict";t.r(n);var r=t("7a23"),o=function(e){return Object(r["K"])("data-v-7963fce0"),e=e(),Object(r["I"])(),e},a={class:"content-section introduction"},c=o((function(){return Object(r["k"])("div",{class:"feature-intro"},[Object(r["k"])("h1",null,"Terminal"),Object(r["k"])("p",null,"Terminal is a text based user interface.")],-1)})),l={class:"content-section implementation"},m={class:"card"},s=o((function(){return Object(r["k"])("p",null,'Enter "date" to display the current date, "greet {0}" for a message and "random" to get a random number.',-1)}));function i(e,n,t,o,i,d){var p=Object(r["P"])("AppDemoActions"),u=Object(r["P"])("Terminal"),b=Object(r["P"])("TerminalDoc");return Object(r["H"])(),Object(r["j"])("div",null,[Object(r["k"])("div",a,[c,Object(r["o"])(p)]),Object(r["k"])("div",l,[Object(r["k"])("div",m,[s,Object(r["o"])(u,{welcomeMessage:"Welcome to PrimeVue",prompt:"primevue $",class:"dark-demo-terminal"})])]),Object(r["o"])(b)])}var d=Object(r["k"])("h5",null,"Import via Module",-1),p=Object(r["k"])("code",null,"\nimport Terminal from 'primevue/terminal';\nimport TerminalService from 'primevue/terminalservice';\n\n",-1),u=[p],b=Object(r["k"])("h5",null,"Import via CDN",-1),f=Object(r["k"])("code",null,'\n<script src="https://unpkg.com/primevue@^3/core/core.min.js"><\/script>\n<script src="https://unpkg.com/primevue@^3/terminal/terminal.min.js"><\/script>\n\n',-1),k=[f],j=Object(r["k"])("h5",null,"Getting Started",-1),O=Object(r["k"])("p",null,[Object(r["n"])("Commands are processed using an EventBus implementation called TerminalService. Import this service into your component and subscribe to the "),Object(r["k"])("i",null,"command"),Object(r["n"])(" event to process the commands by sending replies with the "),Object(r["k"])("i",null,"response"),Object(r["n"])(" event.")],-1),v=Object(r["k"])("code",null,'\n<Terminal welcomeMessage="Welcome to PrimeVue" prompt="primevue $" />\n\n',-1),g=[v],h=Object(r["k"])("code",null,"\nimport TerminalService from 'primevue/terminalservice';\n\nexport default {\n     methods: {\n        commandHandler(text) {\n            let response;\n            let argsIndex = text.indexOf(' ');\n            let command = argsIndex !== -1 ? text.substring(0, argsIndex) : text;\n\n            switch(command) {\n                case \"date\":\n                    response = 'Today is ' + new Date().toDateString();\n                    break;\n\n                case \"greet\":\n                    response = 'Hola ' + text.substring(argsIndex + 1);\n                    break;\n\n                case \"random\":\n                    response = Math.floor(Math.random() * 100);\n                    break;\n\n                default:\n                    response = \"Unknown command: \" + command;\n            }\n\n            TerminalService.$emit('response', response);\n        }\n    },\n    mounted() {\n        TerminalService.$on('command', this.commandHandler);\n    },\n    beforeUnmount() {\n        TerminalService.$off('command', this.commandHandler);\n    }\n}\n\n",-1),x=[h],w=Object(r["k"])("h5",null,"Properties",-1),T=Object(r["k"])("p",null,"Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.",-1),y=Object(r["k"])("div",{class:"doc-tablewrapper"},[Object(r["k"])("table",{class:"doc-table"},[Object(r["k"])("thead",null,[Object(r["k"])("tr",null,[Object(r["k"])("th",null,"Name"),Object(r["k"])("th",null,"Type"),Object(r["k"])("th",null,"Default"),Object(r["k"])("th",null,"Description")])]),Object(r["k"])("tbody",null,[Object(r["k"])("tr",null,[Object(r["k"])("td",null,"welcomeMessage"),Object(r["k"])("td",null,"string"),Object(r["k"])("td",null,"null"),Object(r["k"])("td",null,"Initial text to display on terminal.")]),Object(r["k"])("tr",null,[Object(r["k"])("td",null,"prompt"),Object(r["k"])("td",null,"string"),Object(r["k"])("td",null,"null"),Object(r["k"])("td",null,"Prompt text for each command.")])])])],-1),H=Object(r["k"])("h5",null,"Styling",-1),S=Object(r["n"])("Following is the list of structural style classes, for theming classes visit "),D=Object(r["n"])("theming"),I=Object(r["n"])(" page."),M=Object(r["k"])("div",{class:"doc-tablewrapper"},[Object(r["k"])("table",{class:"doc-table"},[Object(r["k"])("thead",null,[Object(r["k"])("tr",null,[Object(r["k"])("th",null,"Name"),Object(r["k"])("th",null,"Element")])]),Object(r["k"])("tbody",null,[Object(r["k"])("tr",null,[Object(r["k"])("td",null,"p-terminal"),Object(r["k"])("td",null,"Container element.")]),Object(r["k"])("tr",null,[Object(r["k"])("td",null,"p-terminal-content"),Object(r["k"])("td",null,"Content of terminal.")]),Object(r["k"])("tr",null,[Object(r["k"])("td",null,"p-terminal-prompt"),Object(r["k"])("td",null,"Prompt text.")]),Object(r["k"])("tr",null,[Object(r["k"])("td",null,"p-terminal-response"),Object(r["k"])("td",null,"Command response.")]),Object(r["k"])("tr",null,[Object(r["k"])("td",null,"p-terminal-input"),Object(r["k"])("td",null,"Input element to enter commands.")])])])],-1),A=Object(r["k"])("h5",null,"Dependencies",-1),P=Object(r["k"])("p",null,"None.",-1);function F(e,n,t,o,a,c){var l=Object(r["P"])("router-link"),m=Object(r["P"])("AppDoc"),s=Object(r["Q"])("code");return Object(r["H"])(),Object(r["h"])(m,{name:"TerminalDemo",sources:a.sources,github:"terminal/TerminalDemo.vue"},{default:Object(r["Z"])((function(){return[d,Object(r["ab"])((Object(r["H"])(),Object(r["j"])("pre",null,u)),[[s,void 0,void 0,{script:!0}]]),b,Object(r["ab"])((Object(r["H"])(),Object(r["j"])("pre",null,k)),[[s]]),j,O,Object(r["ab"])((Object(r["H"])(),Object(r["j"])("pre",null,g)),[[s]]),Object(r["ab"])((Object(r["H"])(),Object(r["j"])("pre",null,x)),[[s,void 0,void 0,{script:!0}]]),w,T,y,H,Object(r["k"])("p",null,[S,Object(r["o"])(l,{to:"/theming"},{default:Object(r["Z"])((function(){return[D]})),_:1}),I]),M,A,P]})),_:1},8,["sources"])}var C={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div>\n        <p>Enter "date" to display the current date, "greet {0}" for a message and "random" to get a random number.</p>\n        <Terminal welcomeMessage="Welcome to PrimeVue" prompt="primevue $" class="dark-demo-terminal" />\n    </div>\n</template>\n\n<script>\nimport TerminalService from "primevue/terminalservice";\n\nexport default {\n    methods: {\n        commandHandler(text) {\n            let response;\n            let argsIndex = text.indexOf(\' \');\n            let command = argsIndex !== -1 ? text.substring(0, argsIndex) : text;\n\n            switch(command) {\n                case "date":\n                    response = \'Today is \' + new Date().toDateString();\n                    break;\n\n                case "greet":\n                    response = \'Hola \' + text.substring(argsIndex + 1);\n                    break;\n\n                case "random":\n                    response = Math.floor(Math.random() * 100);\n                    break;\n\n                default:\n                    response = "Unknown command: " + command;\n            }\n            \n            TerminalService.emit(\'response\', response);\n        }\n    },\n    mounted() {\n        TerminalService.on(\'command\', this.commandHandler);\n    },\n    beforeUnmount() {\n        TerminalService.off(\'command\', this.commandHandler);\n    }\n}\n<\\/script>\n\n<style lang="scss" scoped>\np {\n    margin-top: 0;\n}\n\n::v-deep(.dark-demo-terminal) {\n    background-color: #212121;\n    color: #ffffff;\n\n    .p-terminal-command {\n        color: #80CBC4;\n    }\n\n    .p-terminal-prompt {\n        color: #FFD54F;\n    }\n\n    .p-terminal-response {\n        color: #9FA8DA;\n    }\n}\n</style>'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div>\n        <p>Enter "date" to display the current date, "greet {0}" for a message and "random" to get a random number.</p>\n        <Terminal welcomeMessage="Welcome to PrimeVue" prompt="primevue $" class="dark-demo-terminal" />\n    </div>\n</template>\n\n<script>\nimport { onMounted, onBeforeUnmount } from \'vue\';\nimport TerminalService from "primevue/terminalservice";\n\nexport default {\n    setup() {\n        onMounted(() => {\n            TerminalService.on(\'command\', commandHandler);\n        })\n\n        onBeforeUnmount(() => {\n            TerminalService.off(\'command\', commandHandler);\n        })\n\n        const commandHandler = (text) => {\n            let response;\n            let argsIndex = text.indexOf(\' \');\n            let command = argsIndex !== -1 ? text.substring(0, argsIndex) : text;\n\n            switch(command) {\n                case "date":\n                    response = \'Today is \' + new Date().toDateString();\n                    break;\n\n                case "greet":\n                    response = \'Hola \' + text.substring(argsIndex + 1);\n                    break;\n\n                case "random":\n                    response = Math.floor(Math.random() * 100);\n                    break;\n\n                default:\n                    response = "Unknown command: " + command;\n            }\n            \n            TerminalService.emit(\'response\', response);\n        }\n\n        return { commandHandler }\n    }\n}\n<\\/script>\n\n<style lang="scss" scoped>\np {\n    margin-top: 0;\n}\n\n::v-deep(.dark-demo-terminal) {\n    background-color: #212121;\n    color: #ffffff;\n\n    .p-terminal-command {\n        color: #80CBC4;\n    }\n\n    .p-terminal-prompt {\n        color: #FFD54F;\n    }\n\n    .p-terminal-response {\n        color: #9FA8DA;\n    }\n}\n</style>'},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/terminal/terminal.min.js"><\\/script>',content:'<div id="app">\n            <p>Enter "date" to display the current date, "greet {0}" for a message and "random" to get a random number.</p>\n            <p-terminal welcome-message="Welcome to PrimeVue" prompt="primevue $" class="dark-demo-terminal"></p-terminal>\n        </div>\n\n        <script type="module">\n        const { createApp, onMounted, onBeforeUnmount } = Vue;\n        const TerminalService = primevue.terminalservice;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    TerminalService.on(\'command\', commandHandler);\n                })\n\n                onBeforeUnmount(() => {\n                    TerminalService.off(\'command\', commandHandler);\n                })\n\n                const commandHandler = (text) => {\n                    let response;\n                    let argsIndex = text.indexOf(\' \');\n                    let command = argsIndex !== -1 ? text.substring(0, argsIndex) : text;\n\n                    switch(command) {\n                        case "date":\n                            response = \'Today is \' + new Date().toDateString();\n                            break;\n\n                        case "greet":\n                            response = \'Hola \' + text.substring(argsIndex + 1);\n                            break;\n\n                        case "random":\n                            response = Math.floor(Math.random() * 100);\n                            break;\n\n                        default:\n                            response = "Unknown command: " + command;\n                    }\n            \n                    TerminalService.emit(\'response\', response);\n                }\n\n                return { commandHandler }\n            },\n            components: {\n                "p-terminal": primevue.terminal\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount("#app");\n        <\\/script>\n\n        <style>\n        p {\n            margin-top: 0;\n        }\n\n        .dark-demo-terminal {\n            background-color: #212121;\n            color: #ffffff;\n        }\n\n        .dark-demo-terminal .p-terminal-command {\n            color: #80CBC4;\n        }\n\n        .dark-demo-terminal .p-terminal-prompt {\n            color: #FFD54F;\n        }\n\n        .dark-demo-terminal .p-terminal-response {\n            color: #9FA8DA;\n        }\n        </style>\n\n'}}}}},U=t("6b0d"),B=t.n(U);const $=B()(C,[["render",F]]);var N=$,E=t("bd7f"),V={methods:{commandHandler:function(e){var n,t=e.indexOf(" "),r=-1!==t?e.substring(0,t):e;switch(r){case"date":n="Today is "+(new Date).toDateString();break;case"greet":n="Hola "+e.substring(t+1);break;case"random":n=Math.floor(100*Math.random());break;default:n="Unknown command: "+r}E["a"].emit("response",n)}},mounted:function(){E["a"].on("command",this.commandHandler)},beforeUnmount:function(){E["a"].off("command",this.commandHandler)},components:{TerminalDoc:N}};t("0db1");const _=B()(V,[["render",i],["__scopeId","data-v-7963fce0"]]);n["default"]=_}}]);