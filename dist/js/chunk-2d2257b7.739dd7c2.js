(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d2257b7"],{e51b:function(e,n,t){"use strict";t.r(n);t("b0c0");var c=t("7a23"),l=t("2d77"),o=t.n(l),a={class:"content-section introduction"},i=Object(c["k"])("div",{class:"feature-intro"},[Object(c["k"])("h1",null,"CascadeSelect"),Object(c["k"])("p",null,"CascadeSelect displays a nested structure of options.")],-1),s={class:"content-section implementation"},d={class:"card"},r=Object(c["k"])("h5",null,"Basic",-1),u=Object(c["k"])("h5",null,"Templating",-1),p={class:"country-item"},m={key:1,class:"pi pi-compass mr-2"},b={key:2,class:"pi pi-map-marker mr-2"},O=Object(c["k"])("h5",null,"Loading State",-1);function j(e,n,t,l,j,k){var h=Object(c["P"])("AppDemoActions"),S=Object(c["P"])("CascadeSelect"),y=Object(c["P"])("CascadeSelectDoc");return Object(c["H"])(),Object(c["j"])("div",null,[Object(c["k"])("div",a,[i,Object(c["o"])(h)]),Object(c["k"])("div",s,[Object(c["k"])("div",d,[r,Object(c["o"])(S,{modelValue:j.selectedCity1,"onUpdate:modelValue":n[0]||(n[0]=function(e){return j.selectedCity1=e}),options:j.countries,optionLabel:"cname",optionGroupLabel:"name",optionGroupChildren:["states","cities"],style:{minWidth:"14rem"},placeholder:"Select a City"},null,8,["modelValue","options"]),u,Object(c["o"])(S,{modelValue:j.selectedCity2,"onUpdate:modelValue":n[1]||(n[1]=function(e){return j.selectedCity2=e}),options:j.countries,optionLabel:"cname",optionGroupLabel:"name",optionGroupChildren:["states","cities"],style:{minWidth:"14rem"},placeholder:"Select a City"},{option:Object(c["Z"])((function(e){return[Object(c["k"])("div",p,[e.option.states?(Object(c["H"])(),Object(c["j"])("img",{key:0,src:o.a,class:Object(c["A"])("flag flag-"+e.option.code.toLowerCase())},null,2)):Object(c["i"])("",!0),e.option.cities?(Object(c["H"])(),Object(c["j"])("i",m)):Object(c["i"])("",!0),e.option.cname?(Object(c["H"])(),Object(c["j"])("i",b)):Object(c["i"])("",!0),Object(c["k"])("span",null,Object(c["T"])(e.option.cname||e.option.name),1)])]})),_:1},8,["modelValue","options"]),O,Object(c["o"])(S,{placeholder:"Loading...",loading:"",style:{minWidth:"14rem"}})])]),Object(c["o"])(y)])}var k=Object(c["k"])("h5",null,"Import via Module",-1),h=Object(c["k"])("code",null,"\nimport CascadeSelect from 'primevue/cascadeselect';\n\n",-1),S=[h],y=Object(c["k"])("h5",null,"Import via CDN",-1),g=Object(c["k"])("code",null,'\n<script src="https://unpkg.com/primevue@^3/core/core.min.js"><\/script>\n<script src="https://unpkg.com/primevue@^3/cascadeselect/cascadeselect.min.js"><\/script>\n\n',-1),C=[g],v=Object(c["k"])("h5",null,"Getting Started",-1),f=Object(c["k"])("p",null,[Object(c["n"])("CascadeSelect requires a value to bind and a collection of arbitrary objects with a nested hierarchy. "),Object(c["k"])("i",null,"optionGroupLabel"),Object(c["n"])(" is used for the text of a category and "),Object(c["k"])("i",null,"optionGroupChildren"),Object(c["n"])(" is to define the children of the category. Note that order of the "),Object(c["k"])("i",null,"optionGroupChildren"),Object(c["n"])(" matters and it should correspond to the data hierarchy.")],-1),A=Object(c["k"])("code",null,'\n<CascadeSelect v-model="selectedCity" :options="countries" optionLabel="cname" optionGroupLabel="name" \n                        :optionGroupChildren="[\'states\', \'cities\']" style="minWidth: 14rem" >\n\n',-1),U=[A],w=Object(c["k"])("code",null,"\ndata() {\n\tdata() {\n        return {\n            selectedCity: null,\n            countries: [\n                {\n                    name: 'Australia',\n                    code: 'AU',\n                    states: [\n                        {\n                            name: 'New South Wales',\n                            cities: [\n                                {cname: 'Sydney', code: 'A-SY'},\n                                {cname: 'Newcastle', code: 'A-NE'},\n                                {cname: 'Wollongong', code: 'A-WO'}\n                            ]\n                        },\n                        {\n                            name: 'Queensland',\n                            cities: [\n                                {cname: 'Brisbane', code: 'A-BR'},\n                                {cname: 'Townsville', code: 'A-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'Canada', \n                    code: 'CA',\n                    states: [\n                        {\n                            name: 'Quebec',\n                            cities: [\n                                {cname: 'Montreal', code: 'C-MO'},\n                                {cname: 'Quebec City', code: 'C-QU'}\n                            ]\n                        },\n                        {\n                            name: 'Ontario',\n                            cities: [\n                                {cname: 'Ottawa', code: 'C-OT'},\n                                {cname: 'Toronto', code: 'C-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'United States',\n                    code: 'US',\n                    states: [\n                        {\n                            name: 'California',\n                            cities: [\n                                {cname: 'Los Angeles', code: 'US-LA'},\n                                {cname: 'San Diego', code: 'US-SD'},\n                                {cname: 'San Francisco', code: 'US-SF'}\n                            ]\n                        },\n                        {\n                            name: 'Florida',\n                            cities: [\n                                {cname: 'Jacksonville', code: 'US-JA'},\n                                {cname: 'Miami', code: 'US-MI'},\n                                {cname: 'Tampa', code: 'US-TA'},\n                                {cname: 'Orlando', code: 'US-OR'}\n                            ]\n                        },\n                        {\n                            name: 'Texas',\n                            cities: [\n                                {cname: 'Austin', code: 'US-AU'},\n                                {cname: 'Dallas', code: 'US-DA'},\n                                {cname: 'Houston', code: 'US-HO'}\n                            ]\n                        }\n                    ]\n                }\n            ]\n        } \n    }\n}\n\n",-1),T=[w],L=Object(c["k"])("h5",null,"Templating",-1),P=Object(c["k"])("p",null,[Object(c["n"])("Content of an item can be customized with the "),Object(c["k"])("i",null,"option"),Object(c["n"])(" template.")],-1),D=Object(c["k"])("code",null,[Object(c["k"])("template",null,[Object(c["n"])('\n<CascadeSelect v-model="selectedCity" :options="countries" optionLabel="cname" optionGroupLabel="name" \n        :optionGroupChildren="[\'states\', \'cities\']" style="minWidth: 14rem">\n    <template #option="slotProps">\n        <div class="country-item">\n            <img src="../../assets/images/flag_placeholder.png" :class="\'flag flag-\' + slotProps.option.code.toLowerCase()" v-if="slotProps.option.states" />\n            <i class="pi pi-compass mr-2" v-if="slotProps.option.cities"></i>\n            <i class="pi pi-map-marker mr-2" v-if="slotProps.option.cname"></i>\n            <span>{{slotProps.option.cname || slotProps.option.name}}</span>\n        </div>\n    </template>\n</CascadeSelect>\n')]),Object(c["n"])("\n")],-1),W=[D],N=Object(c["k"])("h5",null,"Properties",-1),G=Object(c["k"])("p",null,"Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.",-1),M=Object(c["k"])("div",{class:"doc-tablewrapper"},[Object(c["k"])("table",{class:"doc-table"},[Object(c["k"])("thead",null,[Object(c["k"])("tr",null,[Object(c["k"])("th",null,"Name"),Object(c["k"])("th",null,"Type"),Object(c["k"])("th",null,"Default"),Object(c["k"])("th",null,"Description")])]),Object(c["k"])("tbody",null,[Object(c["k"])("tr",null,[Object(c["k"])("td",null,"modelValue"),Object(c["k"])("td",null,"any"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Value of the component.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"options"),Object(c["k"])("td",null,"array"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"An array of selectitems to display as the available options.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"optionLabel"),Object(c["k"])("td",null,"string | function"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Property name or getter function to use as the label of an option.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"optionValue"),Object(c["k"])("td",null,"string | function"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Property name or getter function to use as the value of an option, defaults to the option itself when not defined.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"optionGroupLabel"),Object(c["k"])("td",null,"string | function"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Property name or getter function to use as the label of an option group.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"optionGroupChildren"),Object(c["k"])("td",null,"array | function"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Property name or getter function to retrieve the items of a group.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"placeholder"),Object(c["k"])("td",null,"string"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Default text to display when no option is selected.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"disabled"),Object(c["k"])("td",null,"boolean"),Object(c["k"])("td",null,"false"),Object(c["k"])("td",null,"When present, it specifies that the component should be disabled.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"dataKey"),Object(c["k"])("td",null,"string"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"A property to uniquely identify an option.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"tabindex"),Object(c["k"])("td",null,"number"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Index of the element in tabbing order.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"inputId"),Object(c["k"])("td",null,"string"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Identifier of the underlying input element.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"ariaLabelledBy"),Object(c["k"])("td",null,"string"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Establishes relationships between the component and label(s) where its value should be one or more element IDs.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"appendTo"),Object(c["k"])("td",null,"string"),Object(c["k"])("td",null,"body"),Object(c["k"])("td",null,'A valid query selector or an HTMLElement to specify where the overlay gets attached. Special keywords are "body" for document body and "self" for the element itself.')]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"panelClass"),Object(c["k"])("td",null,"string"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Style class of the overlay panel.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"loading"),Object(c["k"])("td",null,"boolean"),Object(c["k"])("td",null,"false"),Object(c["k"])("td",null,"Whether the dropdown is in loading state.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"loadingIcon"),Object(c["k"])("td",null,"string"),Object(c["k"])("td",null,"pi pi-spinner pi-spin"),Object(c["k"])("td",null,"Icon to display in loading state.")])])])],-1),H=Object(c["k"])("h5",null,"Events",-1),Q=Object(c["k"])("div",{class:"doc-tablewrapper"},[Object(c["k"])("table",{class:"doc-table"},[Object(c["k"])("thead",null,[Object(c["k"])("tr",null,[Object(c["k"])("th",null,"Name"),Object(c["k"])("th",null,"Parameters"),Object(c["k"])("th",null,"Description")])]),Object(c["k"])("tbody",null,[Object(c["k"])("tr",null,[Object(c["k"])("td",null,"change"),Object(c["k"])("td",null,[Object(c["n"])("event.originalEvent: Original event "),Object(c["k"])("br"),Object(c["n"])(" event.value: Selected option value ")]),Object(c["k"])("td",null,"Callback to invoke on value change.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"group-change"),Object(c["k"])("td",null,[Object(c["n"])("event.originalEvent: Original event "),Object(c["k"])("br"),Object(c["n"])(" event.value: Selected option group ")]),Object(c["k"])("td",null,"Callback to invoke when a group changes.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"before-show"),Object(c["k"])("td",null,"-"),Object(c["k"])("td",null,"Callback to invoke before the overlay is shown.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"before-hide"),Object(c["k"])("td",null,"-"),Object(c["k"])("td",null,"Callback to invoke before the overlay is hidden.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"show"),Object(c["k"])("td",null,"-"),Object(c["k"])("td",null,"Callback to invoke when the overlay is shown.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"hide"),Object(c["k"])("td",null,"-"),Object(c["k"])("td",null,"Callback to invoke when the overlay is hidden.")])])])],-1),F=Object(c["k"])("h5",null,"Slots",-1),I=Object(c["k"])("div",{class:"doc-tablewrapper"},[Object(c["k"])("table",{class:"doc-table"},[Object(c["k"])("thead",null,[Object(c["k"])("tr",null,[Object(c["k"])("th",null,"Name"),Object(c["k"])("th",null,"Parameters")])]),Object(c["k"])("tbody",null,[Object(c["k"])("tr",null,[Object(c["k"])("td",null,"value"),Object(c["k"])("td",null,[Object(c["n"])("value: Value of the component "),Object(c["k"])("br"),Object(c["n"])(" placeholder: Placeholder text to show")])]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"option"),Object(c["k"])("td",null,"option: Option instance")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"indicator"),Object(c["k"])("td",null,"-")])])])],-1),B=Object(c["k"])("h5",null,"Styling",-1),x=Object(c["n"])("Following is the list of structural style classes, for theming classes visit "),E=Object(c["n"])("theming"),J=Object(c["n"])(" page."),V=Object(c["k"])("div",{class:"doc-tablewrapper"},[Object(c["k"])("table",{class:"doc-table"},[Object(c["k"])("thead",null,[Object(c["k"])("tr",null,[Object(c["k"])("th",null,"Name"),Object(c["k"])("th",null,"Element")])]),Object(c["k"])("tbody",null,[Object(c["k"])("tr",null,[Object(c["k"])("td",null,"p-cascadeselect"),Object(c["k"])("td",null,"Container element.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"p-cascadeselect-label"),Object(c["k"])("td",null,"Element to display label of selected option.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"p-cascadeselect-trigger"),Object(c["k"])("td",null,"Icon element.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"p-cascadeselect-panel"),Object(c["k"])("td",null,"Icon element.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"p-cascadeselect-items-wrapper"),Object(c["k"])("td",null,"Wrapper element of items list.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"p-cascadeselect-items"),Object(c["k"])("td",null,"List element of items.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"p-cascadeselect-item"),Object(c["k"])("td",null,"An item in the list.")])])])],-1),R=Object(c["k"])("h5",null,"Dependencies",-1),Y=Object(c["k"])("p",null,"None.",-1);function _(e,n,t,l,o,a){var i=Object(c["P"])("router-link"),s=Object(c["P"])("AppDoc"),d=Object(c["Q"])("code");return Object(c["H"])(),Object(c["h"])(s,{name:"CascadeSelectDemo",sources:o.sources,github:"cascadeselect/CascadeSelectDemo.vue"},{default:Object(c["Z"])((function(){return[k,Object(c["ab"])((Object(c["H"])(),Object(c["j"])("pre",null,S)),[[d,void 0,void 0,{script:!0}]]),y,Object(c["ab"])((Object(c["H"])(),Object(c["j"])("pre",null,C)),[[d]]),v,f,Object(c["ab"])((Object(c["H"])(),Object(c["j"])("pre",null,U)),[[d]]),Object(c["ab"])((Object(c["H"])(),Object(c["j"])("pre",null,T)),[[d,void 0,void 0,{script:!0}]]),L,P,Object(c["ab"])((Object(c["H"])(),Object(c["j"])("pre",null,W)),[[d]]),N,G,M,H,Q,F,I,B,Object(c["k"])("p",null,[x,Object(c["o"])(i,{to:"/theming"},{default:Object(c["Z"])((function(){return[E]})),_:1}),J]),V,R,Y]})),_:1},8,["sources"])}var q={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:"\n<template>\n    <div>\n        <h5>Basic</h5>\n        <CascadeSelect v-model=\"selectedCity1\" :options=\"countries\" optionLabel=\"cname\" optionGroupLabel=\"name\"\n                :optionGroupChildren=\"['states', 'cities']\" style=\"minWidth: 14rem\" placeholder=\"Select a City\" />\n\n        <h5>Templating</h5>\n        <CascadeSelect v-model=\"selectedCity2\" :options=\"countries\" optionLabel=\"cname\" optionGroupLabel=\"name\" \n                :optionGroupChildren=\"['states', 'cities']\" style=\"minWidth: 14rem\" placeholder=\"Select a City\">\n            <template #option=\"slotProps\">\n                <div class=\"country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" v-if=\"slotProps.option.states\" />\n                    <i class=\"pi pi-compass mr-2\" v-if=\"slotProps.option.cities\"></i>\n                    <i class=\"pi pi-map-marker mr-2\" v-if=\"slotProps.option.cname\"></i>\n                    <span>{{slotProps.option.cname || slotProps.option.name}}</span>\n                </div>\n            </template>\n        </CascadeSelect>\n\n        <h5>Loading State</h5>\n        <CascadeSelect placeholder=\"Loading...\" loading style=\"minWidth: 14rem\"></CascadeSelect>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            selectedCity1: null,\n            selectedCity2: null,\n            countries: [\n                {\n                    name: 'Australia',\n                    code: 'AU',\n                    states: [\n                        {\n                            name: 'New South Wales',\n                            cities: [\n                                {cname: 'Sydney', code: 'A-SY'},\n                                {cname: 'Newcastle', code: 'A-NE'},\n                                {cname: 'Wollongong', code: 'A-WO'}\n                            ]\n                        },\n                        {\n                            name: 'Queensland',\n                            cities: [\n                                {cname: 'Brisbane', code: 'A-BR'},\n                                {cname: 'Townsville', code: 'A-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'Canada', \n                    code: 'CA',\n                    states: [\n                        {\n                            name: 'Quebec',\n                            cities: [\n                                {cname: 'Montreal', code: 'C-MO'},\n                                {cname: 'Quebec City', code: 'C-QU'}\n                            ]\n                        },\n                        {\n                            name: 'Ontario',\n                            cities: [\n                                {cname: 'Ottawa', code: 'C-OT'},\n                                {cname: 'Toronto', code: 'C-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'United States',\n                    code: 'US',\n                    states: [\n                        {\n                            name: 'California',\n                            cities: [\n                                {cname: 'Los Angeles', code: 'US-LA'},\n                                {cname: 'San Diego', code: 'US-SD'},\n                                {cname: 'San Francisco', code: 'US-SF'}\n                            ]\n                        },\n                        {\n                            name: 'Florida',\n                            cities: [\n                                {cname: 'Jacksonville', code: 'US-JA'},\n                                {cname: 'Miami', code: 'US-MI'},\n                                {cname: 'Tampa', code: 'US-TA'},\n                                {cname: 'Orlando', code: 'US-OR'}\n                            ]\n                        },\n                        {\n                            name: 'Texas',\n                            cities: [\n                                {cname: 'Austin', code: 'US-AU'},\n                                {cname: 'Dallas', code: 'US-DA'},\n                                {cname: 'Houston', code: 'US-HO'}\n                            ]\n                        }\n                    ]\n                }\n            ]\n        } \n    }\n}\n<\\/script>\n\n<style>\nimg {\n    width: 18px;\n    margin-right: 0.5rem;\n}\n</style>\n"},"composition-api":{tabName:"Composition API Source",content:"\n<template>\n    <div>\n        <h5>Basic</h5>\n        <CascadeSelect v-model=\"selectedCity1\" :options=\"countries\" optionLabel=\"cname\" optionGroupLabel=\"name\"\n                :optionGroupChildren=\"['states', 'cities']\" style=\"minWidth: 14rem\" placeholder=\"Select a City\" />\n\n        <h5>Templating</h5>\n        <CascadeSelect v-model=\"selectedCity2\" :options=\"countries\" optionLabel=\"cname\" optionGroupLabel=\"name\" \n                :optionGroupChildren=\"['states', 'cities']\" style=\"minWidth: 14rem\" placeholder=\"Select a City\">\n            <template #option=\"slotProps\">\n                <div class=\"country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" v-if=\"slotProps.option.states\" />\n                    <i class=\"pi pi-compass mr-2\" v-if=\"slotProps.option.cities\"></i>\n                    <i class=\"pi pi-map-marker mr-2\" v-if=\"slotProps.option.cname\"></i>\n                    <span>{{slotProps.option.cname || slotProps.option.name}}</span>\n                </div>\n            </template>\n        </CascadeSelect>\n\n        <h5>Loading State</h5>\n        <CascadeSelect placeholder=\"Loading...\" loading style=\"minWidth: 14rem\"></CascadeSelect>\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n    setup() {\n        const selectedCity1 = ref();\n        const selectedCity2 = ref();\n        const countries = ref([\n            {\n                name: 'Australia',\n                code: 'AU',\n                states: [\n                    {\n                        name: 'New South Wales',\n                        cities: [\n                            {cname: 'Sydney', code: 'A-SY'},\n                            {cname: 'Newcastle', code: 'A-NE'},\n                            {cname: 'Wollongong', code: 'A-WO'}\n                        ]\n                    },\n                    {\n                        name: 'Queensland',\n                        cities: [\n                            {cname: 'Brisbane', code: 'A-BR'},\n                            {cname: 'Townsville', code: 'A-TO'}\n                        ]\n                    },\n                    \n                ]\n            },\n            {\n                name: 'Canada', \n                code: 'CA',\n                states: [\n                    {\n                        name: 'Quebec',\n                        cities: [\n                            {cname: 'Montreal', code: 'C-MO'},\n                            {cname: 'Quebec City', code: 'C-QU'}\n                        ]\n                    },\n                    {\n                        name: 'Ontario',\n                        cities: [\n                            {cname: 'Ottawa', code: 'C-OT'},\n                            {cname: 'Toronto', code: 'C-TO'}\n                        ]\n                    },\n                    \n                ]\n            },\n            {\n                name: 'United States',\n                code: 'US',\n                states: [\n                    {\n                        name: 'California',\n                        cities: [\n                            {cname: 'Los Angeles', code: 'US-LA'},\n                            {cname: 'San Diego', code: 'US-SD'},\n                            {cname: 'San Francisco', code: 'US-SF'}\n                        ]\n                    },\n                    {\n                        name: 'Florida',\n                        cities: [\n                            {cname: 'Jacksonville', code: 'US-JA'},\n                            {cname: 'Miami', code: 'US-MI'},\n                            {cname: 'Tampa', code: 'US-TA'},\n                            {cname: 'Orlando', code: 'US-OR'}\n                        ]\n                    },\n                    {\n                        name: 'Texas',\n                        cities: [\n                            {cname: 'Austin', code: 'US-AU'},\n                            {cname: 'Dallas', code: 'US-DA'},\n                            {cname: 'Houston', code: 'US-HO'}\n                        ]\n                    }\n                ]\n            }\n        ]);\n\n        return { selectedCity1, selectedCity2, countries }\n    }\n}\n<\\/script>\n\n<style>\nimg {\n    width: 18px;\n    margin-right: 0.5rem;\n}\n</style>\n"},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/cascadeselect/cascadeselect.min.js"><\\/script>',content:"\n        <div id=\"app\">\n            <h5>Basic</h5>\n            <p-cascadeselect v-model=\"selectedCity1\" :options=\"countries\" option-label=\"cname\" option-group-label=\"name\"\n                    :option-group-children=\"['states', 'cities']\" style=\"minWidth: 14rem\" placeholder=\"Select a City\"></p-cascadeselect>\n\n            <h5>Templating</h5>\n            <p-cascadeselect v-model=\"selectedCity2\" :options=\"countries\" option-label=\"cname\" option-group-label=\"name\" \n                    :option-group-children=\"['states', 'cities']\" style=\"minWidth: 14rem\" placeholder=\"Select a City\">\n                <template #option=\"slotProps\">\n                    <div class=\"country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" v-if=\"slotProps.option.states\" />\n                        <i class=\"pi pi-compass mr-2\" v-if=\"slotProps.option.cities\"></i>\n                        <i class=\"pi pi-map-marker mr-2\" v-if=\"slotProps.option.cname\"></i>\n                        <span>{{slotProps.option.cname || slotProps.option.name}}</span>\n                    </div>\n                </template>\n            </p-cascadeselect>\n\n            <h5>Loading State</h5>\n            <p-cascadeselect placeholder=\"Loading...\" loading style=\"minWidth: 14rem\"></p-cascadeselect>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref } = Vue;\n\n        const App = {\n            setup() {\n                const selectedCity1 = ref();\n                const selectedCity2 = ref();\n                const countries = ref([\n                    {\n                        name: 'Australia',\n                        code: 'AU',\n                        states: [\n                            {\n                                name: 'New South Wales',\n                                cities: [\n                                    {cname: 'Sydney', code: 'A-SY'},\n                                    {cname: 'Newcastle', code: 'A-NE'},\n                                    {cname: 'Wollongong', code: 'A-WO'}\n                                ]\n                            },\n                            {\n                                name: 'Queensland',\n                                cities: [\n                                    {cname: 'Brisbane', code: 'A-BR'},\n                                    {cname: 'Townsville', code: 'A-TO'}\n                                ]\n                            },\n                            \n                        ]\n                    },\n                    {\n                        name: 'Canada', \n                        code: 'CA',\n                        states: [\n                            {\n                                name: 'Quebec',\n                                cities: [\n                                    {cname: 'Montreal', code: 'C-MO'},\n                                    {cname: 'Quebec City', code: 'C-QU'}\n                                ]\n                            },\n                            {\n                                name: 'Ontario',\n                                cities: [\n                                    {cname: 'Ottawa', code: 'C-OT'},\n                                    {cname: 'Toronto', code: 'C-TO'}\n                                ]\n                            },\n                            \n                        ]\n                    },\n                    {\n                        name: 'United States',\n                        code: 'US',\n                        states: [\n                            {\n                                name: 'California',\n                                cities: [\n                                    {cname: 'Los Angeles', code: 'US-LA'},\n                                    {cname: 'San Diego', code: 'US-SD'},\n                                    {cname: 'San Francisco', code: 'US-SF'}\n                                ]\n                            },\n                            {\n                                name: 'Florida',\n                                cities: [\n                                    {cname: 'Jacksonville', code: 'US-JA'},\n                                    {cname: 'Miami', code: 'US-MI'},\n                                    {cname: 'Tampa', code: 'US-TA'},\n                                    {cname: 'Orlando', code: 'US-OR'}\n                                ]\n                            },\n                            {\n                                name: 'Texas',\n                                cities: [\n                                    {cname: 'Austin', code: 'US-AU'},\n                                    {cname: 'Dallas', code: 'US-DA'},\n                                    {cname: 'Houston', code: 'US-HO'}\n                                ]\n                            }\n                        ]\n                    }\n                ]);\n\n                return { selectedCity1, selectedCity2, countries }\n            },\n            components: {\n                \"p-cascadeselect\": primevue.cascadeselect\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\/script>\n\n        <style>\n        img {\n            width: 18px;\n            margin-right: 0.5rem;\n        }\n        </style>\n"}}}}},Z=t("6b0d"),z=t.n(Z);const K=z()(q,[["render",_]]);var X=K,$={data:function(){return{selectedCity1:null,selectedCity2:null,countries:[{name:"Australia",code:"AU",states:[{name:"New South Wales",cities:[{cname:"Sydney",code:"A-SY"},{cname:"Newcastle",code:"A-NE"},{cname:"Wollongong",code:"A-WO"}]},{name:"Queensland",cities:[{cname:"Brisbane",code:"A-BR"},{cname:"Townsville",code:"A-TO"}]}]},{name:"Canada",code:"CA",states:[{name:"Quebec",cities:[{cname:"Montreal",code:"C-MO"},{cname:"Quebec City",code:"C-QU"}]},{name:"Ontario",cities:[{cname:"Ottawa",code:"C-OT"},{cname:"Toronto",code:"C-TO"}]}]},{name:"United States",code:"US",states:[{name:"California",cities:[{cname:"Los Angeles",code:"US-LA"},{cname:"San Diego",code:"US-SD"},{cname:"San Francisco",code:"US-SF"}]},{name:"Florida",cities:[{cname:"Jacksonville",code:"US-JA"},{cname:"Miami",code:"US-MI"},{cname:"Tampa",code:"US-TA"},{cname:"Orlando",code:"US-OR"}]},{name:"Texas",cities:[{cname:"Austin",code:"US-AU"},{cname:"Dallas",code:"US-DA"},{cname:"Houston",code:"US-HO"}]}]}]}},components:{CascadeSelectDoc:X}};const ee=z()($,[["render",j]]);n["default"]=ee}}]);