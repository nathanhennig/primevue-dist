(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-ef9bb43c"],{5607:function(e,n,t){"use strict";t.r(n);var a=t("7a23"),o={class:"content-section introduction"},l=Object(a["k"])("div",{class:"feature-intro"},[Object(a["k"])("h1",null,[Object(a["n"])("DataTable "),Object(a["k"])("span",null,"Size")]),Object(a["k"])("p",null,"In addition to a regular table, alternatives with alternative sizes are available.")],-1),r={class:"content-section implementation"},c={class:"card"},d=Object(a["n"])(" Small Table "),u={class:"card"},i=Object(a["n"])(" Normal Table "),s={class:"card"},m=Object(a["n"])(" Large Table ");function p(e,n,t,p,b,v){var f=Object(a["P"])("AppDemoActions"),h=Object(a["P"])("Column"),C=Object(a["P"])("DataTable"),y=Object(a["P"])("AppDoc");return Object(a["H"])(),Object(a["j"])("div",null,[Object(a["k"])("div",o,[l,Object(a["o"])(f)]),Object(a["k"])("div",r,[Object(a["k"])("div",c,[Object(a["o"])(C,{value:b.products,class:"p-datatable-sm",responsiveLayout:"scroll"},{header:Object(a["Z"])((function(){return[d]})),default:Object(a["Z"])((function(){return[Object(a["o"])(h,{field:"code",header:"Code"}),Object(a["o"])(h,{field:"name",header:"Name"}),Object(a["o"])(h,{field:"category",header:"Category"}),Object(a["o"])(h,{field:"quantity",header:"Quantity"})]})),_:1},8,["value"])]),Object(a["k"])("div",u,[Object(a["o"])(C,{value:b.products,responsiveLayout:"scroll"},{header:Object(a["Z"])((function(){return[i]})),default:Object(a["Z"])((function(){return[Object(a["o"])(h,{field:"code",header:"Code"}),Object(a["o"])(h,{field:"name",header:"Name"}),Object(a["o"])(h,{field:"category",header:"Category"}),Object(a["o"])(h,{field:"quantity",header:"Quantity"})]})),_:1},8,["value"])]),Object(a["k"])("div",s,[Object(a["o"])(C,{value:b.products,class:"p-datatable-lg",responsiveLayout:"scroll"},{header:Object(a["Z"])((function(){return[m]})),default:Object(a["Z"])((function(){return[Object(a["o"])(h,{field:"code",header:"Code"}),Object(a["o"])(h,{field:"name",header:"Name"}),Object(a["o"])(h,{field:"category",header:"Category"}),Object(a["o"])(h,{field:"quantity",header:"Quantity"})]})),_:1},8,["value"])])]),Object(a["o"])(y,{name:"DataTableSizeDemo",sources:b.sources,service:["ProductService"],data:["products-small"],github:"datatable/DataTableSizeDemo.vue"},null,8,["sources"])])}var b=t("e9c0"),v={data:function(){return{products:null,sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n\t<div>\n        <div class="card">\n            <DataTable :value="products" class="p-datatable-sm" responsiveLayout="scroll">\n                <template #header>\n                    Small Table\n                </template>\n                <Column field="code" header="Code"></Column>\n                <Column field="name" header="Name"></Column>\n                <Column field="category" header="Category"></Column>\n                <Column field="quantity" header="Quantity"></Column>\n            </DataTable>\n        </div>\n\n        <div class="card">\n            <DataTable :value="products" responsiveLayout="scroll">\n                <template #header>\n                    Normal Table\n                </template>\n                <Column field="code" header="Code"></Column>\n                <Column field="name" header="Name"></Column>\n                <Column field="category" header="Category"></Column>\n                <Column field="quantity" header="Quantity"></Column>\n            </DataTable>\n        </div>\n\n        <div class="card">\n            <DataTable :value="products" class="p-datatable-lg" responsiveLayout="scroll">\n                <template #header>\n                    Large Table\n                </template>\n                <Column field="code" header="Code"></Column>\n                <Column field="name" header="Name"></Column>\n                <Column field="category" header="Category"></Column>\n                <Column field="quantity" header="Quantity"></Column>\n            </DataTable>\n        </div>\n\t</div>\n</template>\n\n<script>\nimport ProductService from \'./service/ProductService\';\n\nexport default {\n    data() {\n        return {\n            products: null\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    }\n}\n<\\/script>                  \n'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n\t<div>\n        <div class="card">\n            <DataTable :value="products" class="p-datatable-sm" responsiveLayout="scroll">\n                <template #header>\n                    Small Table\n                </template>\n                <Column field="code" header="Code"></Column>\n                <Column field="name" header="Name"></Column>\n                <Column field="category" header="Category"></Column>\n                <Column field="quantity" header="Quantity"></Column>\n            </DataTable>\n        </div>\n\n        <div class="card">\n            <DataTable :value="products" responsiveLayout="scroll">\n                <template #header>\n                    Normal Table\n                </template>\n                <Column field="code" header="Code"></Column>\n                <Column field="name" header="Name"></Column>\n                <Column field="category" header="Category"></Column>\n                <Column field="quantity" header="Quantity"></Column>\n            </DataTable>\n        </div>\n\n        <div class="card">\n            <DataTable :value="products" class="p-datatable-lg" responsiveLayout="scroll">\n                <template #header>\n                    Large Table\n                </template>\n                <Column field="code" header="Code"></Column>\n                <Column field="name" header="Name"></Column>\n                <Column field="category" header="Category"></Column>\n                <Column field="quantity" header="Quantity"></Column>\n            </DataTable>\n        </div>\n\t</div>\n</template>\n\n<script>\nimport { ref, onMounted } from \'vue\';\nimport ProductService from \'./service/ProductService\';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            productService.value.getProductsSmall().then(data => products.value = data);\n        })\n\n        const products = ref();\n        const productService = ref(new ProductService());\n\n        return { products }\n    }\n}\n<\\/script>                  \n'},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/datatable/datatable.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/column/column.min.js"><\\/script>\n        <script src="./ProductService.js"><\\/script>',content:'<div id="app">\n            <div class="card">\n                <p-datatable :value="products" class="p-datatable-sm" responsive-layout="scroll">\n                    <template #header>\n                        Small Table\n                    </template>\n                    <p-column field="code" header="Code"></p-column>\n                    <p-column field="name" header="Name"></p-column>\n                    <p-column field="category" header="Category"></p-column>\n                    <p-column field="quantity" header="Quantity"></p-column>\n                </p-datatable>\n            </div>\n\n            <div class="card">\n                <p-datatable :value="products" responsive-layout="scroll">\n                    <template #header>\n                        Normal Table\n                    </template>\n                    <p-column field="code" header="Code"></p-column>\n                    <p-column field="name" header="Name"></p-column>\n                    <p-column field="category" header="Category"></p-column>\n                    <p-column field="quantity" header="Quantity"></p-column>\n                </p-datatable>\n            </div>\n\n            <div class="card">\n                <p-datatable :value="products" class="p-datatable-lg" responsive-layout="scroll">\n                    <template #header>\n                        Large Table\n                    </template>\n                    <p-column field="code" header="Code"></p-column>\n                    <p-column field="name" header="Name"></p-column>\n                    <p-column field="category" header="Category"></p-column>\n                    <p-column field="quantity" header="Quantity"></Column>\n                </p-datatable>\n            </div>\n        </div>\n\n        <script type="module">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    productService.value.getProductsSmall().then(data => products.value = data);\n                })\n\n                const products = ref();\n                const productService = ref(new ProductService());\n\n                return { products }\n            },\n            components: {\n                "p-datatable": primevue.datatable,\n                "p-column": primevue.column\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount("#app");\n        <\\/script>                  \n'}}}},productService:null,created:function(){this.productService=new b["a"]},mounted:function(){var e=this;this.productService.getProductsSmall().then((function(n){return e.products=n}))}},f=t("6b0d"),h=t.n(f);const C=h()(v,[["render",p]]);n["default"]=C},e9c0:function(e,n,t){"use strict";t.d(n,"a",(function(){return l}));var a=t("d4ec"),o=t("bee2"),l=(t("d3b7"),function(){function e(){Object(a["a"])(this,e)}return Object(o["a"])(e,[{key:"getProductsSmall",value:function(){return fetch("demo/data/products-small.json").then((function(e){return e.json()})).then((function(e){return e.data}))}},{key:"getProducts",value:function(){return fetch("demo/data/products.json").then((function(e){return e.json()})).then((function(e){return e.data}))}},{key:"getProductsWithOrdersSmall",value:function(){return fetch("demo/data/products-orders-small.json").then((function(e){return e.json()})).then((function(e){return e.data}))}}]),e}())}}]);