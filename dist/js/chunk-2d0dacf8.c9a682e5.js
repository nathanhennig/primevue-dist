(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0dacf8"],{"6cd9":function(e,t,n){"use strict";n.r(t);n("b0c0");var l=n("7a23"),o=n("2d77"),i=n.n(o),a={class:"content-section introduction"},c=Object(l["k"])("div",{class:"feature-intro"},[Object(l["k"])("h1",null,"Listbox"),Object(l["k"])("p",null,"Listbox is used to select one or more values from a list of items.")],-1),s={class:"content-section implementation"},r={class:"card"},u=Object(l["k"])("h5",null,"Single",-1),b=Object(l["k"])("h5",null,"Grouped",-1),d={class:"flex align-items-center country-item"},p=Object(l["k"])("h5",null,"Advanced with Templating, Filtering and Multiple Selection",-1),m={class:"country-item"},O=Object(l["k"])("h5",null,"Virtual Scroll (100000 Items)",-1);function j(e,t,n,o,j,k){var h=Object(l["P"])("AppDemoActions"),v=Object(l["P"])("Listbox"),f=Object(l["P"])("ListboxDoc");return Object(l["H"])(),Object(l["j"])("div",null,[Object(l["k"])("div",a,[c,Object(l["o"])(h)]),Object(l["k"])("div",s,[Object(l["k"])("div",r,[u,Object(l["o"])(v,{modelValue:j.selectedCity,"onUpdate:modelValue":t[0]||(t[0]=function(e){return j.selectedCity=e}),options:j.cities,optionLabel:"name",style:{width:"15rem"}},null,8,["modelValue","options"]),b,Object(l["o"])(v,{modelValue:j.selectedGroupedCity,"onUpdate:modelValue":t[1]||(t[1]=function(e){return j.selectedGroupedCity=e}),options:j.groupedCities,optionLabel:"label",style:{width:"15rem"},optionGroupLabel:"label",optionGroupChildren:"items",listStyle:"max-height:250px"},{optiongroup:Object(l["Z"])((function(e){return[Object(l["k"])("div",d,[Object(l["k"])("img",{src:i.a,class:Object(l["A"])("flag flag-"+e.option.code.toLowerCase()),width:"18"},null,2),Object(l["k"])("div",null,Object(l["T"])(e.option.label),1)])]})),_:1},8,["modelValue","options"]),p,Object(l["o"])(v,{modelValue:j.selectedCountries,"onUpdate:modelValue":t[2]||(t[2]=function(e){return j.selectedCountries=e}),options:j.countries,multiple:!0,filter:!0,optionLabel:"name",listStyle:"max-height:250px",style:{width:"15rem"},filterPlaceholder:"Search"},{option:Object(l["Z"])((function(e){return[Object(l["k"])("div",m,[Object(l["k"])("img",{src:i.a,class:Object(l["A"])("flag flag-"+e.option.code.toLowerCase())},null,2),Object(l["k"])("div",null,Object(l["T"])(e.option.name),1)])]})),_:1},8,["modelValue","options"]),O,Object(l["o"])(v,{modelValue:j.selectedItem,"onUpdate:modelValue":t[3]||(t[3]=function(e){return j.selectedItem=e}),options:j.items,optionLabel:"label",optionValue:"value",virtualScrollerOptions:{itemSize:31},style:{width:"15rem"},listStyle:"height:250px"},null,8,["modelValue","options"])])]),Object(l["o"])(f)])}n("a630"),n("3ca3");var k=Object(l["k"])("h5",null,"Import via Module",-1),h=Object(l["k"])("code",null,"\nimport Listbox from 'primevue/listbox';\n\n",-1),v=[h],f=Object(l["k"])("h5",null,"Import via CDN",-1),g=Object(l["k"])("code",null,'\n<script src="https://unpkg.com/primevue@^3/core/core.min.js"><\/script>\n<script src="https://unpkg.com/primevue@^3/listbox/listbox.min.js"><\/script>\n\n',-1),y=[g],w=Object(l["k"])("h5",null,"Getting Started",-1),S=Object(l["k"])("p",null,[Object(l["n"])("Listbox requires a value to bind and a collection of arbitrary objects along with the "),Object(l["k"])("i",null,"optionLabel"),Object(l["n"])(" property to specify the label property of the option.")],-1),x=Object(l["k"])("code",null,'\n<Listbox v-model="selectedCity" :options="cities" optionLabel="name" />\n\n',-1),C=[x],L=Object(l["k"])("code",null,"\ndata() {\n\treturn {\n\t\tselectedCity: null,\n\t\tcities: [\n\t\t\t{name: 'New York', code: 'NY'},\n\t\t\t{name: 'Rome', code: 'RM'},\n\t\t\t{name: 'London', code: 'LDN'},\n\t\t\t{name: 'Istanbul', code: 'IST'},\n\t\t\t{name: 'Paris', code: 'PRS'}\n\t\t]\n\t}\n}\n\n",-1),P=[L],I=Object(l["k"])("h5",null,"Selection",-1),A=Object(l["k"])("p",null,[Object(l["n"])("Listbox allows selection of either single or multiple items. In single case, model should be a single object reference whereas in multiple case should be an array. Multiple items can either be selected using metaKey or toggled individually depending on the value of "),Object(l["k"])("i",null,"metaKeySelection"),Object(l["n"])(" property value which is true by default. On touch enabled devices metaKeySelection is turned off automatically.")],-1),G=Object(l["k"])("code",null,'\n<Listbox v-model="selectedCity" :options="cities" optionLabel="name" :multiple="true"/>\n\n',-1),N=[G],F=Object(l["k"])("h5",null,"Grouping",-1),D=Object(l["k"])("p",null,[Object(l["n"])("Options groups are specified with the "),Object(l["k"])("i",null,"optionGroupLabel"),Object(l["n"])(" and "),Object(l["k"])("i",null,"optionGroupChildren"),Object(l["n"])(" properties.")],-1),V=Object(l["k"])("code",null,"\nexport default {\n    data() {\n        return {\n            selectedGroupedCity: null,\n            groupedCities: [{\n                label: 'Germany', code: 'DE',\n                items: [\n                    {label: 'Berlin', value: 'Berlin'},\n                    {label: 'Frankfurt', value: 'Frankfurt'},\n                    {label: 'Hamburg', value: 'Hamburg'},\n                    {label: 'Munich', value: 'Munich'}\n                ]\n            },\n            {\n                label: 'USA', code: 'US',\n                items: [\n                    {label: 'Chicago', value: 'Chicago'},\n                    {label: 'Los Angeles', value: 'Los Angeles'},\n                    {label: 'New York', value: 'New York'},\n                    {label: 'San Francisco', value: 'San Francisco'}\n                ]\n            },\n            {\n                label: 'Japan', code: 'JP',\n                items: [\n                    {label: 'Kyoto', value: 'Kyoto'},\n                    {label: 'Osaka', value: 'Osaka'},\n                    {label: 'Tokyo', value: 'Tokyo'},\n                    {label: 'Yokohama', value: 'Yokohama'}\n                ]\n            }]\n        }\n    }\n}\n",-1),Y=[V],M=Object(l["k"])("code",null,[Object(l["k"])("template",null,[Object(l["n"])('\n<Listbox v-model="selectedGroupedCity" :options="groupedCities"\n        optionLabel="label" optionGroupLabel="label" optionGroupChildren="items">\n</Listbox>\n')]),Object(l["n"])("\n")],-1),T=[M],U=Object(l["k"])("h5",null,"Filter",-1),E=Object(l["k"])("p",null,[Object(l["n"])("Filtering allows searching items in the list using an input field at the header. In order to use filtering, enable "),Object(l["k"])("i",null,"filter"),Object(l["n"])(" property. By default, optionLabel is used when searching and "),Object(l["k"])("i",null,"filterFields"),Object(l["n"])(" can be used to customize the fields being utilized. Furthermore, "),Object(l["k"])("i",null,"filterMatchMode"),Object(l["n"])(' is available to define the search algorithm. Valid values are "contains" (default), "startsWith" and "endsWith".')],-1),R=Object(l["k"])("code",null,'\n<Listbox v-model="selectedCity" :options="cities" optionLabel="name" :filter="true"/>\n\n',-1),H=[R],B=Object(l["k"])("h5",null,"Templating",-1),J=Object(l["k"])("p",null,[Object(l["n"])("Label of an option is used as the display text of an item by default, for custom content support define an "),Object(l["k"])("i",null,"option"),Object(l["n"])(" template that gets the option instance as a parameter. In addition "),Object(l["k"])("i",null,"optiongroup"),Object(l["n"])(", "),Object(l["k"])("i",null,"header"),Object(l["n"])(", "),Object(l["k"])("i",null,"footer"),Object(l["n"])(", "),Object(l["k"])("i",null,"emptyfilter"),Object(l["n"])(" and "),Object(l["k"])("i",null,"empty"),Object(l["n"])(" slots are provided for further customization.")],-1),K=Object(l["k"])("code",null,[Object(l["k"])("template",null,[Object(l["n"])('\n<Listbox v-model="selectedCars" :options="cars" :multiple="true" :filter="true" optionLabel="brand" listStyle="max-height:250px" style="width:15em">\n    <template #option="slotProps">\n\t\t<div>\n\t\t\t<img :alt="slotProps.option.brand" :src="\'demo/images/car/\' + slotProps.option.brand + \'.png\'" />\n\t\t\t<span>{{slotProps.option.brand}}</span>\n\t\t</div>\n\t</template>\n</Listbox>\n')]),Object(l["n"])("\n")],-1),z=[K],W=Object(l["k"])("h5",null,"Properties",-1),_=Object(l["k"])("p",null,"Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.",-1),Z={class:"doc-tablewrapper"},$={class:"doc-table"},q=Object(l["k"])("thead",null,[Object(l["k"])("tr",null,[Object(l["k"])("th",null,"Name"),Object(l["k"])("th",null,"Type"),Object(l["k"])("th",null,"Default"),Object(l["k"])("th",null,"Description")])],-1),Q=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"modelValue"),Object(l["k"])("td",null,"any"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Value of the component.")],-1),X=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"options"),Object(l["k"])("td",null,"array"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"An array of selectitems to display as the available options.")],-1),ee=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"optionLabel"),Object(l["k"])("td",null,"string | function"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Property name or getter function to use as the label of an option.")],-1),te=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"optionValue"),Object(l["k"])("td",null,"string | function"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Property name or getter function to use as the value of an option, defaults to the option itself when not defined.")],-1),ne=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"optionDisabled"),Object(l["k"])("td",null,"string | function"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Property name or getter function to use as the disabled flag of an option, defaults to false when not defined.")],-1),le=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"optionGroupLabel"),Object(l["k"])("td",null,"string | function"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Property name or getter function to use as the label of an option group.")],-1),oe=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"optionGroupChildren"),Object(l["k"])("td",null,"string | function"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Property name or getter function that refers to the children options of option group.")],-1),ie=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"listStyle"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Inline style of inner list element.")],-1),ae=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"disabled"),Object(l["k"])("td",null,"boolean"),Object(l["k"])("td",null,"false"),Object(l["k"])("td",null,"When specified, disables the component.")],-1),ce=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"dataKey"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"A property to uniquely identify an option.")],-1),se=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"multiple"),Object(l["k"])("td",null,"boolean"),Object(l["k"])("td",null,"false"),Object(l["k"])("td",null,"When specified, allows selecting multiple values.")],-1),re=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"metaKeySelection"),Object(l["k"])("td",null,"boolean"),Object(l["k"])("td",null,"true"),Object(l["k"])("td",null,"Defines how multiple items can be selected, when true metaKey needs to be pressed to select or unselect an item and when set to false selection of each item can be toggled individually. On touch enabled devices, metaKeySelection is turned off automatically.")],-1),ue=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"filter"),Object(l["k"])("td",null,"boolean"),Object(l["k"])("td",null,"false"),Object(l["k"])("td",null,"When specified, displays a filter input at header.")],-1),be=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"filterPlaceholder"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Placeholder text to show when filter input is empty.")],-1),de=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"filterLocale"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"undefined"),Object(l["k"])("td",null,"Locale to use in filtering. The default locale is the host environment's current locale.")],-1),pe=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"filterMatchMode"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"contains"),Object(l["k"])("td",null,'Defines the filtering algorithm to use when searching the options. Valid values are "contains" (default), "startsWith" and "endsWith"')],-1),me=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"filterFields"),Object(l["k"])("td",null,"array"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Fields used when filtering the options, defaults to optionLabel.")],-1),Oe=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"emptyFilterMessage"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"No results found"),Object(l["k"])("td",null,"Text to display when filtering does not return any results. Defaults to value from PrimeVue locale configuration.")],-1),je=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"emptyMessage"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"No results found"),Object(l["k"])("td",null,"Text to display when there are no options available. Defaults to value from PrimeVue locale configuration.")],-1),ke=Object(l["k"])("td",null,"virtualScrollerOptions",-1),he=Object(l["k"])("td",null,"object",-1),ve=Object(l["k"])("td",null,"null",-1),fe=Object(l["n"])("Whether to use the virtualScroller feature. The properties of "),ge=Object(l["n"])("VirtualScroller"),ye=Object(l["n"])(" component can be used like an object in it."),we=Object(l["k"])("h5",null,"Events",-1),Se=Object(l["k"])("div",{class:"doc-tablewrapper"},[Object(l["k"])("table",{class:"doc-table"},[Object(l["k"])("thead",null,[Object(l["k"])("tr",null,[Object(l["k"])("th",null,"Name"),Object(l["k"])("th",null,"Parameters"),Object(l["k"])("th",null,"Description")])]),Object(l["k"])("tbody",null,[Object(l["k"])("tr",null,[Object(l["k"])("td",null,"change"),Object(l["k"])("td",null,[Object(l["n"])("event.originalEvent: Original event "),Object(l["k"])("br"),Object(l["n"])(" event.value: Selected option value ")]),Object(l["k"])("td",null,"Callback to invoke on value change.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"filter"),Object(l["k"])("td",null,[Object(l["n"])("event.originalEvent: Original event "),Object(l["k"])("br"),Object(l["n"])(" event.value: Filter value ")]),Object(l["k"])("td",null,"Callback to invoke on filter input.")])])])],-1),xe=Object(l["k"])("h5",null,"Slots",-1),Ce=Object(l["k"])("div",{class:"doc-tablewrapper"},[Object(l["k"])("table",{class:"doc-table"},[Object(l["k"])("thead",null,[Object(l["k"])("tr",null,[Object(l["k"])("th",null,"Name"),Object(l["k"])("th",null,"Parameters")])]),Object(l["k"])("tbody",null,[Object(l["k"])("tr",null,[Object(l["k"])("td",null,"option"),Object(l["k"])("td",null,[Object(l["n"])("option: Option instance "),Object(l["k"])("br"),Object(l["n"])(" index: Index of the option")])]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"optiongroup"),Object(l["k"])("td",null,[Object(l["n"])("option: OptionGroup instance "),Object(l["k"])("br"),Object(l["n"])(" index: Index of the option group")])]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"header"),Object(l["k"])("td",null,[Object(l["n"])("value: Value of the component "),Object(l["k"])("br"),Object(l["n"])(" options: Displayed options")])]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"footer"),Object(l["k"])("td",null,[Object(l["n"])("value: Value of the component "),Object(l["k"])("br"),Object(l["n"])(" options: Displayed options")])]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"emptyfilter"),Object(l["k"])("td",null,"-")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"empty"),Object(l["k"])("td",null,"-")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"content"),Object(l["k"])("td",null,[Object(l["n"])("items: An array of objects to display for virtualscroller"),Object(l["k"])("br"),Object(l["n"])(" styleClass: Style class of the component"),Object(l["k"])("br"),Object(l["n"])(" contentRef: Referance of the content"),Object(l["k"])("br"),Object(l["n"])(" getItemOptions: Options of the items")])]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"loader"),Object(l["k"])("td",null,"options: Options of the loader items for virtualscroller")])])])],-1),Le=Object(l["k"])("h5",null,"Styling",-1),Pe=Object(l["n"])("Following is the list of structural style classes, for theming classes visit "),Ie=Object(l["n"])("theming"),Ae=Object(l["n"])(" page."),Ge=Object(l["k"])("div",{class:"doc-tablewrapper"},[Object(l["k"])("table",{class:"doc-table"},[Object(l["k"])("thead",null,[Object(l["k"])("tr",null,[Object(l["k"])("th",null,"Name"),Object(l["k"])("th",null,"Element")])]),Object(l["k"])("tbody",null,[Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-listbox"),Object(l["k"])("td",null,"Main container element.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-listbox-header"),Object(l["k"])("td",null,"Header element.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-listbox-list-wrapper"),Object(l["k"])("td",null,"Container of list element.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-listbox-list"),Object(l["k"])("td",null,"List element.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-listbox-item"),Object(l["k"])("td",null,"An item in the list element.")])])])],-1),Ne=Object(l["k"])("h5",null,"Dependencies",-1),Fe=Object(l["k"])("p",null,"None.",-1);function De(e,t,n,o,i,a){var c=Object(l["P"])("router-link"),s=Object(l["P"])("AppDoc"),r=Object(l["Q"])("code");return Object(l["H"])(),Object(l["h"])(s,{name:"ListboxDemo",sources:i.sources,github:"listbox/ListboxDemo.vue"},{default:Object(l["Z"])((function(){return[k,Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,v)),[[r,void 0,void 0,{script:!0}]]),f,Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,y)),[[r]]),w,S,Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,C)),[[r]]),Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,P)),[[r,void 0,void 0,{script:!0}]]),I,A,Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,N)),[[r]]),F,D,Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,Y)),[[r,void 0,void 0,{script:!0}]]),Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,T)),[[r]]),U,E,Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,H)),[[r]]),B,J,Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,z)),[[r]]),W,_,Object(l["k"])("div",Z,[Object(l["k"])("table",$,[q,Object(l["k"])("tbody",null,[Q,X,ee,te,ne,le,oe,ie,ae,ce,se,re,ue,be,de,pe,me,Oe,je,Object(l["k"])("tr",null,[ke,he,ve,Object(l["k"])("td",null,[fe,Object(l["o"])(c,{to:"/virtualscroller"},{default:Object(l["Z"])((function(){return[ge]})),_:1}),ye])])])])]),we,Se,xe,Ce,Le,Object(l["k"])("p",null,[Pe,Object(l["o"])(c,{to:"/theming"},{default:Object(l["Z"])((function(){return[Ie]})),_:1}),Ae]),Ge,Ne,Fe]})),_:1},8,["sources"])}var Ve={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:"\n<template>\n    <div>\n        <h5>Single</h5>\n        <Listbox v-model=\"selectedCity\" :options=\"cities\" optionLabel=\"name\" style=\"width:15rem\" />\n\n        <h5>Grouped</h5>\n        <Listbox v-model=\"selectedGroupedCity\" :options=\"groupedCities\" optionLabel=\"label\" style=\"width:15rem\" optionGroupLabel=\"label\" optionGroupChildren=\"items\" listStyle=\"max-height:250px\">\n            <template #optiongroup=\"slotProps\">\n                <div class=\"flex align-items-center country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" class=\"mr-2\" />\n                    <div>{{slotProps.option.label}}</div>\n                </div>\n            </template>\n        </Listbox>\n\n        <h5>Advanced with Templating, Filtering and Multiple Selection</h5>\n        <Listbox v-model=\"selectedCountries\" :options=\"countries\" :multiple=\"true\" :filter=\"true\" optionLabel=\"name\" listStyle=\"max-height:250px\" style=\"width:15rem\" filterPlaceholder=\"Search\">\n            <template #option=\"slotProps\">\n                <div class=\"country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" class=\"mr-2\" />\n                    <div>{{slotProps.option.name}}</div>\n                </div>\n            </template>\n        </Listbox>\n\n        <h5>Virtual Scroll (1000 Items)</h5>\n        <Listbox v-model=\"selectedItem\" :options=\"items\" optionLabel=\"label\" optionValue=\"value\" :virtualScrollerOptions=\"{ itemSize: 31 }\" style=\"width:15rem\" listStyle=\"height:250px\" />\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            selectedCity: null,\n            selectedCountries: null,\n            selectedGroupedCity: null,\n            selectedItem: null,\n            cities: [\n                {name: 'New York', code: 'NY'},\n                {name: 'Rome', code: 'RM'},\n                {name: 'London', code: 'LDN'},\n                {name: 'Istanbul', code: 'IST'},\n                {name: 'Paris', code: 'PRS'}\n            ],\n            countries: [\n                {name: 'Australia', code: 'AU'},\n                {name: 'Brazil', code: 'BR'},\n                {name: 'China', code: 'CN'},\n                {name: 'Egypt', code: 'EG'},\n                {name: 'France', code: 'FR'},\n                {name: 'Germany', code: 'DE'},\n                {name: 'India', code: 'IN'},\n                {name: 'Japan', code: 'JP'},\n                {name: 'Spain', code: 'ES'},\n                {name: 'United States', code: 'US'}\n            ],\n            groupedCities: [{\n                label: 'Germany', code: 'DE',\n                items: [\n                    {label: 'Berlin', value: 'Berlin'},\n                    {label: 'Frankfurt', value: 'Frankfurt'},\n                    {label: 'Hamburg', value: 'Hamburg'},\n                    {label: 'Munich', value: 'Munich'}\n                ]\n            },\n            {\n                label: 'USA', code: 'US',\n                items: [\n                    {label: 'Chicago', value: 'Chicago'},\n                    {label: 'Los Angeles', value: 'Los Angeles'},\n                    {label: 'New York', value: 'New York'},\n                    {label: 'San Francisco', value: 'San Francisco'}\n                ]\n            },\n            {\n                label: 'Japan', code: 'JP',\n                items: [\n                    {label: 'Kyoto', value: 'Kyoto'},\n                    {label: 'Osaka', value: 'Osaka'},\n                    {label: 'Tokyo', value: 'Tokyo'},\n                    {label: 'Yokohama', value: 'Yokohama'}\n                ]\n            }],\n            items: Array.from({ length: 100000 }, (_, i) => ({ label: `Item #${i}`, value: i }))\n        }\n    }\n}\n<\\/script>\n"},"composition-api":{tabName:"Composition API Source",content:"\n<template>\n    <div>\n        <h5>Single</h5>\n        <Listbox v-model=\"selectedCity\" :options=\"cities\" optionLabel=\"name\" style=\"width:15rem\" />\n\n        <h5>Grouped</h5>\n        <Listbox v-model=\"selectedGroupedCity\" :options=\"groupedCities\" optionLabel=\"label\" style=\"width:15rem\" optionGroupLabel=\"label\" optionGroupChildren=\"items\" listStyle=\"max-height:250px\">\n            <template #optiongroup=\"slotProps\">\n                <div class=\"flex align-items-center country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" class=\"mr-2\" />\n                    <div>{{slotProps.option.label}}</div>\n                </div>\n            </template>\n        </Listbox>\n\n        <h5>Advanced with Templating, Filtering and Multiple Selection</h5>\n        <Listbox v-model=\"selectedCountries\" :options=\"countries\" :multiple=\"true\" :filter=\"true\" optionLabel=\"name\" listStyle=\"max-height:250px\" style=\"width:15rem\" filterPlaceholder=\"Search\">\n            <template #option=\"slotProps\">\n                <div class=\"country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" class=\"mr-2\" />\n                    <div>{{slotProps.option.name}}</div>\n                </div>\n            </template>\n        </Listbox>\n\n        <h5>Virtual Scroll (1000 Items)</h5>\n        <Listbox v-model=\"selectedItem\" :options=\"items\" optionLabel=\"label\" optionValue=\"value\" :virtualScrollerOptions=\"{ itemSize: 31 }\" style=\"width:15rem\" listStyle=\"height:250px\" />\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n    setup() {\n        const selectedCity = ref();\n        const selectedCountries = ref();\n        const selectedGroupedCity = ref();\n        const selectedItem = ref();\n        const cities = ref([\n            {name: 'New York', code: 'NY'},\n            {name: 'Rome', code: 'RM'},\n            {name: 'London', code: 'LDN'},\n            {name: 'Istanbul', code: 'IST'},\n            {name: 'Paris', code: 'PRS'}\n        ]);\n        const countries = ref([\n            {name: 'Australia', code: 'AU'},\n            {name: 'Brazil', code: 'BR'},\n            {name: 'China', code: 'CN'},\n            {name: 'Egypt', code: 'EG'},\n            {name: 'France', code: 'FR'},\n            {name: 'Germany', code: 'DE'},\n            {name: 'India', code: 'IN'},\n            {name: 'Japan', code: 'JP'},\n            {name: 'Spain', code: 'ES'},\n            {name: 'United States', code: 'US'}\n        ]);\n        const groupedCities = ref([\n            {\n                label: 'Germany', code: 'DE',\n                items: [\n                    {label: 'Berlin', value: 'Berlin'},\n                    {label: 'Frankfurt', value: 'Frankfurt'},\n                    {label: 'Hamburg', value: 'Hamburg'},\n                    {label: 'Munich', value: 'Munich'}\n                ]\n            },\n            {\n                label: 'USA', code: 'US',\n                items: [\n                    {label: 'Chicago', value: 'Chicago'},\n                    {label: 'Los Angeles', value: 'Los Angeles'},\n                    {label: 'New York', value: 'New York'},\n                    {label: 'San Francisco', value: 'San Francisco'}\n                ]\n            },\n            {\n                label: 'Japan', code: 'JP',\n                items: [\n                    {label: 'Kyoto', value: 'Kyoto'},\n                        {label: 'Osaka', value: 'Osaka'},\n                        {label: 'Tokyo', value: 'Tokyo'},\n                        {label: 'Yokohama', value: 'Yokohama'}\n                    ]\n                }\n            ]);\n\n        const items = ref(Array.from({ length: 100000 }, (_, i) => ({ label: `Item #${i}`, value: i })));\n\n        return { selectedCity, selectedCountries, selectedGroupedCity, cities, countries, groupedCities, items, selectedItem }\n    }\n}\n<\\/script>\n"},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/listbox/listbox.min.js"><\\/script>',content:"<div id=\"app\">\n            <h5>Single</h5>\n            <p-listbox v-model=\"selectedCity\" :options=\"cities\" option-label=\"name\" style=\"width:15rem\"></p-listbox>\n\n            <h5>Grouped</h5>\n            <p-listbox v-model=\"selectedGroupedCity\" :options=\"groupedCities\" option-label=\"label\" style=\"width:15rem\" option-group-label=\"label\" option-group-children=\"items\" list-style=\"max-height:250px\">\n                <template #optiongroup=\"slotProps\">\n                    <div class=\"flex align-items-center country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" class=\"mr-2\" />\n                        <div>{{slotProps.option.label}}</div>\n                    </div>\n                </template>\n            </p-listbox>\n\n        <h5>Advanced with Templating, Filtering and Multiple Selection</h5>\n        <p-listbox v-model=\"selectedCountries\" :options=\"countries\" :multiple=\"true\" :filter=\"true\" option-label=\"name\" list-style=\"max-height:250px\" style=\"width:15rem\" filter-placeholder=\"Search\">\n            <template #option=\"slotProps\">\n                <div class=\"country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" class=\"mr-2\" />\n                    <div>{{slotProps.option.name}}</div>\n                </div>\n            </template>\n        </p-listbox>\n\n            <h5>Virtual Scroll (1000 Items)</h5>\n            <p-listbox v-model=\"selectedItem\" :options=\"items\" option-label=\"label\" option-value=\"value\" :virtual-scroller-options=\"{ itemSize: 31 }\" style=\"width:15rem\" list-style=\"height:250px\"></p-listbox>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref } = Vue;\n\n        const App = {\n            setup() {\n                const selectedCity = ref();\n                const selectedCountries = ref();\n                const selectedGroupedCity = ref();\n                const selectedItem = ref();\n                const cities = ref([\n                    {name: 'New York', code: 'NY'},\n                    {name: 'Rome', code: 'RM'},\n                    {name: 'London', code: 'LDN'},\n                    {name: 'Istanbul', code: 'IST'},\n                    {name: 'Paris', code: 'PRS'}\n                ]);\n                const countries = ref([\n                    {name: 'Australia', code: 'AU'},\n                    {name: 'Brazil', code: 'BR'},\n                    {name: 'China', code: 'CN'},\n                    {name: 'Egypt', code: 'EG'},\n                    {name: 'France', code: 'FR'},\n                    {name: 'Germany', code: 'DE'},\n                    {name: 'India', code: 'IN'},\n                    {name: 'Japan', code: 'JP'},\n                    {name: 'Spain', code: 'ES'},\n                    {name: 'United States', code: 'US'}\n                ]);\n                const groupedCities = ref([\n                    {\n                        label: 'Germany', code: 'DE',\n                        items: [\n                            {label: 'Berlin', value: 'Berlin'},\n                            {label: 'Frankfurt', value: 'Frankfurt'},\n                            {label: 'Hamburg', value: 'Hamburg'},\n                            {label: 'Munich', value: 'Munich'}\n                        ]\n                    },\n                    {\n                        label: 'USA', code: 'US',\n                        items: [\n                            {label: 'Chicago', value: 'Chicago'},\n                            {label: 'Los Angeles', value: 'Los Angeles'},\n                            {label: 'New York', value: 'New York'},\n                            {label: 'San Francisco', value: 'San Francisco'}\n                        ]\n                    },\n                    {\n                        label: 'Japan', code: 'JP',\n                        items: [\n                            {label: 'Kyoto', value: 'Kyoto'},\n                                {label: 'Osaka', value: 'Osaka'},\n                                {label: 'Tokyo', value: 'Tokyo'},\n                                {label: 'Yokohama', value: 'Yokohama'}\n                            ]\n                        }\n                    ]);\n\n                const items = ref(Array.from({ length: 100000 }, (_, i) => ({ label: `Item #${i}`, value: i })));\n\n                return { selectedCity, selectedCountries, selectedGroupedCity, cities, countries, groupedCities, items, selectedItem }\n            },\n            components: {\n                \"p-listbox\": primevue.listbox\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\/script>\n"}}}}},Ye=n("6b0d"),Me=n.n(Ye);const Te=Me()(Ve,[["render",De]]);var Ue=Te,Ee={data:function(){return{selectedCity:null,selectedCountries:null,selectedGroupedCity:null,selectedItem:null,cities:[{name:"New York",code:"NY"},{name:"Rome",code:"RM"},{name:"London",code:"LDN"},{name:"Istanbul",code:"IST"},{name:"Paris",code:"PRS"}],countries:[{name:"Australia",code:"AU"},{name:"Brazil",code:"BR"},{name:"China",code:"CN"},{name:"Egypt",code:"EG"},{name:"France",code:"FR"},{name:"Germany",code:"DE"},{name:"India",code:"IN"},{name:"Japan",code:"JP"},{name:"Spain",code:"ES"},{name:"United States",code:"US"}],groupedCities:[{label:"Germany",code:"DE",items:[{label:"Berlin",value:"Berlin"},{label:"Frankfurt",value:"Frankfurt"},{label:"Hamburg",value:"Hamburg"},{label:"Munich",value:"Munich"}]},{label:"USA",code:"US",items:[{label:"Chicago",value:"Chicago"},{label:"Los Angeles",value:"Los Angeles"},{label:"New York",value:"New York"},{label:"San Francisco",value:"San Francisco"}]},{label:"Japan",code:"JP",items:[{label:"Kyoto",value:"Kyoto"},{label:"Osaka",value:"Osaka"},{label:"Tokyo",value:"Tokyo"},{label:"Yokohama",value:"Yokohama"}]}],items:Array.from({length:1e5},(function(e,t){return{label:"Item #".concat(t),value:t}}))}},components:{ListboxDoc:Ue}};const Re=Me()(Ee,[["render",j]]);t["default"]=Re}}]);