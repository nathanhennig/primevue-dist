(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-3d4e5710"],{"49f9":function(e,t,l){"use strict";l("e7a7")},"8a76":function(e,t,l){"use strict";l.r(t);l("b0c0");var n=l("7a23"),o=l("2d77"),c=l.n(o),a=function(e){return Object(n["K"])("data-v-36ceac99"),e=e(),Object(n["I"])(),e},i={class:"content-section introduction"},s=a((function(){return Object(n["k"])("div",{class:"feature-intro"},[Object(n["k"])("h1",null,"MultiSelect"),Object(n["k"])("p",null,"MultiSelect is used to multiple values from a list of options.")],-1)})),u={class:"content-section implementation"},r={class:"card"},d=a((function(){return Object(n["k"])("h5",null,"Basic",-1)})),b=a((function(){return Object(n["k"])("h5",null,"Chips",-1)})),p=a((function(){return Object(n["k"])("h5",null,"Grouped",-1)})),m={class:"flex align-items-center country-item"},O=a((function(){return Object(n["k"])("h5",null,"Advanced with Templating and Filtering",-1)})),j=Object(n["n"])(" Select Countries "),k={class:"country-item"},h=a((function(){return Object(n["k"])("h5",null,"Loading State",-1)})),v=a((function(){return Object(n["k"])("h5",null,"Virtual Scroll (1000 Items)",-1)}));function g(e,t,l,o,a,g){var f=Object(n["P"])("AppDemoActions"),y=Object(n["P"])("MultiSelect"),C=Object(n["P"])("MultiSelectDoc");return Object(n["H"])(),Object(n["j"])("div",null,[Object(n["k"])("div",i,[s,Object(n["o"])(f)]),Object(n["k"])("div",u,[Object(n["k"])("div",r,[d,Object(n["o"])(y,{modelValue:a.selectedCities1,"onUpdate:modelValue":t[0]||(t[0]=function(e){return a.selectedCities1=e}),options:a.cities,optionLabel:"name",placeholder:"Select Cities"},null,8,["modelValue","options"]),b,Object(n["o"])(y,{modelValue:a.selectedCities2,"onUpdate:modelValue":t[1]||(t[1]=function(e){return a.selectedCities2=e}),options:a.cities,optionLabel:"name",placeholder:"Select Cities",display:"chip"},null,8,["modelValue","options"]),p,Object(n["o"])(y,{modelValue:a.selectedGroupedCities,"onUpdate:modelValue":t[2]||(t[2]=function(e){return a.selectedGroupedCities=e}),options:a.groupedCities,optionLabel:"label",optionGroupLabel:"label",optionGroupChildren:"items",placeholder:"Select Cities"},{optiongroup:Object(n["Z"])((function(e){return[Object(n["k"])("div",m,[Object(n["k"])("img",{src:c.a,class:Object(n["A"])("flag flag-"+e.option.code.toLowerCase()),width:"18"},null,2),Object(n["k"])("div",null,Object(n["T"])(e.option.label),1)])]})),_:1},8,["modelValue","options"]),O,Object(n["o"])(y,{modelValue:a.selectedCountries,"onUpdate:modelValue":t[3]||(t[3]=function(e){return a.selectedCountries=e}),options:a.countries,optionLabel:"name",placeholder:"Select Countries",filter:!0,class:"multiselect-custom"},{value:Object(n["Z"])((function(e){return[(Object(n["H"])(!0),Object(n["j"])(n["a"],null,Object(n["N"])(e.value,(function(e){return Object(n["H"])(),Object(n["j"])("div",{class:"country-item country-item-value",key:e.code},[Object(n["k"])("img",{src:c.a,class:Object(n["A"])("flag flag-"+e.code.toLowerCase())},null,2),Object(n["k"])("div",null,Object(n["T"])(e.name),1)])})),128)),e.value&&0!==e.value.length?Object(n["i"])("",!0):(Object(n["H"])(),Object(n["j"])(n["a"],{key:0},[j],64))]})),option:Object(n["Z"])((function(e){return[Object(n["k"])("div",k,[Object(n["k"])("img",{src:c.a,class:Object(n["A"])("flag flag-"+e.option.code.toLowerCase())},null,2),Object(n["k"])("div",null,Object(n["T"])(e.option.name),1)])]})),_:1},8,["modelValue","options"]),h,Object(n["o"])(y,{placeholder:"Loading...",loading:""}),v,Object(n["o"])(y,{modelValue:a.selectedItems,"onUpdate:modelValue":t[4]||(t[4]=function(e){return a.selectedItems=e}),options:a.items,maxSelectedLabels:3,selectAll:a.selectAll,onSelectallChange:t[5]||(t[5]=function(e){return g.onSelectAllChange(e)}),onChange:t[6]||(t[6]=function(e){return g.onChange(e)}),optionLabel:"label",optionValue:"value",virtualScrollerOptions:{itemSize:44},placeholder:"Select Item"},null,8,["modelValue","options","selectAll"])])]),Object(n["o"])(C)])}l("a630"),l("3ca3"),l("d81d");var f=Object(n["k"])("h5",null,"Import via Module",-1),y=Object(n["k"])("code",null,"\nimport MultiSelect from 'primevue/multiselect';\n\n",-1),C=[y],S=Object(n["k"])("h5",null,"Import via CDN",-1),w=Object(n["k"])("code",null,'\n<script src="https://unpkg.com/primevue@^3/core/core.min.js"><\/script>\n<script src="https://unpkg.com/primevue@^3/multiselect/multiselect.min.js"><\/script>\n\n',-1),A=[w],L=Object(n["k"])("h5",null,"Getting Started",-1),P=Object(n["k"])("p",null,[Object(n["n"])("MultiSelect requires a value to bind and a collection of arbitrary objects along with the "),Object(n["k"])("i",null,"optionLabel"),Object(n["n"])(" property to specify the label property of the option.")],-1),M=Object(n["k"])("code",null,'\n<MultiSelect v-model="selectedCars" :options="cars" optionLabel="brand" placeholder="Select Brands" />\n\n',-1),I=[M],x=Object(n["k"])("code",null,"\ndata() {\n\treturn {\n\t\tselectedCars: null,\n\t\tcars: [\n\t\t\t{brand: 'Audi', value: 'Audi'},\n\t\t\t{brand: 'BMW', value: 'BMW'},\n\t\t\t{brand: 'Fiat', value: 'Fiat'},\n\t\t\t{brand: 'Honda', value: 'Honda'},\n\t\t\t{brand: 'Jaguar', value: 'Jaguar'},\n\t\t\t{brand: 'Mercedes', value: 'Mercedes'},\n\t\t\t{brand: 'Renault', value: 'Renault'},\n\t\t\t{brand: 'Volkswagen', value: 'Volkswagen'},\n\t\t\t{brand: 'Volvo', value: 'Volvo'}\n\t\t]\n\t}\n}\n\n",-1),F=[x],G=Object(n["k"])("h5",null,"Chips Display",-1),N=Object(n["k"])("p",null,[Object(n["n"])("A comma separated list is used by default to display selected items whereas alternative chip mode is provided using the "),Object(n["k"])("i",null,"display"),Object(n["n"])(" property to visualize the items as tokens.")],-1),V=Object(n["k"])("code",null,'\n<MultiSelect v-model="selectedCars" :options="cars" optionLabel="brand" placeholder="Select Brands" display="chip"/>\n\n',-1),D=[V],B=Object(n["k"])("h5",null,"Grouping",-1),H=Object(n["k"])("p",null,[Object(n["n"])("Options groups are specified with the "),Object(n["k"])("i",null,"optionGroupLabel"),Object(n["n"])(" and "),Object(n["k"])("i",null,"optionGroupChildren"),Object(n["n"])(" properties.")],-1),T=Object(n["k"])("code",null,"\nexport default {\n    data() {\n        return {\n            selectedGroupedCities: null,\n            groupedCities: [{\n                label: 'Germany', code: 'DE',\n                items: [\n                    {label: 'Berlin', value: 'Berlin'},\n                    {label: 'Frankfurt', value: 'Frankfurt'},\n                    {label: 'Hamburg', value: 'Hamburg'},\n                    {label: 'Munich', value: 'Munich'}\n                ]\n            },\n            {\n                label: 'USA', code: 'US',\n                items: [\n                    {label: 'Chicago', value: 'Chicago'},\n                    {label: 'Los Angeles', value: 'Los Angeles'},\n                    {label: 'New York', value: 'New York'},\n                    {label: 'San Francisco', value: 'San Francisco'}\n                ]\n            },\n            {\n                label: 'Japan', code: 'JP',\n                items: [\n                    {label: 'Kyoto', value: 'Kyoto'},\n                    {label: 'Osaka', value: 'Osaka'},\n                    {label: 'Tokyo', value: 'Tokyo'},\n                    {label: 'Yokohama', value: 'Yokohama'}\n                ]\n            }]\n        }\n    }\n}\n",-1),E=[T],Y=Object(n["k"])("code",null,[Object(n["k"])("template",null,[Object(n["n"])('\n<MultiSelect v-model="selectedGroupedCities" :options="groupedCities"\n        optionLabel="label" optionGroupLabel="label" optionGroupChildren="items">\n</MultiSelect>\n')]),Object(n["n"])("\n")],-1),U=[Y],R=Object(n["k"])("h5",null,"Filtering",-1),J=Object(n["k"])("p",null,[Object(n["n"])("Filtering allows searching items in the list using an input field at the header. In order to use filtering, enable "),Object(n["k"])("i",null,"filter"),Object(n["n"])(" property. By default, optionLabel is used when searching and "),Object(n["k"])("i",null,"filterFields"),Object(n["n"])(" can be used to customize the fields being utilized. Furthermore, "),Object(n["k"])("i",null,"filterMatchMode"),Object(n["n"])(' is available to define the search algorithm. Valid values are "contains" (default), "startsWith" and "endsWith".')],-1),W=Object(n["k"])("code",null,'\n<MultiSelect v-model="selectedCars" :options="cars" :filter="true" optionLabel="brand" placeholder="Select Brands"/>\n\n',-1),z=[W],K=Object(n["k"])("h5",null,"Templating",-1),_=Object(n["k"])("p",null,[Object(n["n"])("Label of an option is used as the display text of an item by default, for custom content support define an "),Object(n["k"])("i",null,"option"),Object(n["n"])(" template that gets the option instance as a parameter. In addition "),Object(n["k"])("i",null,"value"),Object(n["n"])(", "),Object(n["k"])("i",null,"optiongroup"),Object(n["n"])(", "),Object(n["k"])("i",null,"chip"),Object(n["n"])(", "),Object(n["k"])("i",null,"header"),Object(n["n"])(", "),Object(n["k"])("i",null,"footer"),Object(n["n"])(", "),Object(n["k"])("i",null,"emptyfilter"),Object(n["n"])(" and "),Object(n["k"])("i",null,"empty"),Object(n["n"])(" slots are provided for further customization.")],-1),$=Object(n["k"])("code",null,[Object(n["k"])("template",null,[Object(n["n"])('\n<MultiSelect v-model="selectedCars2" :options="cars" optionLabel="brand" placeholder="Select a Car">\n\t<template #value="slotProps">\n\t\t<div class="p-multiselect-car-token" v-for="option of slotProps.value" :key="option.brand">\n\t\t\t<img :alt="option.brand" :src="\'demo/images/car/\' + option.brand + \'.png\'" />\n\t\t\t<span>{{option.brand}}</span>\n\t\t</div>\n\t\t<template v-if="!slotProps.value || slotProps.value.length === 0">\n            Select Brands\n        </template>\n\t</template>\n\t<template #option="slotProps">\n\t\t<div class="p-multiselect-car-option">\n\t\t\t<img :alt="slotProps.option.brand" :src="\'demo/images/car/\' + slotProps.option.brand + \'.png\'" />\n\t\t\t<span>{{slotProps.option.brand}}</span>\n\t\t</div>\n\t</template>\n</MultiSelect>\n')]),Object(n["n"])("\n")],-1),Z=[$],q=Object(n["k"])("h5",null,"Properties",-1),Q=Object(n["k"])("p",null,"Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.",-1),X={class:"doc-tablewrapper"},ee={class:"doc-table"},te=Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Name"),Object(n["k"])("th",null,"Type"),Object(n["k"])("th",null,"Default"),Object(n["k"])("th",null,"Description")])],-1),le=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"modelValue"),Object(n["k"])("td",null,"any"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Value of the component.")],-1),ne=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"options"),Object(n["k"])("td",null,"array"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"An array of selectitems to display as the available options.")],-1),oe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"optionLabel"),Object(n["k"])("td",null,"string | function"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Property name or getter function to use as the label of an option.")],-1),ce=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"optionValue"),Object(n["k"])("td",null,"string | function"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Property name or getter function to use as the value of an option, defaults to the option itself when not defined.")],-1),ae=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"optionDisabled"),Object(n["k"])("td",null,"string | function"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Property name or getter function to use as the disabled flag of an option, defaults to false when not defined.")],-1),ie=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"optionGroupLabel"),Object(n["k"])("td",null,"string | function"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Property name or getter function to use as the label of an option group.")],-1),se=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"optionGroupChildren"),Object(n["k"])("td",null,"string | function"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Property name or getter function that refers to the children options of option group.")],-1),ue=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"scrollHeight"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"200px"),Object(n["k"])("td",null,"Height of the viewport, a scrollbar is defined if height of list exceeds this value.")],-1),re=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filter"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"When specified, displays a filter input at header.")],-1),de=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filterPlaceholder"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Placeholder text to show when filter input is empty.")],-1),be=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filterLocale"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"undefined"),Object(n["k"])("td",null,"Locale to use in filtering. The default locale is the host environment's current locale.")],-1),pe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filterMatchMode"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"contains"),Object(n["k"])("td",null,'Defines the filtering algorithm to use when searching the options. Valid values are "contains" (default), "startsWith" and "endsWith"')],-1),me=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filterFields"),Object(n["k"])("td",null,"array"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Fields used when filtering the options, defaults to optionLabel.")],-1),Oe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"placeholder"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Label to display when there are no selections.")],-1),je=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"disabled"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"When present, it specifies that the component should be disabled.")],-1),ke=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"tabindex"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Index of the element in tabbing order.")],-1),he=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"inputId"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Identifier of the underlying input element.")],-1),ve=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"dataKey"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"A property to uniquely identify an option.")],-1),ge=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"ariaLabelledBy"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Establishes relationships between the component and label(s) where its value should be one or more element IDs.")],-1),fe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"appendTo"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"body"),Object(n["k"])("td",null,'A valid query selector or an HTMLElement to specify where the overlay gets attached. Special keywords are "body" for document body and "self" for the element itself.')],-1),ye=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"emptyFilterMessage"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"No results found"),Object(n["k"])("td",null,"Text to display when filtering does not return any results. Defaults to value from PrimeVue locale configuration.")],-1),Ce=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"emptyMessage"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"No results found"),Object(n["k"])("td",null,"Text to display when there are no options available. Defaults to value from PrimeVue locale configuration.")],-1),Se=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"display"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"comma"),Object(n["k"])("td",null,'Defines how the selected items are displayed, valid values are "comma" and "chip".')],-1),we=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"panelClass"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Style class of the overlay panel.")],-1),Ae=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"selectionLimit"),Object(n["k"])("td",null,"number"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Maximum number of selectable items.")],-1),Le=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"showToggleAll"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"true"),Object(n["k"])("td",null,"Whether to show the header checkbox to toggle the selection of all items at once.")],-1),Pe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"loading"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"Whether the multiselect is in loading state.")],-1),Me=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"loadingIcon"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"pi pi-spinner pi-spin"),Object(n["k"])("td",null,"Icon to display in loading state.")],-1),Ie=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"maxSelectedLabels"),Object(n["k"])("td",null,"number"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Decides how many selected item labels to show at most.")],-1),xe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"selectedItemsLabel"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"{0} items selected"),Object(n["k"])("td",null,"Label to display after exceeding max selected labels.")],-1),Fe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"selectAll"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"Whether all data is selected.")],-1),Ge=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"resetFilterOnHide"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"Clears the filter value when hiding the dropdown.")],-1),Ne=Object(n["k"])("td",null,"virtualScrollerOptions",-1),Ve=Object(n["k"])("td",null,"object",-1),De=Object(n["k"])("td",null,"null",-1),Be=Object(n["n"])("Whether to use the virtualScroller feature. The properties of "),He=Object(n["n"])("VirtualScroller"),Te=Object(n["n"])(" component can be used like an object in it."),Ee=Object(n["k"])("h5",null,"Events",-1),Ye=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Name"),Object(n["k"])("th",null,"Parameters"),Object(n["k"])("th",null,"Description")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,"change"),Object(n["k"])("td",null,[Object(n["n"])("event.originalEvent: Original event "),Object(n["k"])("br"),Object(n["n"])(" event.value: Selected option value ")]),Object(n["k"])("td",null,"Callback to invoke on value change.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"before-show"),Object(n["k"])("td",null,"-"),Object(n["k"])("td",null,"Callback to invoke before the overlay is shown.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"before-hide"),Object(n["k"])("td",null,"-"),Object(n["k"])("td",null,"Callback to invoke before the overlay is hidden.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"show"),Object(n["k"])("td",null,"-"),Object(n["k"])("td",null,"Callback to invoke when the overlay is shown.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"hide"),Object(n["k"])("td",null,"-"),Object(n["k"])("td",null,"Callback to invoke when the overlay is hidden.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filter"),Object(n["k"])("td",null,[Object(n["n"])("event.originalEvent: Original event "),Object(n["k"])("br"),Object(n["n"])(" event.value: Filter value ")]),Object(n["k"])("td",null,"Callback to invoke on filter input.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"selectall-change"),Object(n["k"])("td",null,[Object(n["n"])("event.originalEvent: Original event "),Object(n["k"])("br"),Object(n["n"])(" event.checked: Whether all data is selected.")]),Object(n["k"])("td",null,"Callback to invoke when all data is selected.")])])])],-1),Ue=Object(n["k"])("h5",null,"Methods",-1),Re=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Name"),Object(n["k"])("th",null,"Parameters"),Object(n["k"])("th",null,"Description")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,"show"),Object(n["k"])("td",null,"-"),Object(n["k"])("td",null,"Shows the overlay.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"hide"),Object(n["k"])("td",null,"-"),Object(n["k"])("td",null,"Hides the overlay.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"clearFilter"),Object(n["k"])("td",null,"-"),Object(n["k"])("td",null,"Clears filter input.")])])])],-1),Je=Object(n["k"])("h5",null,"Slots",-1),We=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Name"),Object(n["k"])("th",null,"Parameters")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,"option"),Object(n["k"])("td",null,[Object(n["n"])("option: Option instance "),Object(n["k"])("br"),Object(n["n"])(" index: Index of the option")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"optiongroup"),Object(n["k"])("td",null,[Object(n["n"])("option: OptionGroup instance "),Object(n["k"])("br"),Object(n["n"])(" index: Index of the option group")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"value"),Object(n["k"])("td",null,[Object(n["n"])("value: Value of the component "),Object(n["k"])("br"),Object(n["n"])(" placeholder: Placeholder prop value")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"header"),Object(n["k"])("td",null,[Object(n["n"])("value: Value of the component "),Object(n["k"])("br"),Object(n["n"])(" options: Displayed options")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"footer"),Object(n["k"])("td",null,[Object(n["n"])("value: Value of the component "),Object(n["k"])("br"),Object(n["n"])(" options: Displayed options")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"emptyfilter"),Object(n["k"])("td",null,"-")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"empty"),Object(n["k"])("td",null,"-")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"chip"),Object(n["k"])("td",null,"value: A value in the selection")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"content"),Object(n["k"])("td",null,[Object(n["n"])("items: An array of objects to display for virtualscroller"),Object(n["k"])("br"),Object(n["n"])(" styleClass: Style class of the component"),Object(n["k"])("br"),Object(n["n"])(" contentRef: Referance of the content"),Object(n["k"])("br"),Object(n["n"])(" getItemOptions: Options of the items")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"loader"),Object(n["k"])("td",null,"options: Options of the loader items for virtualscroller")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"indicator"),Object(n["k"])("td",null,"-")])])])],-1),ze=Object(n["k"])("h5",null,"Styling",-1),Ke=Object(n["n"])("Following is the list of structural style classes, for theming classes visit "),_e=Object(n["n"])("theming"),$e=Object(n["n"])(" page."),Ze=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Name"),Object(n["k"])("th",null,"Element")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-multiselect"),Object(n["k"])("td",null,"Container element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-multiselect-label-container"),Object(n["k"])("td",null,"Container of the label to display selected items.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-multiselect-label-container"),Object(n["k"])("td",null,"Label to display selected items.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-multiselect-trigger"),Object(n["k"])("td",null,"Dropdown button.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-multiselect-filter-container"),Object(n["k"])("td",null,"Container of filter input.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-multiselect-panel"),Object(n["k"])("td",null,"Overlay panel for items.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-multiselect-items"),Object(n["k"])("td",null,"List container of items.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-multiselect-item"),Object(n["k"])("td",null,"An item in the list.")])])])],-1),qe=Object(n["k"])("h5",null,"Dependencies",-1),Qe=Object(n["k"])("p",null,"None.",-1);function Xe(e,t,l,o,c,a){var i=Object(n["P"])("router-link"),s=Object(n["P"])("AppDoc"),u=Object(n["Q"])("code");return Object(n["H"])(),Object(n["h"])(s,{name:"MultiSelectDemo",sources:c.sources,github:"multiselect/MultiSelectDemo.vue"},{default:Object(n["Z"])((function(){return[f,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,C)),[[u,void 0,void 0,{script:!0}]]),S,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,A)),[[u]]),L,P,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,I)),[[u]]),Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,F)),[[u,void 0,void 0,{script:!0}]]),G,N,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,D)),[[u]]),B,H,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,E)),[[u,void 0,void 0,{script:!0}]]),Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,U)),[[u]]),R,J,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,z)),[[u]]),K,_,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,Z)),[[u]]),q,Q,Object(n["k"])("div",X,[Object(n["k"])("table",ee,[te,Object(n["k"])("tbody",null,[le,ne,oe,ce,ae,ie,se,ue,re,de,be,pe,me,Oe,je,ke,he,ve,ge,fe,ye,Ce,Se,we,Ae,Le,Pe,Me,Ie,xe,Fe,Ge,Object(n["k"])("tr",null,[Ne,Ve,De,Object(n["k"])("td",null,[Be,Object(n["o"])(i,{to:"/virtualscroller"},{default:Object(n["Z"])((function(){return[He]})),_:1}),Te])])])])]),Ee,Ye,Ue,Re,Je,We,ze,Object(n["k"])("p",null,[Ke,Object(n["o"])(i,{to:"/theming"},{default:Object(n["Z"])((function(){return[_e]})),_:1}),$e]),Ze,qe,Qe]})),_:1},8,["sources"])}var et={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:"\n<template>\n    <div>\n        <h5>Basic</h5>\n        <MultiSelect v-model=\"selectedCities1\" :options=\"cities\" optionLabel=\"name\" placeholder=\"Select Cities\" />\n\n        <h5>Chips</h5>\n        <MultiSelect v-model=\"selectedCities2\" :options=\"cities\" optionLabel=\"name\" placeholder=\"Select Cities\" display=\"chip\" />\n\n        <h5>Grouped</h5>\n        <MultiSelect v-model=\"selectedGroupedCities\" :options=\"groupedCities\" optionLabel=\"label\"  optionGroupLabel=\"label\" optionGroupChildren=\"items\" placeholder=\"Select Cities\">\n            <template #optiongroup=\"slotProps\">\n                <div class=\"flex align-items-center country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" class=\"mr-2\" width=\"18\" />\n                    <div>{{slotProps.option.label}}</div>\n                </div>\n            </template>\n        </MultiSelect>\n\n        <h5>Advanced with Templating and Filtering</h5>\n        <MultiSelect v-model=\"selectedCountries\" :options=\"countries\" optionLabel=\"name\" placeholder=\"Select Countries\" :filter=\"true\" class=\"multiselect-custom\">\n            <template #value=\"slotProps\">\n                <div class=\"country-item country-item-value\" v-for=\"option of slotProps.value\" :key=\"option.code\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" class=\"mr-2\" width=\"18\" />\n                    <div>{{option.name}}</div>\n                </div>\n                <template v-if=\"!slotProps.value || slotProps.value.length === 0\">\n                    Select Countries\n                </template>\n            </template>\n            <template #option=\"slotProps\">\n                <div class=\"country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" class=\"mr-2\" width=\"18\" />\n                    <div>{{slotProps.option.name}}</div>\n                </div>\n            </template>\n        </MultiSelect>\n\n        <h5>Loading State</h5>\n        <MultiSelect placeholder=\"Loading...\" loading></MultiSelect>\n\n        <h5>Virtual Scroll (1000 Items)</h5>\n        <MultiSelect v-model=\"selectedItems\" :options=\"items\" :maxSelectedLabels=\"3\" :selectAll=\"selectAll\" @selectall-change=\"onSelectAllChange($event)\" @change=\"onChange($event)\" optionLabel=\"label\" optionValue=\"value\" :virtualScrollerOptions=\"{ itemSize: 44 }\" placeholder=\"Select Item\" />\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            selectedCities1: null,\n            selectedCities2: null,\n            selectedCountries: null,\n            selectedGroupedCities: null,\n            selectedItems: null,\n            selectAll: false,\n            cities: [\n                {name: 'New York', code: 'NY'},\n                {name: 'Rome', code: 'RM'},\n                {name: 'London', code: 'LDN'},\n                {name: 'Istanbul', code: 'IST'},\n                {name: 'Paris', code: 'PRS'}\n            ],\n            countries: [\n                {name: 'Australia', code: 'AU'},\n                {name: 'Brazil', code: 'BR'},\n                {name: 'China', code: 'CN'},\n                {name: 'Egypt', code: 'EG'},\n                {name: 'France', code: 'FR'},\n                {name: 'Germany', code: 'DE'},\n                {name: 'India', code: 'IN'},\n                {name: 'Japan', code: 'JP'},\n                {name: 'Spain', code: 'ES'},\n                {name: 'United States', code: 'US'}\n            ],\n            groupedCities: [{\n                label: 'Germany', code: 'DE',\n                items: [\n                    {label: 'Berlin', value: 'Berlin'},\n                    {label: 'Frankfurt', value: 'Frankfurt'},\n                    {label: 'Hamburg', value: 'Hamburg'},\n                    {label: 'Munich', value: 'Munich'}\n                ]\n            },\n            {\n                label: 'USA', code: 'US',\n                items: [\n                    {label: 'Chicago', value: 'Chicago'},\n                    {label: 'Los Angeles', value: 'Los Angeles'},\n                    {label: 'New York', value: 'New York'},\n                    {label: 'San Francisco', value: 'San Francisco'}\n                ]\n            },\n            {\n                label: 'Japan', code: 'JP',\n                items: [\n                    {label: 'Kyoto', value: 'Kyoto'},\n                    {label: 'Osaka', value: 'Osaka'},\n                    {label: 'Tokyo', value: 'Tokyo'},\n                    {label: 'Yokohama', value: 'Yokohama'}\n                ]\n            }],\n            items: Array.from({ length: 1000 }, (_, i) => ({ label: `Item #${i}`, value: i }))\n        }\n    },\n    methods: {\n        onSelectAllChange(event) {\n            this.selectedItems = event.checked ? this.items.map((item) => item.value) : [];\n            this.selectAll = event.checked;\n        },\n        onChange(event) {\n            this.selectAll = event.value.length === this.items.length\n        }\n    }\n}\n<\\/script>\n\n<style lang=\"scss\" scoped>\n.p-multiselect {\n    width: 18rem;\n}\n\n::v-deep(.multiselect-custom) {\n    .p-multiselect-label:not(.p-placeholder) {\n        padding-top: .25rem;\n        padding-bottom: .25rem;\n    }\n\n    .country-item-value {\n        padding: .25rem .5rem;\n        border-radius: 3px;\n        display: inline-flex;\n        margin-right: .5rem;\n        background-color: var(--primary-color);\n        color: var(--primary-color-text);\n\n        img.flag {\n            width: 17px;\n        }\n    }\n}\n\n@media screen and (max-width: 640px) {\n    .p-multiselect {\n        width: 100%;\n    }\n}\n</style>"},"composition-api":{tabName:"Composition API Source",content:"\n<template>\n    <div>\n        <h5>Basic</h5>\n        <MultiSelect v-model=\"selectedCities1\" :options=\"cities\" optionLabel=\"name\" placeholder=\"Select Cities\" />\n\n        <h5>Chips</h5>\n        <MultiSelect v-model=\"selectedCities2\" :options=\"cities\" optionLabel=\"name\" placeholder=\"Select Cities\" display=\"chip\" />\n\n        <h5>Grouped</h5>\n        <MultiSelect v-model=\"selectedGroupedCities\" :options=\"groupedCities\" optionLabel=\"label\"  optionGroupLabel=\"label\" optionGroupChildren=\"items\" placeholder=\"Select Cities\">\n            <template #optiongroup=\"slotProps\">\n                <div class=\"flex align-items-center country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" class=\"mr-2\" width=\"18\" />\n                    <div>{{slotProps.option.label}}</div>\n                </div>\n            </template>\n        </MultiSelect>\n\n        <h5>Advanced with Templating and Filtering</h5>\n        <MultiSelect v-model=\"selectedCountries\" :options=\"countries\" optionLabel=\"name\" placeholder=\"Select Countries\" :filter=\"true\" class=\"multiselect-custom\">\n            <template #value=\"slotProps\">\n                <div class=\"country-item country-item-value\" v-for=\"option of slotProps.value\" :key=\"option.code\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" class=\"mr-2\" width=\"18\" />\n                    <div>{{option.name}}</div>\n                </div>\n                <template v-if=\"!slotProps.value || slotProps.value.length === 0\">\n                    Select Countries\n                </template>\n            </template>\n            <template #option=\"slotProps\">\n                <div class=\"country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" class=\"mr-2\" width=\"18\" />\n                    <div>{{slotProps.option.name}}</div>\n                </div>\n            </template>\n        </MultiSelect>\n\n        <h5>Loading State</h5>\n        <MultiSelect placeholder=\"Loading...\" loading></MultiSelect>\n\n        <h5>Virtual Scroll (1000 Items)</h5>\n        <MultiSelect v-model=\"selectedItems\" :options=\"items\" :maxSelectedLabels=\"3\" :selectAll=\"selectAll\" @selectall-change=\"onSelectAllChange($event)\" @change=\"onChange($event)\" optionLabel=\"label\" optionValue=\"value\" :virtualScrollerOptions=\"{ itemSize: 44 }\" placeholder=\"Select Item\" />\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n    setup() {\n        const selectedCities1 = ref();\n        const selectedCities2 = ref();\n        const selectedCountries = ref();\n        const selectedGroupedCities = ref();\n        const selectedItems = ref();\n        const selectAll = ref(false);\n        const cities = ref([\n            {name: 'New York', code: 'NY'},\n            {name: 'Rome', code: 'RM'},\n            {name: 'London', code: 'LDN'},\n            {name: 'Istanbul', code: 'IST'},\n            {name: 'Paris', code: 'PRS'}\n        ]);\n        const countries = ref([\n            {name: 'Australia', code: 'AU'},\n            {name: 'Brazil', code: 'BR'},\n            {name: 'China', code: 'CN'},\n            {name: 'Egypt', code: 'EG'},\n            {name: 'France', code: 'FR'},\n            {name: 'Germany', code: 'DE'},\n            {name: 'India', code: 'IN'},\n            {name: 'Japan', code: 'JP'},\n            {name: 'Spain', code: 'ES'},\n            {name: 'United States', code: 'US'}\n        ]);\n        const groupedCities = ref([\n            {\n                label: 'Germany', code: 'DE',\n                items: [\n                    {label: 'Berlin', value: 'Berlin'},\n                    {label: 'Frankfurt', value: 'Frankfurt'},\n                    {label: 'Hamburg', value: 'Hamburg'},\n                    {label: 'Munich', value: 'Munich'}\n                ]\n            },\n            {\n                label: 'USA', code: 'US',\n                items: [\n                    {label: 'Chicago', value: 'Chicago'},\n                    {label: 'Los Angeles', value: 'Los Angeles'},\n                    {label: 'New York', value: 'New York'},\n                    {label: 'San Francisco', value: 'San Francisco'}\n                ]\n            },\n            {\n                label: 'Japan', code: 'JP',\n                items: [\n                    {label: 'Kyoto', value: 'Kyoto'},\n                    {label: 'Osaka', value: 'Osaka'},\n                    {label: 'Tokyo', value: 'Tokyo'},\n                    {label: 'Yokohama', value: 'Yokohama'}\n                ]\n            }\n        ]);\n        const items = Array.from({ length: 1000 }, (_, i) => ({ label: `Item #${i}`, value: i }))\n\n        return { selectedCities1, selectedCities2, selectedCountries, selectedGroupedCities, cities, countries, groupedCities, items, selectedItems, selectAll }\n    },\n    methods: {\n        onSelectAllChange(event) {\n            this.selectedItems = event.checked ? this.items.map((item) => item.value) : [];\n            this.selectAll = event.checked;\n        },\n        onChange(event) {\n            this.selectAll = event.value.length === this.items.length\n        }\n    }\n}\n<\\/script>\n\n<style lang=\"scss\" scoped>\n.p-multiselect {\n    width: 18rem;\n}\n\n::v-deep(.multiselect-custom) {\n    .p-multiselect-label:not(.p-placeholder) {\n        padding-top: .25rem;\n        padding-bottom: .25rem;\n    }\n\n    .country-item-value {\n        padding: .25rem .5rem;\n        border-radius: 3px;\n        display: inline-flex;\n        margin-right: .5rem;\n        background-color: var(--primary-color);\n        color: var(--primary-color-text);\n\n        img.flag {\n            width: 17px;\n        }\n    }\n}\n\n@media screen and (max-width: 640px) {\n    .p-multiselect {\n        width: 100%;\n    }\n}\n</style>"},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/multiselect/multiselect.min.js"><\\/script>',content:"<div id=\"app\">\n            <h5>Basic</h5>\n            <p-multiselect v-model=\"selectedCities1\" :options=\"cities\" option-label=\"name\" placeholder=\"Select Cities\"></p-multiselect>\n\n            <h5>Chips</h5>\n            <p-multiselect v-model=\"selectedCities2\" :options=\"cities\" option-label=\"name\" placeholder=\"Select Cities\" display=\"chip\"></p-multiselect>\n\n            <h5>Grouped</h5>\n            <p-multiselect v-model=\"selectedGroupedCities\" :options=\"groupedCities\" option-label=\"label\"  option-group-label=\"label\" option-group-children=\"items\" placeholder=\"Select Cities\">\n                <template #optiongroup=\"slotProps\">\n                    <div class=\"flex align-items-center country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" class=\"mr-2\" width=\"18\" />\n                        <div>{{slotProps.option.label}}</div>\n                    </div>\n                </template>\n            </p-multiselect >\n\n            <h5>Advanced with Templating and Filtering</h5>\n            <p-multiselect  v-model=\"selectedCountries\" :options=\"countries\" option-label=\"name\" placeholder=\"Select Countries\" :filter=\"true\" class=\"multiselect-custom\">\n                <template #value=\"slotProps\">\n                    <div class=\"country-item country-item-value\" v-for=\"option of slotProps.value\" :key=\"option.code\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" class=\"mr-2\" width=\"18\" />\n                        <div>{{option.name}}</div>\n                    </div>\n                    <template v-if=\"!slotProps.value || slotProps.value.length === 0\">\n                        Select Countries\n                    </template>\n                </template>\n                <template #option=\"slotProps\">\n                    <div class=\"country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" class=\"mr-2\" width=\"18\" />\n                        <div>{{slotProps.option.name}}</div>\n                    </div>\n                </template>\n            </p-multiselect >\n\n            <h5>Loading State</h5>\n            <p-multiselect  placeholder=\"Loading...\" loading></p-multiselect >\n\n            <h5>Virtual Scroll (1000 Items)</h5>\n            <p-multiselect  v-model=\"selectedItems\" :options=\"items\" :max-selected-labels=\"3\" :select-all=\"selectAll\" @selectall-change=\"onSelectAllChange($event)\" @change=\"onChange($event)\" option-label=\"label\" option-value=\"value\" :virtual-scroller-options=\"{ itemSize: 44 }\" placeholder=\"Select Item\"></p-multiselect>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref } = Vue;\n\n        const App = {\n            setup() {\n                const selectedCities1 = ref();\n                const selectedCities2 = ref();\n                const selectedCountries = ref();\n                const selectedGroupedCities = ref();\n                const selectedItems = ref();\n                const selectAll = ref(false);\n                const cities = ref([\n                    {name: 'New York', code: 'NY'},\n                    {name: 'Rome', code: 'RM'},\n                    {name: 'London', code: 'LDN'},\n                    {name: 'Istanbul', code: 'IST'},\n                    {name: 'Paris', code: 'PRS'}\n                ]);\n                const countries = ref([\n                    {name: 'Australia', code: 'AU'},\n                    {name: 'Brazil', code: 'BR'},\n                    {name: 'China', code: 'CN'},\n                    {name: 'Egypt', code: 'EG'},\n                    {name: 'France', code: 'FR'},\n                    {name: 'Germany', code: 'DE'},\n                    {name: 'India', code: 'IN'},\n                    {name: 'Japan', code: 'JP'},\n                    {name: 'Spain', code: 'ES'},\n                    {name: 'United States', code: 'US'}\n                ]);\n                const groupedCities = ref([\n                    {\n                        label: 'Germany', code: 'DE',\n                        items: [\n                            {label: 'Berlin', value: 'Berlin'},\n                            {label: 'Frankfurt', value: 'Frankfurt'},\n                            {label: 'Hamburg', value: 'Hamburg'},\n                            {label: 'Munich', value: 'Munich'}\n                        ]\n                    },\n                    {\n                        label: 'USA', code: 'US',\n                        items: [\n                            {label: 'Chicago', value: 'Chicago'},\n                            {label: 'Los Angeles', value: 'Los Angeles'},\n                            {label: 'New York', value: 'New York'},\n                            {label: 'San Francisco', value: 'San Francisco'}\n                        ]\n                    },\n                    {\n                        label: 'Japan', code: 'JP',\n                        items: [\n                            {label: 'Kyoto', value: 'Kyoto'},\n                            {label: 'Osaka', value: 'Osaka'},\n                            {label: 'Tokyo', value: 'Tokyo'},\n                            {label: 'Yokohama', value: 'Yokohama'}\n                        ]\n                    }\n                ]);\n                const items = Array.from({ length: 1000 }, (_, i) => ({ label: `Item #${i}`, value: i }))\n\n                return { selectedCities1, selectedCities2, selectedCountries, selectedGroupedCities, cities, countries, groupedCities, items, selectedItems, selectAll }\n            },\n            methods: {\n                onSelectAllChange(event) {\n                    this.selectedItems = event.checked ? this.items.map((item) => item.value) : [];\n                    this.selectAll = event.checked;\n                },\n                onChange(event) {\n                    this.selectAll = event.value.length === this.items.length\n                }\n            },\n            components: {\n                \"p-multiselect\": primevue.multiselect\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\/script>\n\n        <style>\n        .p-multiselect {\n            width: 18rem;\n        }\n\n        .multiselect-custom .p-multiselect-label:not(.p-placeholder) {\n            padding-top: .25rem;\n            padding-bottom: .25rem;\n        }\n\n        .multiselect-custom .country-item-value {\n            padding: .25rem .5rem;\n            border-radius: 3px;\n            display: inline-flex;\n            margin-right: .5rem;\n            background-color: var(--primary-color);\n            color: var(--primary-color-text);\n        }\n\n        .multiselect-custom .country-item-value img.flag {\n            width: 17px;\n        }\n\n        @media screen and (max-width: 640px) {\n            .p-multiselect {\n                width: 100%;\n            }\n        }\n        </style>"}}}}},tt=l("6b0d"),lt=l.n(tt);const nt=lt()(et,[["render",Xe]]);var ot=nt,ct={data:function(){return{selectedCities1:null,selectedCities2:null,selectedCountries:null,selectedGroupedCities:null,selectedItems:null,selectAll:!1,cities:[{name:"New York",code:"NY"},{name:"Rome",code:"RM"},{name:"London",code:"LDN"},{name:"Istanbul",code:"IST"},{name:"Paris",code:"PRS"}],countries:[{name:"Australia",code:"AU"},{name:"Brazil",code:"BR"},{name:"China",code:"CN"},{name:"Egypt",code:"EG"},{name:"France",code:"FR"},{name:"Germany",code:"DE"},{name:"India",code:"IN"},{name:"Japan",code:"JP"},{name:"Spain",code:"ES"},{name:"United States",code:"US"}],groupedCities:[{label:"Germany",code:"DE",items:[{label:"Berlin",value:"Berlin"},{label:"Frankfurt",value:"Frankfurt"},{label:"Hamburg",value:"Hamburg"},{label:"Munich",value:"Munich"}]},{label:"USA",code:"US",items:[{label:"Chicago",value:"Chicago"},{label:"Los Angeles",value:"Los Angeles"},{label:"New York",value:"New York"},{label:"San Francisco",value:"San Francisco"}]},{label:"Japan",code:"JP",items:[{label:"Kyoto",value:"Kyoto"},{label:"Osaka",value:"Osaka"},{label:"Tokyo",value:"Tokyo"},{label:"Yokohama",value:"Yokohama"}]}],items:Array.from({length:1e3},(function(e,t){return{label:"Item #".concat(t),value:t}}))}},methods:{onSelectAllChange:function(e){this.selectedItems=e.checked?this.items.map((function(e){return e.value})):[],this.selectAll=e.checked},onChange:function(e){this.selectAll=e.value.length===this.items.length}},components:{MultiSelectDoc:ot}};l("49f9");const at=lt()(ct,[["render",g],["__scopeId","data-v-36ceac99"]]);t["default"]=at},a6e7:function(e,t,l){var n=l("24fb");t=n(!1),t.push([e.i,".p-multiselect[data-v-36ceac99]{width:18rem}[data-v-36ceac99] .multiselect-custom .p-multiselect-label:not(.p-placeholder){padding-top:.25rem;padding-bottom:.25rem}[data-v-36ceac99] .multiselect-custom .country-item-value{padding:.25rem .5rem;border-radius:3px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;margin-right:.5rem;background-color:var(--primary-color);color:var(--primary-color-text)}[data-v-36ceac99] .multiselect-custom .country-item-value img.flag{width:17px}@media screen and (max-width:640px){.p-multiselect[data-v-36ceac99]{width:100%}}",""]),e.exports=t},e7a7:function(e,t,l){var n=l("a6e7");n.__esModule&&(n=n.default),"string"===typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);var o=l("499e").default;o("566f3f92",n,!0,{sourceMap:!1,shadowMode:!1})}}]);