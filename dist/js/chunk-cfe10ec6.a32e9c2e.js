(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-cfe10ec6"],{"18af":function(e,t,n){"use strict";n("b5e1")},"6b86":function(e,t,n){"use strict";n.r(t);n("b0c0");var l=n("7a23"),o=n("2d77"),a=n.n(o),c=function(e){return Object(l["K"])("data-v-63aa7c7c"),e=e(),Object(l["I"])(),e},i={class:"content-section introduction"},r=c((function(){return Object(l["k"])("div",{class:"feature-intro"},[Object(l["k"])("h1",null,"Dropdown"),Object(l["k"])("p",null,"Dropdown is used to select an item from a list of options.")],-1)})),d={class:"content-section implementation"},s={class:"card"},u=c((function(){return Object(l["k"])("h5",null,"Basic",-1)})),b=c((function(){return Object(l["k"])("h5",null,"Editable",-1)})),p=c((function(){return Object(l["k"])("h5",null,"Grouped",-1)})),m={class:"flex align-items-center country-item"},O=c((function(){return Object(l["k"])("h5",null,"Advanced with Templating, Filtering and Clear Icon",-1)})),j={key:0,class:"country-item country-item-value"},k={key:1},h={class:"country-item"},v=c((function(){return Object(l["k"])("h5",null,"Loading State",-1)})),f=c((function(){return Object(l["k"])("h5",null,"Virtual Scroll (100000 Items)",-1)})),y=c((function(){return Object(l["k"])("h5",null,"Virtual Scroll (100000 Items) and Lazy",-1)})),g={class:"flex align-items-center p-2",style:{height:"38px"}};function w(e,t,n,o,c,w){var C=Object(l["P"])("AppDemoActions"),L=Object(l["P"])("Dropdown"),I=Object(l["P"])("Skeleton"),S=Object(l["P"])("DropdownDoc");return Object(l["H"])(),Object(l["j"])("div",null,[Object(l["k"])("div",i,[r,Object(l["o"])(C)]),Object(l["k"])("div",d,[Object(l["k"])("div",s,[u,Object(l["o"])(L,{modelValue:c.selectedCity1,"onUpdate:modelValue":t[0]||(t[0]=function(e){return c.selectedCity1=e}),options:c.cities,optionLabel:"name",optionValue:"code",placeholder:"Select a City"},null,8,["modelValue","options"]),b,Object(l["o"])(L,{modelValue:c.selectedCity2,"onUpdate:modelValue":t[1]||(t[1]=function(e){return c.selectedCity2=e}),options:c.cities,optionLabel:"name",editable:!0},null,8,["modelValue","options"]),p,Object(l["o"])(L,{modelValue:c.selectedGroupedCity,"onUpdate:modelValue":t[2]||(t[2]=function(e){return c.selectedGroupedCity=e}),options:c.groupedCities,optionLabel:"label",optionGroupLabel:"label",optionGroupChildren:"items"},{optiongroup:Object(l["Z"])((function(e){return[Object(l["k"])("div",m,[Object(l["k"])("img",{src:a.a,class:Object(l["A"])("flag flag-"+e.option.code.toLowerCase()),width:"18"},null,2),Object(l["k"])("div",null,Object(l["T"])(e.option.label),1)])]})),_:1},8,["modelValue","options"]),O,Object(l["o"])(L,{modelValue:c.selectedCountry,"onUpdate:modelValue":t[3]||(t[3]=function(e){return c.selectedCountry=e}),options:c.countries,optionLabel:"name",filter:!0,placeholder:"Select a Country",showClear:!0},{value:Object(l["Z"])((function(e){return[e.value?(Object(l["H"])(),Object(l["j"])("div",j,[Object(l["k"])("img",{src:a.a,class:Object(l["A"])("flag flag-"+e.value.code.toLowerCase())},null,2),Object(l["k"])("div",null,Object(l["T"])(e.value.name),1)])):(Object(l["H"])(),Object(l["j"])("span",k,Object(l["T"])(e.placeholder),1))]})),option:Object(l["Z"])((function(e){return[Object(l["k"])("div",h,[Object(l["k"])("img",{src:a.a,class:Object(l["A"])("flag flag-"+e.option.code.toLowerCase())},null,2),Object(l["k"])("div",null,Object(l["T"])(e.option.name),1)])]})),_:1},8,["modelValue","options"]),v,Object(l["o"])(L,{placeholder:"Loading...",loading:""}),f,Object(l["o"])(L,{modelValue:c.selectedItem1,"onUpdate:modelValue":t[4]||(t[4]=function(e){return c.selectedItem1=e}),options:c.items,optionLabel:"label",optionValue:"value",virtualScrollerOptions:{itemSize:38},placeholder:"Select Item"},null,8,["modelValue","options"]),y,Object(l["o"])(L,{modelValue:c.selectedItem2,"onUpdate:modelValue":t[5]||(t[5]=function(e){return c.selectedItem2=e}),options:c.lazyItems,optionLabel:"label",optionValue:"value",virtualScrollerOptions:{lazy:!0,onLazyLoad:w.onLazyLoad,itemSize:38,showLoader:!0,loading:c.loading,delay:250},placeholder:"Select Item"},{loader:Object(l["Z"])((function(e){var t=e.options;return[Object(l["k"])("div",g,[Object(l["o"])(I,{width:t.even?"60%":"50%",height:"1rem"},null,8,["width"])])]})),_:1},8,["modelValue","options","virtualScrollerOptions"])])]),Object(l["o"])(S)])}var C=n("2909"),L=(n("a630"),n("3ca3"),Object(l["k"])("h5",null,"Import via Module",-1)),I=Object(l["k"])("code",null,"\nimport Dropdown from 'primevue/dropdown';\n\n",-1),S=[I],z=Object(l["k"])("h5",null,"Import via CDN",-1),P=Object(l["k"])("code",null,'\n<script src="https://unpkg.com/primevue@^3/core/core.min.js"><\/script>\n\n',-1),D=[P],T=Object(l["k"])("h5",null,"Getting Started",-1),A=Object(l["k"])("p",null,[Object(l["n"])("Dropdown requires a value to bind and a collection of arbitrary objects along with the "),Object(l["k"])("i",null,"optionLabel"),Object(l["n"])(" property to specify the label property of the option.")],-1),V=Object(l["k"])("code",null,'\n<Dropdown v-model="selectedCity" :options="cities" optionLabel="name" placeholder="Select a City" />\n\n',-1),F=[V],G=Object(l["k"])("code",null,"\ndata() {\n\treturn {\n\t\tselectedCity: null,\n\t\tcities: [\n\t\t\t{name: 'New York', code: 'NY'},\n\t\t\t{name: 'Rome', code: 'RM'},\n\t\t\t{name: 'London', code: 'LDN'},\n\t\t\t{name: 'Istanbul', code: 'IST'},\n\t\t\t{name: 'Paris', code: 'PRS'}\n\t\t]\n\t}\n}\n\n",-1),N=[G],x=Object(l["k"])("h5",null,"Placeholder",-1),E=Object(l["k"])("p",null,"Common pattern is providing an empty option as the placeholder when using native selects, however Dropdown has built-in support using the placeholder option so it is suggested to use it instead of creating an empty option.",-1),M=Object(l["k"])("h5",null,"Grouping",-1),Y=Object(l["k"])("p",null,[Object(l["n"])("Options groups are specified with the "),Object(l["k"])("i",null,"optionGroupLabel"),Object(l["n"])(" and "),Object(l["k"])("i",null,"optionGroupChildren"),Object(l["n"])(" properties.")],-1),U=Object(l["k"])("code",null,"\nexport default {\n    data() {\n        return {\n            selectedGroupedCity: null,\n            groupedCities: [{\n                label: 'Germany', code: 'DE',\n                items: [\n                    {label: 'Berlin', value: 'Berlin'},\n                    {label: 'Frankfurt', value: 'Frankfurt'},\n                    {label: 'Hamburg', value: 'Hamburg'},\n                    {label: 'Munich', value: 'Munich'}\n                ]\n            },\n            {\n                label: 'USA', code: 'US',\n                items: [\n                    {label: 'Chicago', value: 'Chicago'},\n                    {label: 'Los Angeles', value: 'Los Angeles'},\n                    {label: 'New York', value: 'New York'},\n                    {label: 'San Francisco', value: 'San Francisco'}\n                ]\n            },\n            {\n                label: 'Japan', code: 'JP',\n                items: [\n                    {label: 'Kyoto', value: 'Kyoto'},\n                    {label: 'Osaka', value: 'Osaka'},\n                    {label: 'Tokyo', value: 'Tokyo'},\n                    {label: 'Yokohama', value: 'Yokohama'}\n                ]\n            }]\n        }\n    }\n}\n",-1),H=[U],B=Object(l["k"])("code",null,[Object(l["k"])("template",null,[Object(l["n"])('\n<Dropdown v-model="selectedGroupedCity" :options="groupedCities"\n        optionLabel="label" optionGroupLabel="label" optionGroupChildren="items">\n</Dropdown>\n')]),Object(l["n"])("\n")],-1),R=[B],J=Object(l["k"])("h5",null,"Filtering",-1),_=Object(l["k"])("p",null,[Object(l["n"])("Filtering allows searching items in the list using an input field at the header. In order to use filtering, enable "),Object(l["k"])("i",null,"filter"),Object(l["n"])(" property. By default, optionLabel is used when searching and "),Object(l["k"])("i",null,"filterFields"),Object(l["n"])(" can be used to customize the fields being utilized. Furthermore, "),Object(l["k"])("i",null,"filterMatchMode"),Object(l["n"])(' is available to define the search algorithm. Valid values are "contains" (default), "startsWith" and "endsWith".')],-1),K=Object(l["k"])("code",null,'\n<Dropdown v-model="selectedCar" :options="cars" optionLabel="brand" placeholder="Select a Car" :filter="true" filterPlaceholder="Find Car"/>\n\n',-1),W=[K],Z=Object(l["k"])("h5",null,"Templating",-1),$=Object(l["k"])("p",null,[Object(l["n"])("Label of an option is used as the display text of an item by default, for custom content support define an "),Object(l["k"])("i",null,"option"),Object(l["n"])(" template that gets the option instance as a parameter. In addition "),Object(l["k"])("i",null,"value"),Object(l["n"])(", "),Object(l["k"])("i",null,"optiongroup"),Object(l["n"])(", "),Object(l["k"])("i",null,"header"),Object(l["n"])(", "),Object(l["k"])("i",null,"footer"),Object(l["n"])(", "),Object(l["k"])("i",null,"emptyfilter"),Object(l["n"])(" and "),Object(l["k"])("i",null,"empty"),Object(l["n"])(" slots are provided for further customization.")],-1),q=Object(l["k"])("code",null,[Object(l["k"])("template",null,[Object(l["n"])('\n<Dropdown v-model="selectedCar" :options="cars" optionLabel="brand" :filter="true" placeholder="Select a Car" :showClear="true">\n    <template #value="slotProps">\n        <div class="p-dropdown-car-value" v-if="slotProps.value">\n            <img :alt="slotProps.value.brand" :src="\'demo/images/car/\' + slotProps.value.brand + \'.png\'" />\n            <span>{{slotProps.value.brand}}</span>\n        </div>\n        <span v-else>\n            {{slotProps.placeholder}}\n        </span>\n    </template>\n    <template #option="slotProps">\n\t\t<div class="p-dropdown-car-option">\n\t\t\t<img :alt="slotProps.option.brand" :src="\'demo/images/car/\' + slotProps.option.brand + \'.png\'" />\n\t\t\t<span>{{slotProps.option.brand}}</span>\n\t\t</div>\n\t</template>\n</Dropdown>\n')]),Object(l["n"])("\n")],-1),Q=[q],X=Object(l["k"])("h5",null,"Properties",-1),ee=Object(l["k"])("p",null,"Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.",-1),te={class:"doc-tablewrapper"},ne={class:"doc-table"},le=Object(l["k"])("thead",null,[Object(l["k"])("tr",null,[Object(l["k"])("th",null,"Name"),Object(l["k"])("th",null,"Type"),Object(l["k"])("th",null,"Default"),Object(l["k"])("th",null,"Description")])],-1),oe=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"modelValue"),Object(l["k"])("td",null,"any"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Value of the component.")],-1),ae=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"options"),Object(l["k"])("td",null,"array"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"An array of selectitems to display as the available options.")],-1),ce=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"optionLabel"),Object(l["k"])("td",null,"string | function"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Property name or getter function to use as the label of an option.")],-1),ie=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"optionValue"),Object(l["k"])("td",null,"string | function"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Property name or getter function to use as the value of an option, defaults to the option itself when not defined.")],-1),re=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"optionDisabled"),Object(l["k"])("td",null,"string | function"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Property name or getter function to use as the disabled flag of an option, defaults to false when not defined.")],-1),de=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"optionGroupLabel"),Object(l["k"])("td",null,"string | function"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Property name or getter function to use as the label of an option group.")],-1),se=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"optionGroupChildren"),Object(l["k"])("td",null,"string | function"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Property name or getter function that refers to the children options of option group.")],-1),ue=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"scrollHeight"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"200px"),Object(l["k"])("td",null,"Height of the viewport, a scrollbar is defined if height of list exceeds this value.")],-1),be=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"filter"),Object(l["k"])("td",null,"boolean"),Object(l["k"])("td",null,"false"),Object(l["k"])("td",null,"When specified, displays a filter input at header.")],-1),pe=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"filterPlaceholder"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Placeholder text to show when filter input is empty.")],-1),me=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"filterLocale"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"undefined"),Object(l["k"])("td",null,"Locale to use in filtering. The default locale is the host environment's current locale.")],-1),Oe=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"filterMatchMode"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"contains"),Object(l["k"])("td",null,'Defines the filtering algorithm to use when searching the options. Valid values are "contains" (default), "startsWith" and "endsWith"')],-1),je=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"filterFields"),Object(l["k"])("td",null,"array"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Fields used when filtering the options, defaults to optionLabel.")],-1),ke=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"editable"),Object(l["k"])("td",null,"boolean"),Object(l["k"])("td",null,"false"),Object(l["k"])("td",null,"When present, custom value instead of predefined options can be entered using the editable input field.")],-1),he=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"placeholder"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Default text to display when no option is selected.")],-1),ve=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"disabled"),Object(l["k"])("td",null,"boolean"),Object(l["k"])("td",null,"false"),Object(l["k"])("td",null,"When present, it specifies that the component should be disabled.")],-1),fe=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"dataKey"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"A property to uniquely identify an option.")],-1),ye=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"showClear"),Object(l["k"])("td",null,"boolean"),Object(l["k"])("td",null,"false"),Object(l["k"])("td",null,"When enabled, a clear icon is displayed to clear the value.")],-1),ge=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"tabindex"),Object(l["k"])("td",null,"number"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Index of the element in tabbing order.")],-1),we=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"inputId"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Identifier of the underlying input element.")],-1),Ce=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"ariaLabelledBy"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Establishes relationships between the component and label(s) where its value should be one or more element IDs.")],-1),Le=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"appendTo"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"body"),Object(l["k"])("td",null,'A valid query selector or an HTMLElement to specify where the overlay gets attached. Special keywords are "body" for document body and "self" for the element itself.')],-1),Ie=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"emptyFilterMessage"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"No results found"),Object(l["k"])("td",null,"Text to display when filtering does not return any results. Defaults to value from PrimeVue locale configuration.")],-1),Se=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"emptyMessage"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"No results found"),Object(l["k"])("td",null,"Text to display when there are no options available. Defaults to value from PrimeVue locale configuration.")],-1),ze=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"panelClass"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Style class of the overlay panel.")],-1),Pe=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"loading"),Object(l["k"])("td",null,"boolean"),Object(l["k"])("td",null,"false"),Object(l["k"])("td",null,"Whether the dropdown is in loading state.")],-1),De=Object(l["k"])("tr",null,[Object(l["k"])("td",null,"loadingIcon"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"pi pi-spinner pi-spin"),Object(l["k"])("td",null,"Icon to display in loading state.")],-1),Te=Object(l["k"])("td",null,"virtualScrollerOptions",-1),Ae=Object(l["k"])("td",null,"object",-1),Ve=Object(l["k"])("td",null,"null",-1),Fe=Object(l["n"])("Whether to use the virtualScroller feature. The properties of "),Ge=Object(l["n"])("VirtualScroller"),Ne=Object(l["n"])(" component can be used like an object in it."),xe=Object(l["k"])("h5",null,"Events",-1),Ee=Object(l["k"])("div",{class:"doc-tablewrapper"},[Object(l["k"])("table",{class:"doc-table"},[Object(l["k"])("thead",null,[Object(l["k"])("tr",null,[Object(l["k"])("th",null,"Name"),Object(l["k"])("th",null,"Parameters"),Object(l["k"])("th",null,"Description")])]),Object(l["k"])("tbody",null,[Object(l["k"])("tr",null,[Object(l["k"])("td",null,"change"),Object(l["k"])("td",null,[Object(l["n"])("event.originalEvent: Original event "),Object(l["k"])("br"),Object(l["n"])(" event.value: Selected option value ")]),Object(l["k"])("td",null,"Callback to invoke on value change.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"input"),Object(l["k"])("td",null,"event"),Object(l["k"])("td",null,"Callback to invoke on value change.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"before-show"),Object(l["k"])("td",null,"-"),Object(l["k"])("td",null,"Callback to invoke before the overlay is shown.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"before-hide"),Object(l["k"])("td",null,"-"),Object(l["k"])("td",null,"Callback to invoke before the overlay is hidden.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"show"),Object(l["k"])("td",null,"-"),Object(l["k"])("td",null,"Callback to invoke when the overlay is shown.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"hide"),Object(l["k"])("td",null,"-"),Object(l["k"])("td",null,"Callback to invoke when the overlay is hidden.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"focus"),Object(l["k"])("td",null,"event"),Object(l["k"])("td",null,"Callback to invoke when the component receives focus.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"blur"),Object(l["k"])("td",null,"event"),Object(l["k"])("td",null,"Callback to invoke when the component loses focus.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"filter"),Object(l["k"])("td",null,[Object(l["n"])("event.originalEvent: Original event "),Object(l["k"])("br"),Object(l["n"])(" event.value: Filter value ")]),Object(l["k"])("td",null,"Callback to invoke on filter input.")])])])],-1),Me=Object(l["k"])("h5",null,"Methods",-1),Ye=Object(l["k"])("div",{class:"doc-tablewrapper"},[Object(l["k"])("table",{class:"doc-table"},[Object(l["k"])("thead",null,[Object(l["k"])("tr",null,[Object(l["k"])("th",null,"Name"),Object(l["k"])("th",null,"Parameters"),Object(l["k"])("th",null,"Description")])]),Object(l["k"])("tbody",null,[Object(l["k"])("tr",null,[Object(l["k"])("td",null,"show"),Object(l["k"])("td",null,"isFocus: Decides whether to focus on the component. Default value is false."),Object(l["k"])("td",null,"Shows the overlay.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"hide"),Object(l["k"])("td",null,"-"),Object(l["k"])("td",null,"Hides the overlay.")])])])],-1),Ue=Object(l["k"])("h5",null,"Slots",-1),He=Object(l["k"])("div",{class:"doc-tablewrapper"},[Object(l["k"])("table",{class:"doc-table"},[Object(l["k"])("thead",null,[Object(l["k"])("tr",null,[Object(l["k"])("th",null,"Name"),Object(l["k"])("th",null,"Parameters")])]),Object(l["k"])("tbody",null,[Object(l["k"])("tr",null,[Object(l["k"])("td",null,"option"),Object(l["k"])("td",null,[Object(l["n"])("option: Option instance "),Object(l["k"])("br"),Object(l["n"])(" index: Index of the option")])]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"optiongroup"),Object(l["k"])("td",null,[Object(l["n"])("option: OptionGroup instance "),Object(l["k"])("br"),Object(l["n"])(" index: Index of the option group")])]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"value"),Object(l["k"])("td",null,[Object(l["n"])("value: Value of the component "),Object(l["k"])("br"),Object(l["n"])(" placeholder: Placeholder prop value")])]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"header"),Object(l["k"])("td",null,[Object(l["n"])("value: Value of the component "),Object(l["k"])("br"),Object(l["n"])(" options: Displayed options")])]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"footer"),Object(l["k"])("td",null,[Object(l["n"])("value: Value of the component "),Object(l["k"])("br"),Object(l["n"])(" options: Displayed options")])]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"emptyfilter"),Object(l["k"])("td",null,"-")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"empty"),Object(l["k"])("td",null,"-")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"content"),Object(l["k"])("td",null,[Object(l["n"])("items: An array of objects to display for virtualscroller"),Object(l["k"])("br"),Object(l["n"])(" styleClass: Style class of the component"),Object(l["k"])("br"),Object(l["n"])(" contentRef: Referance of the content"),Object(l["k"])("br"),Object(l["n"])(" getItemOptions: Options of the items")])]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"loader"),Object(l["k"])("td",null,"options: Options of the loader items for virtualscroller")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"indicator"),Object(l["k"])("td",null,"-")])])])],-1),Be=Object(l["k"])("h5",null,"Styling",-1),Re=Object(l["n"])("Following is the list of structural style classes, for theming classes visit "),Je=Object(l["n"])("theming"),_e=Object(l["n"])(" page."),Ke=Object(l["k"])("div",{class:"doc-tablewrapper"},[Object(l["k"])("table",{class:"doc-table"},[Object(l["k"])("thead",null,[Object(l["k"])("tr",null,[Object(l["k"])("th",null,"Name"),Object(l["k"])("th",null,"Element")])]),Object(l["k"])("tbody",null,[Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-dropdown"),Object(l["k"])("td",null,"Container element.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-dropdown-label"),Object(l["k"])("td",null,"Element to display label of selected option.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-dropdown-trigger"),Object(l["k"])("td",null,"Icon element.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-dropdown-panel"),Object(l["k"])("td",null,"Icon element.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-dropdown-items-wrapper"),Object(l["k"])("td",null,"Wrapper element of items list.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-dropdown-items"),Object(l["k"])("td",null,"List element of items.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-dropdown-item"),Object(l["k"])("td",null,"An item in the list.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-dropdown-filter-container"),Object(l["k"])("td",null,"Container of filter input.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-dropdown-filter"),Object(l["k"])("td",null,"Filter element.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-dropdown-open"),Object(l["k"])("td",null,"Container element when overlay is visible.")])])])],-1),We=Object(l["k"])("h5",null,"Dependencies",-1),Ze=Object(l["k"])("p",null,"None.",-1);function $e(e,t,n,o,a,c){var i=Object(l["P"])("router-link"),r=Object(l["P"])("AppDoc"),d=Object(l["Q"])("code");return Object(l["H"])(),Object(l["h"])(r,{name:"DropdownDemo",sources:a.sources,github:"dropdown/DropdownDemo.vue"},{default:Object(l["Z"])((function(){return[L,Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,S)),[[d,void 0,void 0,{script:!0}]]),z,Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,D)),[[d]]),T,A,Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,F)),[[d]]),Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,N)),[[d,void 0,void 0,{script:!0}]]),x,E,M,Y,Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,H)),[[d,void 0,void 0,{script:!0}]]),Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,R)),[[d]]),J,_,Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,W)),[[d]]),Z,$,Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,Q)),[[d]]),X,ee,Object(l["k"])("div",te,[Object(l["k"])("table",ne,[le,Object(l["k"])("tbody",null,[oe,ae,ce,ie,re,de,se,ue,be,pe,me,Oe,je,ke,he,ve,fe,ye,ge,we,Ce,Le,Ie,Se,ze,Pe,De,Object(l["k"])("tr",null,[Te,Ae,Ve,Object(l["k"])("td",null,[Fe,Object(l["o"])(i,{to:"/virtualscroller"},{default:Object(l["Z"])((function(){return[Ge]})),_:1}),Ne])])])])]),xe,Ee,Me,Ye,Ue,He,Be,Object(l["k"])("p",null,[Re,Object(l["o"])(i,{to:"/theming"},{default:Object(l["Z"])((function(){return[Je]})),_:1}),_e]),Ke,We,Ze]})),_:1},8,["sources"])}var qe={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:"\n<template>\n    <div>\n        <h5>Basic</h5>\n        <Dropdown v-model=\"selectedCity1\" :options=\"cities\" optionLabel=\"name\" optionValue=\"code\" placeholder=\"Select a City\" />\n\n        <h5>Editable</h5>\n        <Dropdown v-model=\"selectedCity2\" :options=\"cities\" optionLabel=\"name\" :editable=\"true\"/>\n\n        <h5>Grouped</h5>\n        <Dropdown v-model=\"selectedGroupedCity\" :options=\"groupedCities\" optionLabel=\"label\" optionGroupLabel=\"label\" optionGroupChildren=\"items\">\n            <template #optiongroup=\"slotProps\">\n                <div class=\"flex align-items-center country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" />\n                    <div>{{slotProps.option.label}}</div>\n                </div>\n            </template>\n        </Dropdown>\n\n        <h5>Advanced with Templating, Filtering and Clear Icon</h5>\n        <Dropdown v-model=\"selectedCountry\" :options=\"countries\" optionLabel=\"name\" :filter=\"true\" placeholder=\"Select a Country\" :showClear=\"true\">\n            <template #value=\"slotProps\">\n                <div class=\"country-item country-item-value\" v-if=\"slotProps.value\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" />\n                    <div>{{slotProps.value.name}}</div>\n                </div>\n                <span v-else>\n                    {{slotProps.placeholder}}\n                </span>\n            </template>\n            <template #option=\"slotProps\">\n                <div class=\"country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" />\n                    <div>{{slotProps.option.name}}</div>\n                </div>\n            </template>\n        </Dropdown>\n\n        <h5>Loading State</h5>\n        <Dropdown placeholder=\"Loading...\" loading></Dropdown>\n\n        <h5>Virtual Scroll (1000 Items)</h5>\n        <Dropdown v-model=\"selectedItem1\" :options=\"items\" optionLabel=\"label\" optionValue=\"value\" :virtualScrollerOptions=\"{ itemSize: 38 }\" placeholder=\"Select Item\"></Dropdown>\n\n        <h5>Virtual Scroll (1000 Items) and Lazy</h5>\n        <Dropdown v-model=\"selectedItem2\" :options=\"lazyItems\" optionLabel=\"label\" optionValue=\"value\" :virtualScrollerOptions=\"{ lazy: true, onLazyLoad: onLazyLoad, itemSize: 38, showLoader: true, loading: loading, delay: 250 }\" placeholder=\"Select Item\">\n            <template v-slot:loader=\"{ options }\">\n                <div class=\"flex align-items-center p-2\" style=\"height: 38px\" >\n                    <Skeleton :width=\"options.even ? '60%' : '50%'\" height=\"1rem\" />\n                </div>\n            </template>\n        </Dropdown>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            selectedCity1: null,\n            selectedCity2: null,\n            selectedCountry: null,\n            selectedGroupedCity: null,\n            selectedItem1: null,\n            selectedItem2: null,\n            loading: false,\n            cities: [\n                {name: 'New York', code: 'NY'},\n                {name: 'Rome', code: 'RM'},\n                {name: 'London', code: 'LDN'},\n                {name: 'Istanbul', code: 'IST'},\n                {name: 'Paris', code: 'PRS'}\n            ],\n            countries: [\n                {name: 'Australia', code: 'AU'},\n                {name: 'Brazil', code: 'BR'},\n                {name: 'China', code: 'CN'},\n                {name: 'Egypt', code: 'EG'},\n                {name: 'France', code: 'FR'},\n                {name: 'Germany', code: 'DE'},\n                {name: 'India', code: 'IN'},\n                {name: 'Japan', code: 'JP'},\n                {name: 'Spain', code: 'ES'},\n                {name: 'United States', code: 'US'}\n            ],\n            groupedCities: [{\n                label: 'Germany', code: 'DE',\n                items: [\n                    {label: 'Berlin', value: 'Berlin'},\n                    {label: 'Frankfurt', value: 'Frankfurt'},\n                    {label: 'Hamburg', value: 'Hamburg'},\n                    {label: 'Munich', value: 'Munich'}\n                ]\n            },\n            {\n                label: 'USA', code: 'US',\n                items: [\n                    {label: 'Chicago', value: 'Chicago'},\n                    {label: 'Los Angeles', value: 'Los Angeles'},\n                    {label: 'New York', value: 'New York'},\n                    {label: 'San Francisco', value: 'San Francisco'}\n                ]\n            },\n            {\n                label: 'Japan', code: 'JP',\n                items: [\n                    {label: 'Kyoto', value: 'Kyoto'},\n                    {label: 'Osaka', value: 'Osaka'},\n                    {label: 'Tokyo', value: 'Tokyo'},\n                    {label: 'Yokohama', value: 'Yokohama'}\n                ]\n            }],\n            items: Array.from({ length: 100000 }, (_, i) => ({ label: `Item #${i}`, value: i })),\n            lazyItems: Array.from({ length: 100000 })\n        }\n    },\n    loadLazyTimeout: null,\n    methods: {\n        onLazyLoad(event) {\n            this.loading = true;\n\n            if (this.loadLazyTimeout) {\n                clearTimeout(this.loadLazyTimeout);\n            }\n\n            //imitate delay of a backend call\n            this.loadLazyTimeout = setTimeout(() => {\n                const { first, last } = event;\n                const lazyItems = [...this.lazyItems];\n\n                for (let i = first; i < last; i++) {\n                    lazyItems[i] = { label: `Item #${i}`, value: i };\n                }\n\n                this.lazyItems = lazyItems;\n                this.loading = false;\n            }, Math.random() * 1000 + 250);\n        }\n    },\n}\n<\\/script>\n\n<style lang=\"scss\" scoped>\n.p-dropdown {\n    width: 14rem;\n}\n\n.country-item {\n    img {\n        width: 17px;\n        margin-right: 0.5rem;\n    }\n}\n</style>"},"composition-api":{tabName:"Composition API Source",content:"\n<template>\n    <div>\n        <h5>Basic</h5>\n        <Dropdown v-model=\"selectedCity1\" :options=\"cities\" optionLabel=\"name\" optionValue=\"code\" placeholder=\"Select a City\" />\n\n        <h5>Editable</h5>\n        <Dropdown v-model=\"selectedCity2\" :options=\"cities\" optionLabel=\"name\" :editable=\"true\"/>\n\n        <h5>Grouped</h5>\n        <Dropdown v-model=\"selectedGroupedCity\" :options=\"groupedCities\" optionLabel=\"label\" optionGroupLabel=\"label\" optionGroupChildren=\"items\">\n            <template #optiongroup=\"slotProps\">\n                <div class=\"flex align-items-center country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" />\n                    <div>{{slotProps.option.label}}</div>\n                </div>\n            </template>\n        </Dropdown>\n\n        <h5>Advanced with Templating, Filtering and Clear Icon</h5>\n        <Dropdown v-model=\"selectedCountry\" :options=\"countries\" optionLabel=\"name\" :filter=\"true\" placeholder=\"Select a Country\" :showClear=\"true\">\n            <template #value=\"slotProps\">\n                <div class=\"country-item country-item-value\" v-if=\"slotProps.value\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" />\n                    <div>{{slotProps.value.name}}</div>\n                </div>\n                <span v-else>\n                    {{slotProps.placeholder}}\n                </span>\n            </template>\n            <template #option=\"slotProps\">\n                <div class=\"country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" />\n                    <div>{{slotProps.option.name}}</div>\n                </div>\n            </template>\n        </Dropdown>\n\n        <h5>Loading State</h5>\n        <Dropdown placeholder=\"Loading...\" loading></Dropdown>\n\n        <h5>Virtual Scroll (1000 Items)</h5>\n        <Dropdown v-model=\"selectedItem1\" :options=\"items\" optionLabel=\"label\" optionValue=\"value\" :virtualScrollerOptions=\"{ itemSize: 38 }\" placeholder=\"Select Item\"></Dropdown>\n\n        <h5>Virtual Scroll (1000 Items) and Lazy</h5>\n        <Dropdown v-model=\"selectedItem2\" :options=\"lazyItems\" optionLabel=\"label\" optionValue=\"value\" :virtualScrollerOptions=\"{ lazy: true, onLazyLoad: onLazyLoad, itemSize: 38, showLoader: true, loading: loading, delay: 250 }\" placeholder=\"Select Item\">\n            <template v-slot:loader=\"{ options }\">\n                <div class=\"flex align-items-center p-2\" style=\"height: 38px\" >\n                    <Skeleton :width=\"options.even ? '60%' : '50%'\" height=\"1rem\" />\n                </div>\n            </template>\n        </Dropdown>\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n    setup() {\n        const selectedCity1 = ref();\n        const selectedCity2 = ref();\n        const selectedCountry = ref();\n        const selectedGroupedCity = ref();\n        const selectedItem1 = ref();\n        const selectedItem2 = ref();\n        const loading = ref(false);\n        const cities = ref([\n            {name: 'New York', code: 'NY'},\n            {name: 'Rome', code: 'RM'},\n            {name: 'London', code: 'LDN'},\n            {name: 'Istanbul', code: 'IST'},\n            {name: 'Paris', code: 'PRS'}\n        ]);\n        const countries = ref([\n            {name: 'Australia', code: 'AU'},\n            {name: 'Brazil', code: 'BR'},\n            {name: 'China', code: 'CN'},\n            {name: 'Egypt', code: 'EG'},\n            {name: 'France', code: 'FR'},\n            {name: 'Germany', code: 'DE'},\n            {name: 'India', code: 'IN'},\n            {name: 'Japan', code: 'JP'},\n            {name: 'Spain', code: 'ES'},\n            {name: 'United States', code: 'US'}\n        ]);\n        const groupedCities = ref([\n            {\n                label: 'Germany', code: 'DE',\n                items: [\n                    {label: 'Berlin', value: 'Berlin'},\n                    {label: 'Frankfurt', value: 'Frankfurt'},\n                    {label: 'Hamburg', value: 'Hamburg'},\n                    {label: 'Munich', value: 'Munich'}\n                ]\n            },\n            {\n                label: 'USA', code: 'US',\n                items: [\n                    {label: 'Chicago', value: 'Chicago'},\n                    {label: 'Los Angeles', value: 'Los Angeles'},\n                    {label: 'New York', value: 'New York'},\n                    {label: 'San Francisco', value: 'San Francisco'}\n                ]\n            },\n            {\n                label: 'Japan', code: 'JP',\n                items: [\n                    {label: 'Kyoto', value: 'Kyoto'},\n                    {label: 'Osaka', value: 'Osaka'},\n                    {label: 'Tokyo', value: 'Tokyo'},\n                    {label: 'Yokohama', value: 'Yokohama'}\n                ]\n            }\n        ]);\n\n        const items = ref(Array.from({ length: 100000 }, (_, i) => ({ label: `Item #${i}`, value: i })));\n        const lazyItems = ref(Array.from({ length: 100000 }));\n\n        return { selectedCity1, selectedCity2, selectedCountry, selectedGroupedCity, cities, countries, groupedCities, selectedItem1, selectedItem2, loading, items, lazyItems}\n    },\n    loadLazyTimeout: null,\n    methods: {\n        onLazyLoad(event) {\n            this.loading = true;\n\n            if (this.loadLazyTimeout) {\n                clearTimeout(this.loadLazyTimeout);\n            }\n\n            //imitate delay of a backend call\n            this.loadLazyTimeout = setTimeout(() => {\n                const { first, last } = event;\n                const lazyItems = [...this.lazyItems];\n\n                for (let i = first; i < last; i++) {\n                    lazyItems[i] = { label: `Item #${i}`, value: i };\n                }\n\n                this.lazyItems = lazyItems;\n                this.loading = false;\n            }, Math.random() * 1000 + 250);\n        }\n    }\n}\n<\\/script>\n\n<style lang=\"scss\" scoped>\n.p-dropdown {\n    width: 14rem;\n}\n\n.country-item {\n    img {\n        width: 17px;\n        margin-right: 0.5rem;\n    }\n}\n</style>"},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/skeleton/skeleton.min.js"><\\/script>',content:"<div id=\"app\">\n            <h5>Basic</h5>\n            <p-dropdown v-model=\"selectedCity1\" :options=\"cities\" option-label=\"name\" option-value=\"code\" placeholder=\"Select a City\"></p-dropdown>\n\n            <h5>Editable</h5>\n            <p-dropdown v-model=\"selectedCity2\" :options=\"cities\" option-label=\"name\" :editable=\"true\"></p-dropdown>\n\n            <h5>Grouped</h5>\n            <p-dropdown v-model=\"selectedGroupedCity\" :options=\"groupedCities\" option-label=\"label\" option-group-label=\"label\" option-group-children=\"items\">\n                <template #optiongroup=\"slotProps\">\n                    <div class=\"flex align-items-center country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" />\n                        <div>{{slotProps.option.label}}</div>\n                    </div>\n                </template>\n            </p-dropdown>\n\n            <h5>Advanced with Templating, Filtering and Clear Icon</h5>\n            <p-dropdown v-model=\"selectedCountry\" :options=\"countries\" option-label=\"name\" :filter=\"true\" placeholder=\"Select a Country\" :show-clear=\"true\">\n                <template #value=\"slotProps\">\n                    <div class=\"country-item country-item-value\" v-if=\"slotProps.value\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" />\n                        <div>{{slotProps.value.name}}</div>\n                    </div>\n                    <span v-else>\n                        {{slotProps.placeholder}}\n                    </span>\n                </template>\n                <template #option=\"slotProps\">\n                    <div class=\"country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" />\n                        <div>{{slotProps.option.name}}</div>\n                    </div>\n                </template>\n            </p-dropdown>\n\n            <h5>Loading State</h5>\n            <p-dropdown placeholder=\"Loading...\" loading></p-dropdown>\n\n            <h5>Virtual Scroll (1000 Items)</h5>\n            <p-dropdown v-model=\"selectedItem1\" :options=\"items\" option-label=\"label\" option-value=\"value\" :virtual-scroller-options=\"{ itemSize: 38 }\" placeholder=\"Select Item\"></p-dropdown>\n\n            <h5>Virtual Scroll (1000 Items) and Lazy</h5>\n            <p-dropdown v-model=\"selectedItem2\" :options=\"lazyItems\" option-label=\"label\" option-value=\"value\" :virtual-scroller-options=\"{ lazy: true, onLazyLoad: onLazyLoad, itemSize: 38, showLoader: true, loading: loading, delay: 250 }\" placeholder=\"Select Item\">\n                <template v-slot:loader=\"{ options }\">\n                    <div class=\"flex align-items-center p-2\" style=\"height: 38px\" >\n                        <p-skeleton :width=\"options.even ? '60%' : '50%'\" height=\"1rem\"></p-skeleton>\n                    </div>\n                </template>\n            </p-dropdown>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref } = Vue;\n\n        const App = {\n            setup() {\n                const selectedCity1 = ref();\n                const selectedCity2 = ref();\n                const selectedCountry = ref();\n                const selectedGroupedCity = ref();\n                const selectedItem1 = ref();\n                const selectedItem2 = ref();\n                const loading = ref(false);\n                const cities = ref([\n                    {name: 'New York', code: 'NY'},\n                    {name: 'Rome', code: 'RM'},\n                    {name: 'London', code: 'LDN'},\n                    {name: 'Istanbul', code: 'IST'},\n                    {name: 'Paris', code: 'PRS'}\n                ]);\n                const countries = ref([\n                    {name: 'Australia', code: 'AU'},\n                    {name: 'Brazil', code: 'BR'},\n                    {name: 'China', code: 'CN'},\n                    {name: 'Egypt', code: 'EG'},\n                    {name: 'France', code: 'FR'},\n                    {name: 'Germany', code: 'DE'},\n                    {name: 'India', code: 'IN'},\n                    {name: 'Japan', code: 'JP'},\n                    {name: 'Spain', code: 'ES'},\n                    {name: 'United States', code: 'US'}\n                ]);\n                const groupedCities = ref([\n                    {\n                        label: 'Germany', code: 'DE',\n                        items: [\n                            {label: 'Berlin', value: 'Berlin'},\n                            {label: 'Frankfurt', value: 'Frankfurt'},\n                            {label: 'Hamburg', value: 'Hamburg'},\n                            {label: 'Munich', value: 'Munich'}\n                        ]\n                    },\n                    {\n                        label: 'USA', code: 'US',\n                        items: [\n                            {label: 'Chicago', value: 'Chicago'},\n                            {label: 'Los Angeles', value: 'Los Angeles'},\n                            {label: 'New York', value: 'New York'},\n                            {label: 'San Francisco', value: 'San Francisco'}\n                        ]\n                    },\n                    {\n                        label: 'Japan', code: 'JP',\n                        items: [\n                            {label: 'Kyoto', value: 'Kyoto'},\n                            {label: 'Osaka', value: 'Osaka'},\n                            {label: 'Tokyo', value: 'Tokyo'},\n                            {label: 'Yokohama', value: 'Yokohama'}\n                        ]\n                    }\n                ]);\n\n                const items = ref(Array.from({ length: 100000 }, (_, i) => ({ label: `Item #${i}`, value: i })));\n                const lazyItems = ref(Array.from({ length: 100000 }));\n\n                return { selectedCity1, selectedCity2, selectedCountry, selectedGroupedCity, cities, countries, groupedCities, selectedItem1, selectedItem2, loading, items, lazyItems}\n            },\n            loadLazyTimeout: null,\n            methods: {\n                onLazyLoad(event) {\n                    this.loading = true;\n\n                    if (this.loadLazyTimeout) {\n                        clearTimeout(this.loadLazyTimeout);\n                    }\n\n                    //imitate delay of a backend call\n                    this.loadLazyTimeout = setTimeout(() => {\n                        const { first, last } = event;\n                        const lazyItems = [...this.lazyItems];\n\n                        for (let i = first; i < last; i++) {\n                            lazyItems[i] = { label: `Item #${i}`, value: i };\n                        }\n\n                        this.lazyItems = lazyItems;\n                        this.loading = false;\n                    }, Math.random() * 1000 + 250);\n                }\n            },\n            components: {\n                \"p-dropdown\": primevue.dropdown,\n                \"p-skeleton\": primevue.skeleton\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\/script>\n\n        <style>\n        .p-dropdown {\n            width: 14rem;\n        }\n\n        .country-item img{\n            width: 17px;\n            margin-right: 0.5rem;\n        }\n        </style>"}}}}},Qe=n("6b0d"),Xe=n.n(Qe);const et=Xe()(qe,[["render",$e]]);var tt=et,nt={data:function(){return{selectedCity1:null,selectedCity2:null,selectedCountry:null,selectedGroupedCity:null,selectedItem1:null,selectedItem2:null,loading:!1,cities:[{name:"New York",code:"NY"},{name:"Rome",code:"RM"},{name:"London",code:"LDN"},{name:"Istanbul",code:"IST"},{name:"Paris",code:"PRS"}],countries:[{name:"Australia",code:"AU"},{name:"Brazil",code:"BR"},{name:"China",code:"CN"},{name:"Egypt",code:"EG"},{name:"France",code:"FR"},{name:"Germany",code:"DE"},{name:"India",code:"IN"},{name:"Japan",code:"JP"},{name:"Spain",code:"ES"},{name:"United States",code:"US"}],groupedCities:[{label:"Germany",code:"DE",items:[{label:"Berlin",value:"Berlin"},{label:"Frankfurt",value:"Frankfurt"},{label:"Hamburg",value:"Hamburg"},{label:"Munich",value:"Munich"}]},{label:"USA",code:"US",items:[{label:"Chicago",value:"Chicago"},{label:"Los Angeles",value:"Los Angeles"},{label:"New York",value:"New York"},{label:"San Francisco",value:"San Francisco"}]},{label:"Japan",code:"JP",items:[{label:"Kyoto",value:"Kyoto"},{label:"Osaka",value:"Osaka"},{label:"Tokyo",value:"Tokyo"},{label:"Yokohama",value:"Yokohama"}]}],items:Array.from({length:1e5},(function(e,t){return{label:"Item #".concat(t),value:t}})),lazyItems:Array.from({length:1e5})}},loadLazyTimeout:null,methods:{onLazyLoad:function(e){var t=this;this.loading=!0,this.loadLazyTimeout&&clearTimeout(this.loadLazyTimeout),this.loadLazyTimeout=setTimeout((function(){for(var n=e.first,l=e.last,o=Object(C["a"])(t.lazyItems),a=n;a<l;a++)o[a]={label:"Item #".concat(a),value:a};t.lazyItems=o,t.loading=!1}),1e3*Math.random()+250)}},components:{DropdownDoc:tt}};n("18af");const lt=Xe()(nt,[["render",w],["__scopeId","data-v-63aa7c7c"]]);t["default"]=lt},"778c":function(e,t,n){var l=n("24fb");t=l(!1),t.push([e.i,".p-dropdown[data-v-63aa7c7c]{width:14rem}.country-item-value img.flag[data-v-63aa7c7c]{width:17px}",""]),e.exports=t},b5e1:function(e,t,n){var l=n("778c");l.__esModule&&(l=l.default),"string"===typeof l&&(l=[[e.i,l,""]]),l.locals&&(e.exports=l.locals);var o=n("499e").default;o("43a89ffe",l,!0,{sourceMap:!1,shadowMode:!1})}}]);