(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c1979"],{4766:function(n,o,e){"use strict";e.r(o);var r=e("7a23"),t={class:"content-section introduction"},a=Object(r["k"])("div",{class:"feature-intro"},[Object(r["k"])("h1",null,"Radar Chart"),Object(r["k"])("p",null,"A radar chart is a graphical method of displaying multivariate data in the form of a two-dimensional chart of three or more quantitative variables represented on axes starting from the same point.")],-1),i={class:"content-section implementation"},c={class:"card flex justify-content-center"};function l(n,o,e,l,s,d){var g=Object(r["P"])("AppDemoActions"),p=Object(r["P"])("Chart"),b=Object(r["P"])("RadarChartDoc");return Object(r["H"])(),Object(r["j"])("div",null,[Object(r["k"])("div",t,[a,Object(r["o"])(g)]),Object(r["k"])("div",i,[Object(r["k"])("div",c,[Object(r["o"])(p,{type:"radar",data:s.chartData,options:s.chartOptions,style:{width:"40%"}},null,8,["data","options"])])]),Object(r["o"])(b)])}function s(n,o,e,t,a,i){var c=Object(r["P"])("AppDoc");return Object(r["H"])(),Object(r["h"])(c,{name:"ChartDemo",sources:a.sources,dependencies:{"chart.js":"3.3.2"},component:"Chart",github:"chart/RadarChartDemo.vue"},null,8,["sources","dependencies"])}var d={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:"\n<template>\n    <div>\n        <Chart type=\"radar\" :data=\"chartData\" :options=\"chartOptions\" />\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            chartData: {\n                labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n                datasets: [\n                    {\n                        label: 'My First dataset',\n                        backgroundColor: 'rgba(179,181,198,0.2)',\n                        borderColor: 'rgba(179,181,198,1)',\n                        pointBackgroundColor: 'rgba(179,181,198,1)',\n                        pointBorderColor: '#fff',\n                        pointHoverBackgroundColor: '#fff',\n                        pointHoverBorderColor: 'rgba(179,181,198,1)',\n                        data: [65, 59, 90, 81, 56, 55, 40]\n                    },\n                    {\n                        label: 'My Second dataset',\n                        backgroundColor: 'rgba(255,99,132,0.2)',\n                        borderColor: 'rgba(255,99,132,1)',\n                        pointBackgroundColor: 'rgba(255,99,132,1)',\n                        pointBorderColor: '#fff',\n                        pointHoverBackgroundColor: '#fff',\n                        pointHoverBorderColor: 'rgba(255,99,132,1)',\n                        data: [28, 48, 40, 19, 96, 27, 100]\n                    }\n                ]\n            },\n            chartOption: {\n                plugins: {\n                    legend: {\n                        labels: {\n                            color: '#495057'\n                        }\n                    }\n                },\n                scales: {\n                    r: {\n                        pointLabels: {\n                            color: '#495057',\n                        },\n                        grid: {\n                            color: '#ebedef',\n                        },\n                        angleLines: {\n                            color: '#ebedef'\n                        }\n                    }\n                }\n            }\n        }\n    }    \n}\n<\\/script>\n"},"composition-api":{tabName:"Composition API Source",content:"\n<template>\n    <div>\n        <Chart type=\"radar\" :data=\"chartData\" :options=\"chartOptions\" />\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n    setup() {\n        const chartData = ref({\n            labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n            datasets: [\n                {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(179,181,198,0.2)',\n                    borderColor: 'rgba(179,181,198,1)',\n                    pointBackgroundColor: 'rgba(179,181,198,1)',\n                    pointBorderColor: '#fff',\n                    pointHoverBackgroundColor: '#fff',\n                    pointHoverBorderColor: 'rgba(179,181,198,1)',\n                    data: [65, 59, 90, 81, 56, 55, 40]\n                },\n                {\n                    label: 'My Second dataset',\n                    backgroundColor: 'rgba(255,99,132,0.2)',\n                    borderColor: 'rgba(255,99,132,1)',\n                    pointBackgroundColor: 'rgba(255,99,132,1)',\n                    pointBorderColor: '#fff',\n                    pointHoverBackgroundColor: '#fff',\n                    pointHoverBorderColor: 'rgba(255,99,132,1)',\n                    data: [28, 48, 40, 19, 96, 27, 100]\n                }\n            ]\n        });\n\n        const chartOptions = ref({\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                }\n            },\n            scales: {\n                r: {\n                    pointLabels: {\n                        color: '#495057',\n                    },\n                    grid: {\n                        color: '#ebedef',\n                    },\n                    angleLines: {\n                        color: '#ebedef'\n                    }\n                }\n            }\n        });\n\n\t\treturn { chartData, chartOptions }\n    }    \n}\n<\\/script>\n"}}}}},g=e("6b0d"),p=e.n(g);const b=p()(d,[["render",s]]);var f=b,u=e("11f3"),h={themeChangeListener:null,mounted:function(){var n=this;this.themeChangeListener=function(o){o.dark?n.chartOptions=n.getDarkTheme():n.chartOptions=n.getLightTheme()},u["a"].on("theme-change",this.themeChangeListener)},beforeUnmount:function(){u["a"].off("change-theme",this.themeChangeListener)},data:function(){return{chartData:{labels:["Eating","Drinking","Sleeping","Designing","Coding","Cycling","Running"],datasets:[{label:"My First dataset",backgroundColor:"rgba(179,181,198,0.2)",borderColor:"rgba(179,181,198,1)",pointBackgroundColor:"rgba(179,181,198,1)",pointBorderColor:"#fff",pointHoverBackgroundColor:"#fff",pointHoverBorderColor:"rgba(179,181,198,1)",data:[65,59,90,81,56,55,40]},{label:"My Second dataset",backgroundColor:"rgba(255,99,132,0.2)",borderColor:"rgba(255,99,132,1)",pointBackgroundColor:"rgba(255,99,132,1)",pointBorderColor:"#fff",pointHoverBackgroundColor:"#fff",pointHoverBorderColor:"rgba(255,99,132,1)",data:[28,48,40,19,96,27,100]}]},chartOptions:this.isDarkTheme()?this.getDarkTheme():this.getLightTheme()}},methods:{isDarkTheme:function(){return!0===this.$appState.darkTheme},getLightTheme:function(){return{plugins:{legend:{labels:{color:"#495057"}}},scales:{r:{pointLabels:{color:"#495057"},grid:{color:"#ebedef"},angleLines:{color:"#ebedef"}}}}},getDarkTheme:function(){return{plugins:{legend:{labels:{color:"#ebedef"}}},scales:{r:{pointLabels:{color:"#ebedef"},grid:{color:"rgba(255,255,255,0.2)"},angleLines:{color:"rgba(255,255,255,0.2)"}}}}}},components:{RadarChartDoc:f}};const C=p()(h,[["render",l]]);o["default"]=C}}]);