(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-50ea52f8"],{"528a":function(e,n,t){"use strict";t.r(n);var l=t("7a23"),o={class:"content-section introduction"},c=Object(l["k"])("div",{class:"feature-intro"},[Object(l["k"])("h1",null,[Object(l["n"])("DataTable "),Object(l["k"])("span",null,"Column Toggle")]),Object(l["k"])("p",null,"MultiSelect component can be used to implement column toggle functionality.")],-1),u={class:"content-section implementation"},a={class:"card"},r={style:{"text-align":"left"}};function d(e,n,t,d,s,i){var m=Object(l["P"])("AppDemoActions"),p=Object(l["P"])("MultiSelect"),f=Object(l["P"])("Column"),v=Object(l["P"])("DataTable"),h=Object(l["P"])("AppDoc");return Object(l["H"])(),Object(l["j"])("div",null,[Object(l["k"])("div",o,[c,Object(l["o"])(m)]),Object(l["k"])("div",u,[Object(l["k"])("div",a,[Object(l["o"])(v,{value:s.products,responsiveLayout:"scroll"},{header:Object(l["Z"])((function(){return[Object(l["k"])("div",r,[Object(l["o"])(p,{modelValue:s.selectedColumns,options:s.columns,optionLabel:"header","onUpdate:modelValue":i.onToggle,placeholder:"Select Columns",style:{width:"20em"}},null,8,["modelValue","options","onUpdate:modelValue"])])]})),default:Object(l["Z"])((function(){return[Object(l["o"])(f,{field:"code",header:"Code"}),(Object(l["H"])(!0),Object(l["j"])(l["a"],null,Object(l["N"])(s.selectedColumns,(function(e,n){return Object(l["H"])(),Object(l["h"])(f,{field:e.field,header:e.header,key:e.field+"_"+n},null,8,["field","header"])})),128))]})),_:1},8,["value"])])]),Object(l["o"])(h,{name:"DataTableColToggleDemo",sources:s.sources,service:["ProductService"],data:["products-small"],github:"datatable/DataTableColToggleDemo.vue"},null,8,["sources"])])}t("4de4"),t("d3b7"),t("caad"),t("2532");var s=t("e9c0"),i={data:function(){return{selectedColumns:null,columns:null,products:null,sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div>\n        <DataTable :value="products" responsiveLayout="scroll">\n            <template #header>\n                <div style="text-align:left">\n                    <MultiSelect :modelValue="selectedColumns" :options="columns" optionLabel="header" @update:modelValue="onToggle"\n                        placeholder="Select Columns" style="width: 20em"/>\n                </div>\n            </template>\n            <Column field="code" header="Code" />\n            <Column v-for="(col, index) of selectedColumns" :field="col.field" :header="col.header" :key="col.field + \'_\' + index"></Column>\n        </DataTable>\n    </div>\n</template>\n\n<script>\nimport ProductService from \'./service/ProductService\';\n\nexport default {\n    data() {\n        return {\n            selectedColumns: null,\n            columns: null,\n            products: null\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n\n        this.columns = [\n            {field: \'name\', header: \'Name\'},\n            {field: \'category\', header: \'Category\'},\n            {field: \'quantity\', header: \'Quantity\'}\n        ];\n        this.selectedColumns = this.columns;\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    },\n    methods: {\n        onToggle(value) {\n            this.selectedColumns = this.columns.filter(col => value.includes(col));\n        }\n    }\n}\n<\\/script>\n'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div>\n        <DataTable :value="products" responsiveLayout="scroll">\n            <template #header>\n                <div style="text-align:left">\n                    <MultiSelect :modelValue="selectedColumns" :options="columns" optionLabel="header" @update:modelValue="onToggle"\n                        placeholder="Select Columns" style="width: 20em"/>\n                </div>\n            </template>\n            <Column field="code" header="Code" />\n            <Column v-for="(col, index) of selectedColumns" :field="col.field" :header="col.header" :key="col.field + \'_\' + index"></Column>\n        </DataTable>\n    </div>\n</template>\n\n<script>\nimport { ref, onMounted } from \'vue\';\nimport ProductService from \'./service/ProductService\';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            productService.value.getProductsSmall().then(data => products.value = data);\n        })\n\n        const columns = ref([\n            {field: \'name\', header: \'Name\'},\n            {field: \'category\', header: \'Category\'},\n            {field: \'quantity\', header: \'Quantity\'}\n        ]);\n        const selectedColumns = ref(columns.value);\n        const products = ref();\n        const productService = ref(new ProductService());\n        const onToggle = (val) => {\n            selectedColumns.value = columns.value.filter(col => val.includes(col));\n        };\n\n        return { columns, selectedColumns, products, productService, onToggle }\n    }\n}\n<\\/script>\n'},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/datatable/datatable.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/column/column.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/multiselect/multiselect.min.js"><\\/script>\n        <script src="./ProductService.js"><\\/script>',content:'<div id="app">\n            <p-datatable :value="products" responsive-layout="scroll">\n                <template #header>\n                    <div style="text-align:left">\n                        <p-multiselect :model-value="selectedColumns" :options="columns" option-label="header" @update:model-value="onToggle"\n                            placeholder="Select Columns" style="width: 20em"></p-multiselect>\n                    </div>\n                </template>\n                <p-column field="code" header="Code"></p-column>\n                <p-column v-for="(col, index) of selectedColumns" :field="col.field" :header="col.header" :key="col.field + \'_\' + index"></p-column>\n            </p-datatable>\n        </div>\n\n        <script type="module">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    productService.value.getProductsSmall().then(data => products.value = data);\n                })\n\n                const columns = ref([\n                    {field: \'name\', header: \'Name\'},\n                    {field: \'category\', header: \'Category\'},\n                    {field: \'quantity\', header: \'Quantity\'}\n                ]);\n                const selectedColumns = ref(columns.value);\n                const products = ref();\n                const productService = ref(new ProductService());\n                const onToggle = (val) => {\n                    selectedColumns.value = columns.value.filter(col => val.includes(col));\n                };\n\n                return { columns, selectedColumns, products, productService, onToggle }\n            },\n            components: {\n                "p-datatable": primevue.datatable,\n                "p-column": primevue.column,\n                "p-multiselect": primevue.multiselect\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount("#app");\n        <\\/script>\n'}}}},productService:null,created:function(){this.productService=new s["a"],this.columns=[{field:"name",header:"Name"},{field:"category",header:"Category"},{field:"quantity",header:"Quantity"}],this.selectedColumns=this.columns},mounted:function(){var e=this;this.productService.getProductsSmall().then((function(n){return e.products=n}))},methods:{onToggle:function(e){this.selectedColumns=this.columns.filter((function(n){return e.includes(n)}))}}},m=t("6b0d"),p=t.n(m);const f=p()(i,[["render",d]]);n["default"]=f},e9c0:function(e,n,t){"use strict";t.d(n,"a",(function(){return c}));var l=t("d4ec"),o=t("bee2"),c=(t("d3b7"),function(){function e(){Object(l["a"])(this,e)}return Object(o["a"])(e,[{key:"getProductsSmall",value:function(){return fetch("demo/data/products-small.json").then((function(e){return e.json()})).then((function(e){return e.data}))}},{key:"getProducts",value:function(){return fetch("demo/data/products.json").then((function(e){return e.json()})).then((function(e){return e.data}))}},{key:"getProductsWithOrdersSmall",value:function(){return fetch("demo/data/products-orders-small.json").then((function(e){return e.json()})).then((function(e){return e.data}))}}]),e}())}}]);