(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-a90693e2"],{"31d4":function(e,t,n){"use strict";n("afd4")},"9a40":function(e,t,n){var l=n("24fb");t=l(!1),t.push([e.i,"[data-v-1e050ed2] .p-datatable-frozen-tbody,[data-v-1e050ed2] .p-datatable-scrollable .p-frozen-column{font-weight:700}",""]),e.exports=t},afd4:function(e,t,n){var l=n("9a40");l.__esModule&&(l=l.default),"string"===typeof l&&(l=[[e.i,l,""]]),l.locals&&(e.exports=l.locals);var a=n("499e").default;a("60b19456",l,!0,{sourceMap:!1,shadowMode:!1})},efbf:function(e,t,n){"use strict";n.r(t);n("b0c0");var l=n("7a23"),a=n("2d77"),o=n.n(a),r=function(e){return Object(l["K"])("data-v-1e050ed2"),e=e(),Object(l["I"])(),e},s={class:"content-section introduction"},i=r((function(){return Object(l["k"])("div",{class:"feature-intro"},[Object(l["k"])("h1",null,[Object(l["n"])("DataTable "),Object(l["k"])("span",null,"Scroll")]),Object(l["k"])("p",null,"Data scrolling is available horizontally, vertically or both with support for frozen rows and columns.")],-1)})),d={class:"content-section implementation"},u={class:"card"},c=r((function(){return Object(l["k"])("h5",null,"Vertical",-1)})),m={class:"card"},p=r((function(){return Object(l["k"])("h5",null,"Flexible Scroll",-1)})),h=r((function(){return Object(l["k"])("p",null,"Flex scroll feature makes the scrollable viewport section dynamic instead of a fixed value so that it can grow or shrink relative to the parent size of the table. Click the button below to display a maximizable Dialog where data viewport adjusts itself according to the size changes.",-1)})),f={class:"card"},b=r((function(){return Object(l["k"])("h5",null,"Horizontal and Vertical with Footer",-1)})),y={class:"card"},v=r((function(){return Object(l["k"])("h5",null,"Frozen Rows",-1)})),C={class:"card"},g=r((function(){return Object(l["k"])("h5",null,"Frozen Columns",-1)})),w={class:"font-bold"},x={class:"card"},k=r((function(){return Object(l["k"])("h5",null,"Subheader Grouping",-1)})),O={class:"image-text"},j=["alt","src"],S={class:"image-text"},z={style:{"text-align":"right"},class:"font-bold p-pr-6"};function D(e,t,n,a,r,D){var F=Object(l["P"])("AppDemoActions"),T=Object(l["P"])("Column"),R=Object(l["P"])("DataTable"),B=Object(l["P"])("Button"),P=Object(l["P"])("Dialog"),G=Object(l["P"])("ToggleButton"),N=Object(l["P"])("AppDoc");return Object(l["H"])(),Object(l["j"])("div",null,[Object(l["k"])("div",s,[i,Object(l["o"])(F)]),Object(l["k"])("div",d,[Object(l["k"])("div",u,[c,Object(l["o"])(R,{value:r.customers1,scrollable:!0,scrollHeight:"400px",loading:r.loading},{default:Object(l["Z"])((function(){return[Object(l["o"])(T,{field:"name",header:"Name",style:{"min-width":"200px"}}),Object(l["o"])(T,{field:"country.name",header:"Country",style:{"min-width":"200px"}}),Object(l["o"])(T,{field:"representative.name",header:"Representative",style:{"min-width":"200px"}}),Object(l["o"])(T,{field:"status",header:"Status",style:{"min-width":"200px"}})]})),_:1},8,["value","loading"])]),Object(l["k"])("div",m,[p,h,Object(l["o"])(B,{label:"Show",icon:"pi pi-external-link",onClick:D.openDialog},null,8,["onClick"])]),Object(l["o"])(P,{header:"Flex Scroll",visible:r.dialogVisible,"onUpdate:visible":t[0]||(t[0]=function(e){return r.dialogVisible=e}),style:{width:"75vw"},maximizable:!0,modal:!0,contentStyle:{height:"300px"}},{footer:Object(l["Z"])((function(){return[Object(l["o"])(B,{label:"Ok",icon:"pi pi-check",onClick:D.closeDialog},null,8,["onClick"])]})),default:Object(l["Z"])((function(){return[Object(l["o"])(R,{value:r.customers1,scrollable:!0,scrollHeight:"flex"},{default:Object(l["Z"])((function(){return[Object(l["o"])(T,{field:"name",header:"Name",style:{"min-width":"200px"}}),Object(l["o"])(T,{field:"country.name",header:"Country",style:{"min-width":"200px"}}),Object(l["o"])(T,{field:"representative.name",header:"Representative",style:{"min-width":"200px"}}),Object(l["o"])(T,{field:"status",header:"Status",style:{"min-width":"200px"}})]})),_:1},8,["value"])]})),_:1},8,["visible"]),Object(l["k"])("div",f,[b,Object(l["o"])(R,{value:r.customers2,scrollable:!0,scrollHeight:"400px",loading:r.loading,scrollDirection:"both"},{default:Object(l["Z"])((function(){return[Object(l["o"])(T,{field:"id",header:"Id",footer:"Id",style:{width:"100px"}}),Object(l["o"])(T,{field:"name",header:"Name",footer:"Name",style:{width:"200px"}}),Object(l["o"])(T,{field:"country.name",header:"Country",footer:"Country",style:{width:"200px"}}),Object(l["o"])(T,{field:"date",header:"Date",footer:"Date",style:{width:"200px"}}),Object(l["o"])(T,{field:"balance",header:"Balance",footer:"Balance",style:{width:"200px"}},{body:Object(l["Z"])((function(e){var t=e.data;return[Object(l["n"])(Object(l["T"])(D.formatCurrency(t.balance)),1)]})),_:1}),Object(l["o"])(T,{field:"company",header:"Company",footer:"Company",style:{width:"200px"}}),Object(l["o"])(T,{field:"status",header:"Status",footer:"Status",style:{width:"200px"}}),Object(l["o"])(T,{field:"activity",header:"Activity",footer:"Activity",style:{width:"200px"}}),Object(l["o"])(T,{field:"representative.name",header:"Representative",footer:"Representative",style:{width:"200px"}})]})),_:1},8,["value","loading"])]),Object(l["k"])("div",y,[v,Object(l["o"])(R,{value:r.unlockedCustomers,frozenValue:r.lockedCustomers,scrollable:!0,scrollHeight:"400px",loading:r.loading},{default:Object(l["Z"])((function(){return[Object(l["o"])(T,{field:"name",header:"Name",style:{"min-width":"200px"}}),Object(l["o"])(T,{field:"country.name",header:"Country",style:{"min-width":"200px"}}),Object(l["o"])(T,{field:"representative.name",header:"Representative",style:{"min-width":"200px"}}),Object(l["o"])(T,{field:"status",header:"Status",style:{"min-width":"200px"}}),Object(l["o"])(T,{style:{flex:"0 0 4rem"}},{body:Object(l["Z"])((function(e){var t=e.data,n=e.frozenRow,a=e.index;return[Object(l["o"])(B,{type:"button",icon:n?"pi pi-lock-open":"pi pi-lock",disabled:!n&&r.lockedCustomers.length>=2,class:"p-button-sm p-button-text",onClick:function(e){return D.toggleLock(t,n,a)}},null,8,["icon","disabled","onClick"])]})),_:1})]})),_:1},8,["value","frozenValue","loading"])]),Object(l["k"])("div",C,[g,Object(l["o"])(G,{modelValue:r.balanceFrozen,"onUpdate:modelValue":t[1]||(t[1]=function(e){return r.balanceFrozen=e}),onIcon:"pi pi-lock",offIcon:"pi pi-lock-open",onLabel:"Unfreeze Balance",offLabel:"Freeze Balance",style:{"flex-grow":"1","flex-basis":"12rem"}},null,8,["modelValue"]),Object(l["o"])(R,{value:r.customers2,scrollable:!0,scrollHeight:"400px",loading:r.loading,scrollDirection:"both",class:"mt-3"},{default:Object(l["Z"])((function(){return[Object(l["o"])(T,{field:"name",header:"Name",style:{width:"160px"},frozen:""}),Object(l["o"])(T,{field:"id",header:"Id",style:{width:"100px"}}),Object(l["o"])(T,{field:"name",header:"Name",style:{width:"200px"}}),Object(l["o"])(T,{field:"country.name",header:"Country",style:{width:"200px"}}),Object(l["o"])(T,{field:"date",header:"Date",style:{width:"200px"}}),Object(l["o"])(T,{field:"company",header:"Company",style:{width:"200px"}}),Object(l["o"])(T,{field:"status",header:"Status",style:{width:"200px"}}),Object(l["o"])(T,{field:"activity",header:"Activity",style:{width:"200px"}}),Object(l["o"])(T,{field:"representative.name",header:"Representative",style:{width:"200px"}}),Object(l["o"])(T,{field:"balance",header:"Balance",style:{width:"120px"},alignFrozen:"right",frozen:r.balanceFrozen},{body:Object(l["Z"])((function(e){var t=e.data;return[Object(l["k"])("span",w,Object(l["T"])(D.formatCurrency(t.balance)),1)]})),_:1},8,["frozen"])]})),_:1},8,["value","loading"])]),Object(l["k"])("div",x,[k,Object(l["o"])(R,{value:r.customersGrouped,rowGroupMode:"subheader",groupRowsBy:"representative.name",sortMode:"single",sortField:"representative.name",sortOrder:1,scrollable:"",scrollHeight:"400px"},{groupheader:Object(l["Z"])((function(e){return[Object(l["k"])("img",{alt:e.data.representative.name,src:"demo/images/avatar/"+e.data.representative.image,width:"32",style:{"vertical-align":"middle"}},null,8,j),Object(l["k"])("span",S,Object(l["T"])(e.data.representative.name),1)]})),groupfooter:Object(l["Z"])((function(e){return[Object(l["k"])("td",z,"Total Customers: "+Object(l["T"])(D.calculateCustomerTotal(e.data.representative.name)),1)]})),default:Object(l["Z"])((function(){return[Object(l["o"])(T,{field:"representative.name",header:"Representative"}),Object(l["o"])(T,{field:"name",header:"Name",style:{"min-width":"200px"}}),Object(l["o"])(T,{field:"country",header:"Country",style:{"min-width":"200px"}},{body:Object(l["Z"])((function(e){return[Object(l["k"])("img",{src:o.a,class:Object(l["A"])("flag flag-"+e.data.country.code),width:"30"},null,2),Object(l["k"])("span",O,Object(l["T"])(e.data.country.name),1)]})),_:1}),Object(l["o"])(T,{field:"company",header:"Company",style:{"min-width":"200px"}}),Object(l["o"])(T,{field:"status",header:"Status",style:{"min-width":"200px"}},{body:Object(l["Z"])((function(e){return[Object(l["k"])("span",{class:Object(l["A"])("customer-badge status-"+e.data.status)},Object(l["T"])(e.data.status),3)]})),_:1}),Object(l["o"])(T,{field:"date",header:"Date",style:{"min-width":"200px"}})]})),_:1},8,["value"])])]),Object(l["o"])(N,{name:"DataTableScrollDemo",sources:r.sources,service:["CustomerService"],data:["customers-medium","customers-large"],github:"datatable/DataTableScrollDemo.vue"},null,8,["sources"])])}var F=n("b85c"),T=(n("4de4"),n("d3b7"),n("4e82"),n("9fa9")),R={data:function(){return{customers1:null,customers2:null,customersGrouped:null,lockedCustomers:[],unlockedCustomers:null,loading:!1,dialogVisible:!1,balanceFrozen:!1,sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n\t<div>\n        <div class="card">\n            <h5>Vertical</h5>\n            <DataTable :value="customers1" :scrollable="true" scrollHeight="400px" :loading="loading">\n                <Column field="name" header="Name" style="min-width:200px"></Column>\n                <Column field="country.name" header="Country" style="min-width:200px"></Column>\n                <Column field="representative.name" header="Representative" style="min-width:200px"></Column>\n                <Column field="status" header="Status" style="min-width:200px"></Column>\n            </DataTable>\n        </div>\n\n        <div class="card">\n            <h5>Flexible Scroll</h5>\n            <Button label="Show" icon="pi pi-external-link" @click="openDialog" />\n        </div>\n\n        <Dialog header="Flex Scroll" v-model:visible="dialogVisible" :style="{width: \'75vw\'}" :maximizable="true" :modal="true" :contentStyle="{height: \'300px\'}">\n            <DataTable :value="customers1" :scrollable="true" scrollHeight="flex">\n                <Column field="name" header="Name" style="min-width:200px"></Column>\n                <Column field="country.name" header="Country" style="min-width:200px"></Column>\n                <Column field="representative.name" header="Representative" style="min-width:200px"></Column>\n                <Column field="status" header="Status" style="min-width:200px"></Column>\n            </DataTable>\n            <template #footer>\n                <Button label="Ok" icon="pi pi-check" @click="closeDialog" />\n            </template>\n        </Dialog>\n\n        <div class="card">\n            <h5>Horizontal and Vertical with Footer</h5>\n            <DataTable :value="customers2" :scrollable="true" scrollHeight="400px" :loading="loading" scrollDirection="both">\n                <Column field="id" header="Id" footer="Id" style="width:100px"></Column>\n                <Column field="name" header="Name" footer="Name" style="width:200px"></Column>\n                <Column field="country.name" header="Country" footer="Country" style="width:200px"></Column>\n                <Column field="date" header="Date" footer="Date" style="width:200px"></Column>\n                <Column field="balance" header="Balance" footer="Balance" style="width:200px">\n                    <template #body="{data}">\n                        {{formatCurrency(data.balance)}}\n                    </template>\n                </Column>\n                <Column field="company" header="Company" footer="Company" style="width:200px"></Column>\n                <Column field="status" header="Status" footer="Status" style="width:200px"></Column>\n                <Column field="activity" header="Activity" footer="Activity" style="width:200px"></Column>\n                <Column field="representative.name" header="Representative" footer="Representative" style="width:200px"></Column>\n            </DataTable>\n        </div>\n\n        <div class="card">\n            <h5>Frozen Rows</h5>\n            <DataTable :value="unlockedCustomers" :frozenValue="lockedCustomers" :scrollable="true" scrollHeight="400px" :loading="loading">\n                <Column field="name" header="Name" style="min-width:200px"></Column>\n                <Column field="country.name" header="Country" style="min-width:200px"></Column>\n                <Column field="representative.name" header="Representative" style="min-width:200px"></Column>\n                <Column field="status" header="Status" style="min-width:200px"></Column>\n                <Column style="flex: 0 0 4rem">\n                    <template #body="{data,frozenRow,index}">\n                        <Button type="button" :icon="frozenRow ? \'pi pi-lock-open\' : \'pi pi-lock\'" :disabled="frozenRow ? false : lockedCustomers.length >= 2"\n                        class="p-button-sm p-button-text" @click="toggleLock(data,frozenRow,index)"/>\n                    </template>\n                </Column>\n            </DataTable>\n        </div>\n\n        <div class="card">\n            <h5>Frozen Columns</h5>\n            <ToggleButton v-model="balanceFrozen" onIcon="pi pi-lock" offIcon="pi pi-lock-open" onLabel="Unfreeze Balance" offLabel="Freeze Balance" style="flex-grow:1; flex-basis: 12rem" />\n\n            <DataTable :value="customers2" :scrollable="true" scrollHeight="400px" :loading="loading" scrollDirection="both" class="mt-3">\n                <Column field="name" header="Name" style="width:160px" frozen></Column>\n                <Column field="id" header="Id" style="width:100px"></Column>\n                <Column field="name" header="Name" style="width:200px"></Column>\n                <Column field="country.name" header="Country" style="width:200px"></Column>\n                <Column field="date" header="Date" style="width:200px"></Column>\n                <Column field="company" header="Company" style="width:200px"></Column>\n                <Column field="status" header="Status" style="width:200px"></Column>\n                <Column field="activity" header="Activity" style="width:200px"></Column>\n                <Column field="representative.name" header="Representative" style="width:200px"></Column>\n                <Column field="balance" header="Balance" style="width:120px" alignFrozen="right" :frozen="balanceFrozen">\n                    <template #body="{data}">\n                        <span class="font-bold">{{formatCurrency(data.balance)}}</span>\n                    </template>\n                </Column>\n            </DataTable>\n        </div>\n\n        <div class="card">\n            <h5>Subheader Grouping</h5>\n            <DataTable :value="customersGrouped" rowGroupMode="subheader" groupRowsBy="representative.name"\n                sortMode="single" sortField="representative.name" :sortOrder="1" scrollable scrollHeight="400px">\n                <Column field="representative.name" header="Representative"></Column>\n                <Column field="name" header="Name" style="min-width:200px"></Column>\n                <Column field="country" header="Country" style="min-width:200px">\n                    <template #body="slotProps">\n                        <img src="https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png" width="30" />\n                        <span class="image-text">{{slotProps.data.country.name}}</span>\n                    </template>\n                </Column>\n                <Column field="company" header="Company" style="min-width:200px"></Column>\n                <Column field="status" header="Status" style="min-width:200px">\n                    <template #body="slotProps">\n                        <span :class="\'customer-badge status-\' + slotProps.data.status">{{slotProps.data.status}}</span>\n                    </template>\n                </Column>\n                <Column field="date" header="Date" style="min-width:200px"></Column>\n                <template #groupheader="slotProps">\n                    <img :alt="slotProps.data.representative.name" src="https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png"  width="32" style="vertical-align: middle" />\n                    <span class="image-text">{{slotProps.data.representative.name}}</span>\n                </template>\n                <template #groupfooter="slotProps">\n                    <td style="text-align: right" class="font-bold p-pr-6">Total Customers: {{calculateCustomerTotal(slotProps.data.representative.name)}}</td>\n                </template>\n            </DataTable>\n        </div>\n\t</div>\n</template>\n\n<script>\nimport CustomerService from \'./service/CustomerService\';\n\nexport default {\n    data() {\n        return {\n            customers1: null,\n            customers2: null,\n            customersGrouped: null,\n            lockedCustomers: [],\n            unlockedCustomers: null,\n            loading: false,\n            dialogVisible: false,\n            balanceFrozen: false\n        }\n    },\n    customerService: null,\n    created() {\n        this.customerService = new CustomerService();\n    },\n    mounted() {\n        this.loading = true;\n\n        this.customerService.getCustomersLarge().then(data => {\n            this.customers1 = data;\n            this.loading = false;\n        });\n        this.customerService.getCustomersMedium().then(data => this.customers2 = data);\n        this.customerService.getCustomersMedium().then(data => this.unlockedCustomers = data);\n        this.customerService.getCustomersMedium().then(data => this.customersGrouped = data);\n\n        this.lockedCustomers = [\n            {\n                id: 5135,\n                name: "Geraldine Bisset",\n                country: {\n                    name: "France",\n                    code: "fr"\n                },\n                company: "Bisset Group",\n                status: "proposal",\n                date: "2019-05-05",\n                activity: 0,\n                representative: {\n                    name: "Amy Elsner",\n                    image: "amyelsner.png"\n                }\n            }\n        ];\n    },\n    methods: {\n        openDialog() {\n            this.dialogVisible = true;\n        },\n        closeDialog() {\n            this.dialogVisible = false;\n        },\n        formatCurrency(value) {\n            return value.toLocaleString(\'en-US\', {style: \'currency\', currency: \'USD\'});\n        },\n        calculateCustomerTotal(name) {\n            let total = 0;\n\n            if (this.customersGrouped) {\n                for (let customer of this.customersGrouped) {\n                    if (customer.representative.name === name) {\n                        total++;\n                    }\n                }\n            }\n\n            return total;\n        },\n        toggleLock(data, frozen, index) {\n            if (frozen) {\n                this.lockedCustomers = this.lockedCustomers.filter((c, i) => i !== index);\n                this.unlockedCustomers.push(data);\n            }\n            else {\n                this.unlockedCustomers = this.unlockedCustomers.filter((c, i) => i !== index);\n                this.lockedCustomers.push(data);\n            }\n\n            this.unlockedCustomers.sort((val1, val2) => {\n                return val1.id < val2.id ? -1 : 1;\n            });\n        }\n    }\n}\n<\\/script>\n\n<style lang="scss" scoped>\n::v-deep(.p-datatable-frozen-tbody) {\n    font-weight: bold;\n}\n\n::v-deep(.p-datatable-scrollable .p-frozen-column) {\n    font-weight: bold;\n}\n</style>\n'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n\t<div>\n        <div class="card">\n            <h5>Vertical</h5>\n            <DataTable :value="customers1" :scrollable="true" scrollHeight="400px" :loading="loading">\n                <Column field="name" header="Name" style="min-width:200px"></Column>\n                <Column field="country.name" header="Country" style="min-width:200px"></Column>\n                <Column field="representative.name" header="Representative" style="min-width:200px"></Column>\n                <Column field="status" header="Status" style="min-width:200px"></Column>\n            </DataTable>\n        </div>\n\n        <div class="card">\n            <h5>Flexible Scroll</h5>\n            <Button label="Show" icon="pi pi-external-link" @click="openDialog" />\n        </div>\n\n        <Dialog header="Flex Scroll" v-model:visible="dialogVisible" :style="{width: \'75vw\'}" :maximizable="true" :modal="true" :contentStyle="{height: \'300px\'}">\n            <DataTable :value="customers1" :scrollable="true" scrollHeight="flex">\n                <Column field="name" header="Name" style="min-width:200px"></Column>\n                <Column field="country.name" header="Country" style="min-width:200px"></Column>\n                <Column field="representative.name" header="Representative" style="min-width:200px"></Column>\n                <Column field="status" header="Status" style="min-width:200px"></Column>\n            </DataTable>\n            <template #footer>\n                <Button label="Ok" icon="pi pi-check" @click="closeDialog" />\n            </template>\n        </Dialog>\n\n        <div class="card">\n            <h5>Horizontal and Vertical with Footer</h5>\n            <DataTable :value="customers2" :scrollable="true" scrollHeight="400px" :loading="loading" scrollDirection="both">\n                <Column field="id" header="Id" footer="Id" style="width:100px"></Column>\n                <Column field="name" header="Name" footer="Name" style="width:200px"></Column>\n                <Column field="country.name" header="Country" footer="Country" style="width:200px"></Column>\n                <Column field="date" header="Date" footer="Date" style="width:200px"></Column>\n                <Column field="balance" header="Balance" footer="Balance" style="width:200px">\n                    <template #body="{data}">\n                        {{formatCurrency(data.balance)}}\n                    </template>\n                </Column>\n                <Column field="company" header="Company" footer="Company" style="width:200px"></Column>\n                <Column field="status" header="Status" footer="Status" style="width:200px"></Column>\n                <Column field="activity" header="Activity" footer="Activity" style="width:200px"></Column>\n                <Column field="representative.name" header="Representative" footer="Representative" style="width:200px"></Column>\n            </DataTable>\n        </div>\n\n        <div class="card">\n            <h5>Frozen Rows</h5>\n            <DataTable :value="unlockedCustomers" :frozenValue="lockedCustomers" :scrollable="true" scrollHeight="400px" :loading="loading">\n                <Column field="name" header="Name" style="min-width:200px"></Column>\n                <Column field="country.name" header="Country" style="min-width:200px"></Column>\n                <Column field="representative.name" header="Representative" style="min-width:200px"></Column>\n                <Column field="status" header="Status" style="min-width:200px"></Column>\n                <Column style="flex: 0 0 4rem">\n                    <template #body="{data,frozenRow,index}">\n                        <Button type="button" :icon="frozenRow ? \'pi pi-lock-open\' : \'pi pi-lock\'" :disabled="frozenRow ? false : lockedCustomers.length >= 2"\n                        class="p-button-sm p-button-text" @click="toggleLock(data,frozenRow,index)"/>\n                    </template>\n                </Column>\n            </DataTable>\n        </div>\n\n        <div class="card">\n            <h5>Frozen Columns</h5>\n            <ToggleButton v-model="balanceFrozen" onIcon="pi pi-lock" offIcon="pi pi-lock-open" onLabel="Unfreeze Balance" offLabel="Freeze Balance" style="flex-grow:1; flex-basis: 12rem" />\n\n            <DataTable :value="customers2" :scrollable="true" scrollHeight="400px" :loading="loading" scrollDirection="both" class="mt-3">\n                <Column field="name" header="Name" style="width:160px" frozen></Column>\n                <Column field="id" header="Id" style="width:100px"></Column>\n                <Column field="name" header="Name" style="width:200px"></Column>\n                <Column field="country.name" header="Country" style="width:200px"></Column>\n                <Column field="date" header="Date" style="width:200px"></Column>\n                <Column field="company" header="Company" style="width:200px"></Column>\n                <Column field="status" header="Status" style="width:200px"></Column>\n                <Column field="activity" header="Activity" style="width:200px"></Column>\n                <Column field="representative.name" header="Representative" style="width:200px"></Column>\n                <Column field="balance" header="Balance" style="width:120px" alignFrozen="right" :frozen="balanceFrozen">\n                    <template #body="{data}">\n                        <span class="font-bold">{{formatCurrency(data.balance)}}</span>\n                    </template>\n                </Column>\n            </DataTable>\n        </div>\n\n        <div class="card">\n            <h5>Subheader Grouping</h5>\n            <DataTable :value="customersGrouped" rowGroupMode="subheader" groupRowsBy="representative.name"\n                sortMode="single" sortField="representative.name" :sortOrder="1" scrollable scrollHeight="400px">\n                <Column field="representative.name" header="Representative"></Column>\n                <Column field="name" header="Name" style="min-width:200px"></Column>\n                <Column field="country" header="Country" style="min-width:200px">\n                    <template #body="slotProps">\n                        <img src="https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png" width="30" />\n                        <span class="image-text">{{slotProps.data.country.name}}</span>\n                    </template>\n                </Column>\n                <Column field="company" header="Company" style="min-width:200px"></Column>\n                <Column field="status" header="Status" style="min-width:200px">\n                    <template #body="slotProps">\n                        <span :class="\'customer-badge status-\' + slotProps.data.status">{{slotProps.data.status}}</span>\n                    </template>\n                </Column>\n                <Column field="date" header="Date" style="min-width:200px"></Column>\n                <template #groupheader="slotProps">\n                    <img :alt="slotProps.data.representative.name" src="https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png"  width="32" style="vertical-align: middle" />\n                    <span class="image-text">{{slotProps.data.representative.name}}</span>\n                </template>\n                <template #groupfooter="slotProps">\n                    <td style="text-align: right" class="font-bold p-pr-6">Total Customers: {{calculateCustomerTotal(slotProps.data.representative.name)}}</td>\n                </template>\n            </DataTable>\n        </div>\n\t</div>\n</template>\n\n<script>\nimport { ref, onMounted } from \'vue\';\nimport CustomerService from \'./service/CustomerService\';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            loading.value = true;\n\n            customerService.value.getCustomersLarge().then(data => {\n                customers1.value = data;\n                loading.value = false;\n            });\n            customerService.value.getCustomersMedium().then(data => customers2.value = data);\n            customerService.value.getCustomersMedium().then(data => unlockedCustomers.value = data);\n            customerService.value.getCustomersMedium().then(data => customersGrouped.value = data);\n\n            lockedCustomers.value = [\n                {\n                    id: 5135,\n                    name: "Geraldine Bisset",\n                    country: {\n                        name: "France",\n                        code: "fr"\n                    },\n                    company: "Bisset Group",\n                    status: "proposal",\n                    date: "2019-05-05",\n                    activity: 0,\n                    representative: {\n                        name: "Amy Elsner",\n                        image: "amyelsner.png"\n                    }\n                }\n            ];\n        })\n\n        const customers1 = ref();\n        const customers2 = ref();\n        const customersGrouped = ref();\n        const lockedCustomers = ref([]);\n        const unlockedCustomers = ref();\n        const loading = ref(false);\n        const dialogVisible = ref(false);\n        const balanceFrozen = ref(false);\n        const customerService = ref(new CustomerService());\n\n        const openDialog = () => {\n            dialogVisible.value = true;\n        };\n        const closeDialog = () => {\n            dialogVisible.value = false;\n        };\n        const formatCurrency = (value) => {\n            return value.toLocaleString(\'en-US\', {style: \'currency\', currency: \'USD\'});\n        };\n        const calculateCustomerTotal = (name) => {\n            let total = 0;\n\n            if (customersGrouped.value) {\n                for (let customer of customersGrouped.value) {\n                    if (customer.representative.name === name) {\n                        total++;\n                    }\n                }\n            }\n\n            return total;\n        };\n\n        const toggleLock = (data, frozen, index) => {\n            if (frozen) {\n                lockedCustomers.value = lockedCustomers.value.filter((c, i) => i !== index);\n                unlockedCustomers.value.push(data);\n            }\n            else {\n                unlockedCustomers.value = unlockedCustomers.value.filter((c, i) => i !== index);\n                lockedCustomers.value.push(data);\n            }\n\n            unlockedCustomers.value.sort((val1, val2) => {\n                return val1.id < val2.id ? -1 : 1;\n            });\n        }\n\n        return { customers1, customers2, customersGrouped, lockedCustomers, unlockedCustomers,\n            loading, dialogVisible, balanceFrozen, openDialog, closeDialog, formatCurrency,\n            calculateCustomerTotal, toggleLock }\n    }\n}\n<\\/script>\n\n<style lang="scss" scoped>\n::v-deep(.p-datatable-frozen-tbody) {\n    font-weight: bold;\n}\n\n::v-deep(.p-datatable-scrollable .p-frozen-column) {\n    font-weight: bold;\n}\n</style>\n'},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/datatable/datatable.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/column/column.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/dialog/dialog.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/togglebutton/togglebutton.min.js"><\\/script>\n        <script src="./CustomerService.js"><\\/script>',content:'<div id="app">\n            <div class="card">\n                <h5>Vertical</h5>\n                <p-datatable :value="customers1" :scrollable="true" scroll-height="400px" :loading="loading">\n                    <p-column field="name" header="Name" style="min-width:200px"></p-column>\n                    <p-column field="country.name" header="Country" style="min-width:200px"></p-column>\n                    <p-column field="representative.name" header="Representative" style="min-width:200px"></p-column>\n                    <p-column field="status" header="Status" style="min-width:200px"></p-column>\n                </p-datatable>\n            </div>\n\n            <div class="card">\n                <h5>Flexible Scroll</h5>\n                <p-button label="Show" icon="pi pi-external-link" @click="openDialog"></p-button>\n            </div>\n\n            <p-dialog header="Flex Scroll" v-model:visible="dialogVisible" :style="{width: \'75vw\'}" :maximizable="true" :modal="true" :content-style="{height: \'300px\'}">\n                <p-datatable :value="customers1" :scrollable="true" scroll-height="flex">\n                    <p-column field="name" header="Name" style="min-width:200px"></p-column>\n                    <p-column field="country.name" header="Country" style="min-width:200px"></p-column>\n                    <p-column field="representative.name" header="Representative" style="min-width:200px"></p-column>\n                    <p-column field="status" header="Status" style="min-width:200px"></p-column>\n                </p-datatable>\n                <template #footer>\n                    <p-button label="Ok" icon="pi pi-check" @click="closeDialog"></p-button>\n                </template>\n            </p-dialog>\n\n            <div class="card">\n                <h5>Horizontal and Vertical with Footer</h5>\n                <p-datatable :value="customers2" :scrollable="true" scroll-height="400px" :loading="loading" scroll-direction="both">\n                    <p-column field="id" header="Id" footer="Id" style="width:100px"></p-column>\n                    <p-column field="name" header="Name" footer="Name" style="width:200px"></p-column>\n                    <p-column field="country.name" header="Country" footer="Country" style="width:200px"></p-column>\n                    <p-column field="date" header="Date" footer="Date" style="width:200px"></p-column>\n                    <p-column field="balance" header="Balance" footer="Balance" style="width:200px">\n                        <template #body="{data}">\n                            {{formatCurrency(data.balance)}}\n                        </template>\n                    </p-column>\n                    <p-column field="company" header="Company" footer="Company" style="width:200px"></p-column>\n                    <p-column field="status" header="Status" footer="Status" style="width:200px"></p-column>\n                    <p-column field="activity" header="Activity" footer="Activity" style="width:200px"></p-column>\n                    <p-column field="representative.name" header="Representative" footer="Representative" style="width:200px"></p-column>\n                </p-datatable>\n            </div>\n\n            <div class="card">\n                <h5>Frozen Rows</h5>\n                <p-datatable :value="unlockedCustomers" :frozen-value="lockedCustomers" :scrollable="true" scroll-height="400px" :loading="loading">\n                    <p-column field="name" header="Name" style="min-width:200px"></p-column>\n                    <p-column field="country.name" header="Country" style="min-width:200px"></p-column>\n                    <p-column field="representative.name" header="Representative" style="min-width:200px"></p-column>\n                    <p-column field="status" header="Status" style="min-width:200px"></p-column>\n                    <p-column style="flex: 0 0 4rem">\n                        <template #body="{data,frozenRow,index}">\n                            <p-button type="button" :icon="frozenRow ? \'pi pi-lock-open\' : \'pi pi-lock\'" :disabled="frozenRow ? false : lockedCustomers.length >= 2"\n                            class="p-button-sm p-button-text" @click="toggleLock(data,frozenRow,index)"></p-button>\n                        </template>\n                    </p-column>\n                </p-datatable>\n            </div>\n\n            <div class="card">\n                <h5>Frozen Columns</h5>\n                <p-togglebutton v-model="balanceFrozen" on-icon="pi pi-lock" off-icon="pi pi-lock-open" on-label="Unfreeze Balance" off-label="Freeze Balance" style="flex-grow:1; flex-basis: 12rem"></p-togglebutton>\n\n                <p-datatable :value="customers2" :scrollable="true" scroll-height="400px" :loading="loading" scroll-direction="both" class="mt-3">\n                    <p-column field="name" header="Name" style="width:160px" frozen></p-column>\n                    <p-column field="id" header="Id" style="width:100px"></p-column>\n                    <p-column field="name" header="Name" style="width:200px"></p-column>\n                    <p-column field="country.name" header="Country" style="width:200px"></p-column>\n                    <p-column field="date" header="Date" style="width:200px"></p-column>\n                    <p-column field="company" header="Company" style="width:200px"></p-column>\n                    <p-column field="status" header="Status" style="width:200px"></p-column>\n                    <p-column field="activity" header="Activity" style="width:200px"></p-column>\n                    <p-column field="representative.name" header="Representative" style="width:200px"></p-column>\n                    <p-column field="balance" header="Balance" style="width:120px" alignFrozen="right" :frozen="balanceFrozen">\n                        <template #body="{data}">\n                            <span class="font-bold">{{formatCurrency(data.balance)}}</span>\n                        </template>\n                    </p-column>\n                </p-datatable>\n            </div>\n\n            <div class="card">\n                <h5>Subheader Grouping</h5>\n                <p-datatable :value="customersGrouped" row-group-mode="subheader" group-rows-by="representative.name"\n                    sort-mode="single" sort-field="representative.name" :sort-order="1" scrollable scroll-height="400px">\n                    <p-column field="representative.name" header="Representative"></p-column>\n                    <p-column field="name" header="Name" style="min-width:200px"></p-column>\n                    <p-column field="country" header="Country" style="min-width:200px">\n                        <template #body="slotProps">\n                            <img src="https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png" width="30" />\n                            <span class="image-text">{{slotProps.data.country.name}}</span>\n                        </template>\n                    </p-column>\n                    <p-column field="company" header="Company" style="min-width:200px"></p-column>\n                    <p-column field="status" header="Status" style="min-width:200px">\n                        <template #body="slotProps">\n                            <span :class="\'customer-badge status-\' + slotProps.data.status">{{slotProps.data.status}}</span>\n                        </template>\n                    </p-column>\n                    <p-column field="date" header="Date" style="min-width:200px"></p-column>\n                    <template #groupheader="slotProps">\n                        <img :alt="slotProps.data.representative.name" src="https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png"  width="32" style="vertical-align: middle" />\n                        <span class="image-text">{{slotProps.data.representative.name}}</span>\n                    </template>\n                    <template #groupfooter="slotProps">\n                        <td style="text-align: right" class="font-bold p-pr-6">Total Customers: {{calculateCustomerTotal(slotProps.data.representative.name)}}</td>\n                    </template>\n                </p-datatable>\n            </div>\n        </div>\n\n        <script type="module">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    loading.value = true;\n\n                    customerService.value.getCustomersLarge().then(data => {\n                        customers1.value = data;\n                        loading.value = false;\n                    });\n                    customerService.value.getCustomersMedium().then(data => customers2.value = data);\n                    customerService.value.getCustomersMedium().then(data => unlockedCustomers.value = data);\n                    customerService.value.getCustomersMedium().then(data => customersGrouped.value = data);\n\n                    lockedCustomers.value = [\n                        {\n                            id: 5135,\n                            name: "Geraldine Bisset",\n                            country: {\n                                name: "France",\n                            code: "fr"\n                            },\n                            company: "Bisset Group",\n                            status: "proposal",\n                            date: "2019-05-05",\n                            activity: 0,\n                            representative: {\n                                name: "Amy Elsner",\n                                image: "amyelsner.png"\n                            }\n                        }\n                    ];\n                })\n\n                const customers1 = ref();\n                const customers2 = ref();\n                const customersGrouped = ref();\n                const lockedCustomers = ref([]);\n                const unlockedCustomers = ref();\n                const loading = ref(false);\n                const dialogVisible = ref(false);\n                const balanceFrozen = ref(false);\n                const customerService = ref(new CustomerService());\n\n                const openDialog = () => {\n                    dialogVisible.value = true;\n                };\n                const closeDialog = () => {\n                    dialogVisible.value = false;\n                };\n                const formatCurrency = (value) => {\n                    return value.toLocaleString(\'en-US\', {style: \'currency\', currency: \'USD\'});\n                };\n                const calculateCustomerTotal = (name) => {\n                    let total = 0;\n\n                    if (customersGrouped.value) {\n                        for (let customer of customersGrouped.value) {\n                            if (customer.representative.name === name) {\n                                total++;\n                            }\n                        }\n                    }\n\n                    return total;\n                };\n\n                const toggleLock = (data, frozen, index) => {\n                    if (frozen) {\n                        lockedCustomers.value = lockedCustomers.value.filter((c, i) => i !== index);\n                        unlockedCustomers.value.push(data);\n                    }\n                    else {\n                        unlockedCustomers.value = unlockedCustomers.value.filter((c, i) => i !== index);\n                        lockedCustomers.value.push(data);\n                    }\n\n                    unlockedCustomers.value.sort((val1, val2) => {\n                        return val1.id < val2.id ? -1 : 1;\n                    });\n                }\n\n                return { customers1, customers2, customersGrouped, lockedCustomers, unlockedCustomers,\n                    loading, dialogVisible, balanceFrozen, openDialog, closeDialog, formatCurrency,\n                    calculateCustomerTotal, toggleLock }\n            },\n            components: {\n                "p-datatable": primevue.datatable,\n                "p-column": primevue.column,\n                "p-dialog": primevue.dialog,\n                "p-button": primevue.button,\n                "p-togglebutton": primevue.togglebutton\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount("#app");\n        <\\/script>\n\n        <style>\n        .p-datatable-frozen-tbody {\n            font-weight: bold;\n        }\n\n        .p-datatable-scrollable .p-frozen-column {\n            font-weight: bold;\n        }\n        </style>\n'}}}},customerService:null,created:function(){this.customerService=new T["a"]},mounted:function(){var e=this;this.loading=!0,this.customerService.getCustomersLarge().then((function(t){e.customers1=t,e.loading=!1})),this.customerService.getCustomersMedium().then((function(t){return e.customers2=t})),this.customerService.getCustomersMedium().then((function(t){return e.unlockedCustomers=t})),this.customerService.getCustomersMedium().then((function(t){return e.customersGrouped=t})),this.lockedCustomers=[{id:5135,name:"Geraldine Bisset",country:{name:"France",code:"fr"},company:"Bisset Group",status:"proposal",date:"2019-05-05",activity:0,representative:{name:"Amy Elsner",image:"amyelsner.png"}}]},methods:{openDialog:function(){this.dialogVisible=!0},closeDialog:function(){this.dialogVisible=!1},formatCurrency:function(e){return e.toLocaleString("en-US",{style:"currency",currency:"USD"})},calculateCustomerTotal:function(e){var t=0;if(this.customersGrouped){var n,l=Object(F["a"])(this.customersGrouped);try{for(l.s();!(n=l.n()).done;){var a=n.value;a.representative.name===e&&t++}}catch(o){l.e(o)}finally{l.f()}}return t},toggleLock:function(e,t,n){t?(this.lockedCustomers=this.lockedCustomers.filter((function(e,t){return t!==n})),this.unlockedCustomers.push(e)):(this.unlockedCustomers=this.unlockedCustomers.filter((function(e,t){return t!==n})),this.lockedCustomers.push(e)),this.unlockedCustomers.sort((function(e,t){return e.id<t.id?-1:1}))}}},B=(n("31d4"),n("6b0d")),P=n.n(B);const G=P()(R,[["render",D],["__scopeId","data-v-1e050ed2"]]);t["default"]=G}}]);