(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-b0674ece"],{"5ede":function(t,e,n){"use strict";n.r(e);var a=n("7a23"),o={class:"content-section introduction"},r=Object(a["k"])("div",{class:"feature-intro"},[Object(a["k"])("h1",null,[Object(a["n"])("DataTable "),Object(a["k"])("span",null,"Responsive")]),Object(a["k"])("p",null,"DataTable responsive layout can be achieved in two ways; first approach is displaying a horizontal scrollbar for smaller screens and second one is defining a breakpoint to display the cells of a row as stacked.")],-1),l={class:"content-section implementation"},s={class:"card"},u=Object(a["n"])(" Scroll "),d={class:"card"},c=Object(a["n"])(" Stack ");function i(t,e,n,i,p,m){var v=Object(a["P"])("AppDemoActions"),b=Object(a["P"])("Column"),f=Object(a["P"])("Rating"),y=Object(a["P"])("DataTable"),h=Object(a["P"])("AppDoc");return Object(a["H"])(),Object(a["j"])("div",null,[Object(a["k"])("div",o,[r,Object(a["o"])(v)]),Object(a["k"])("div",l,[Object(a["k"])("div",s,[Object(a["o"])(y,{value:p.products,responsiveLayout:"scroll"},{header:Object(a["Z"])((function(){return[u]})),default:Object(a["Z"])((function(){return[Object(a["o"])(b,{field:"code",header:"Code"}),Object(a["o"])(b,{field:"name",header:"Name"}),Object(a["o"])(b,{field:"category",header:"Category"}),Object(a["o"])(b,{field:"quantity",header:"Quantity"}),Object(a["o"])(b,{field:"inventoryStatus",header:"Status"},{body:Object(a["Z"])((function(t){return[Object(a["k"])("span",{class:Object(a["A"])("product-badge status-"+(t.data.inventoryStatus?t.data.inventoryStatus.toLowerCase():""))},Object(a["T"])(t.data.inventoryStatus),3)]})),_:1}),Object(a["o"])(b,{field:"rating",header:"Rating"},{body:Object(a["Z"])((function(t){return[Object(a["o"])(f,{modelValue:t.data.rating,readonly:!0,cancel:!1},null,8,["modelValue"])]})),_:1})]})),_:1},8,["value"])]),Object(a["k"])("div",d,[Object(a["o"])(y,{value:p.products,responsiveLayout:"stack",breakpoint:"960px"},{header:Object(a["Z"])((function(){return[c]})),default:Object(a["Z"])((function(){return[Object(a["o"])(b,{field:"code",header:"Code"}),Object(a["o"])(b,{field:"name",header:"Name"}),Object(a["o"])(b,{field:"category",header:"Category"}),Object(a["o"])(b,{field:"quantity",header:"Quantity"}),Object(a["o"])(b,{field:"inventoryStatus",header:"Status"},{body:Object(a["Z"])((function(t){return[Object(a["k"])("span",{class:Object(a["A"])("product-badge status-"+(t.data.inventoryStatus?t.data.inventoryStatus.toLowerCase():""))},Object(a["T"])(t.data.inventoryStatus),3)]})),_:1}),Object(a["o"])(b,{field:"rating",header:"Rating"},{body:Object(a["Z"])((function(t){return[Object(a["o"])(f,{modelValue:t.data.rating,readonly:!0,cancel:!1},null,8,["modelValue"])]})),_:1})]})),_:1},8,["value"])])]),Object(a["o"])(h,{name:"DataTableResponsiveDemo",sources:p.sources,service:["ProductService"],data:["products-small"],github:"datatable/DataTableResponsiveDemo.vue"},null,8,["sources"])])}var p=n("e9c0"),m={data:function(){return{products:null,sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n\t<div>\n        <div class="card">\n            <DataTable :value="products" responsiveLayout="scroll">\n                <template #header>\n                    Scroll\n                </template>\n                <Column field="code" header="Code"></Column>\n                <Column field="name" header="Name"></Column>\n                <Column field="category" header="Category"></Column>\n                <Column field="quantity" header="Quantity"></Column>\n                <Column field="inventoryStatus" header="Status">\n                    <template #body="slotProps">\n                        <span :class="\'product-badge status-\' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : \'\')">{{slotProps.data.inventoryStatus}}</span>\n                    </template>\n                </Column>\n                <Column field="rating" header="Rating">\n                    <template #body="slotProps">\n                       <Rating :modelValue="slotProps.data.rating" :readonly="true" :cancel="false" />\n                    </template>\n                </Column>\n            </DataTable>\n        </div>\n\n        <div class="card">\n            <DataTable :value="products" responsiveLayout="stack" breakpoint="960px">\n                <template #header>\n                    Stack\n                </template>\n                <Column field="code" header="Code"></Column>\n                <Column field="name" header="Name"></Column>\n                <Column field="category" header="Category"></Column>\n                <Column field="quantity" header="Quantity"></Column>\n                <Column field="inventoryStatus" header="Status">\n                    <template #body="slotProps">\n                        <span :class="\'product-badge status-\' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : \'\')">{{slotProps.data.inventoryStatus}}</span>\n                    </template>\n                </Column>\n                <Column field="rating" header="Rating">\n                    <template #body="slotProps">\n                       <Rating :modelValue="slotProps.data.rating" :readonly="true" :cancel="false" />\n                    </template>\n                </Column>\n            </DataTable>\n        </div>\n\t</div>\n</template>\n\n<script>\nimport ProductService from \'./service/ProductService\';\n\nexport default {\n    data() {\n        return {\n            products: null\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    }\n}\n<\\/script>                  \n'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n\t<div>\n        <div class="card">\n            <DataTable :value="products" responsiveLayout="scroll">\n                <template #header>\n                    Scroll\n                </template>\n                <Column field="code" header="Code"></Column>\n                <Column field="name" header="Name"></Column>\n                <Column field="category" header="Category"></Column>\n                <Column field="quantity" header="Quantity"></Column>\n                <Column field="inventoryStatus" header="Status">\n                    <template #body="slotProps">\n                        <span :class="\'product-badge status-\' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : \'\')">{{slotProps.data.inventoryStatus}}</span>\n                    </template>\n                </Column>\n                <Column field="rating" header="Rating">\n                    <template #body="slotProps">\n                       <Rating :modelValue="slotProps.data.rating" :readonly="true" :cancel="false" />\n                    </template>\n                </Column>\n            </DataTable>\n        </div>\n\n        <div class="card">\n            <DataTable :value="products" responsiveLayout="stack" breakpoint="960px">\n                <template #header>\n                    Stack\n                </template>\n                <Column field="code" header="Code"></Column>\n                <Column field="name" header="Name"></Column>\n                <Column field="category" header="Category"></Column>\n                <Column field="quantity" header="Quantity"></Column>\n                <Column field="inventoryStatus" header="Status">\n                    <template #body="slotProps">\n                        <span :class="\'product-badge status-\' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : \'\')">{{slotProps.data.inventoryStatus}}</span>\n                    </template>\n                </Column>\n                <Column field="rating" header="Rating">\n                    <template #body="slotProps">\n                       <Rating :modelValue="slotProps.data.rating" :readonly="true" :cancel="false" />\n                    </template>\n                </Column>\n            </DataTable>\n        </div>\n\t</div>\n</template>\n\n<script>\nimport { ref, onMounted } from \'vue\';\nimport ProductService from \'./service/ProductService\';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            productService.value.getProductsSmall().then(data => products.value = data);\n        })\n\n        const products = ref();\n        const productService = ref(new ProductService());\n\n        return { products }\n    }\n}\n<\\/script>                  \n'},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/datatable/datatable.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/column/column.min.js"><\\/script>\n        <script src="https://unpkg.com/primevue@^3/rating/rating.min.js"><\\/script>\n        <script src="./ProductService.js"><\\/script>',content:'<div id="app">\n            <div class="card">\n                <p-datatable :value="products" responsive-layout="scroll">\n                    <template #header>\n                        Scroll\n                    </template>\n                    <p-column field="code" header="Code"></p-column>\n                    <p-column field="name" header="Name"></p-column>\n                    <p-column field="category" header="Category"></p-column>\n                    <p-column field="quantity" header="Quantity"></p-column>\n                    <p-column field="inventoryStatus" header="Status">\n                        <template #body="slotProps">\n                            <span :class="\'product-badge status-\' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : \'\')">{{slotProps.data.inventoryStatus}}</span>\n                        </template>\n                    </p-column>\n                    <p-column field="rating" header="Rating">\n                        <template #body="slotProps">\n                        <p-rating :model-value="slotProps.data.rating" :readonly="true" :cancel="false"></p-rating>\n                        </template>\n                    </p-column>\n                </p-datatable>\n            </div>\n\n            <div class="card">\n                <p-datatable :value="products" responsive-layout="stack" breakpoint="960px">\n                    <template #header>\n                        Stack\n                    </template>\n                    <p-column field="code" header="Code"></p-column>\n                    <p-column field="name" header="Name"></p-column>\n                    <p-column field="category" header="Category"></p-column>\n                    <p-column field="quantity" header="Quantity"></p-column>\n                    <p-column field="inventoryStatus" header="Status">\n                        <template #body="slotProps">\n                            <span :class="\'product-badge status-\' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : \'\')">{{slotProps.data.inventoryStatus}}</span>\n                        </template>\n                    </p-column>\n                    <p-column field="rating" header="Rating">\n                        <template #body="slotProps">\n                        <p-rating :model-value="slotProps.data.rating" :readonly="true" :cancel="false"></p-rating>\n                        </template>\n                    </p-column>\n                </p-datatable>\n            </div>\n        </div>\n\n        <script type="module">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    productService.value.getProductsSmall().then(data => products.value = data);\n                })\n\n                const products = ref();\n                const productService = ref(new ProductService());\n\n                return { products }\n            },\n            components: {\n                "p-datatable": primevue.datatable,\n                "p-column": primevue.column,\n                "p-rating": primevue.rating\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount("#app");\n        <\\/script>                  \n'}}}},productService:null,created:function(){this.productService=new p["a"]},mounted:function(){var t=this;this.productService.getProductsSmall().then((function(e){return t.products=e}))}},v=n("6b0d"),b=n.n(v);const f=b()(m,[["render",i]]);e["default"]=f},e9c0:function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var a=n("d4ec"),o=n("bee2"),r=(n("d3b7"),function(){function t(){Object(a["a"])(this,t)}return Object(o["a"])(t,[{key:"getProductsSmall",value:function(){return fetch("demo/data/products-small.json").then((function(t){return t.json()})).then((function(t){return t.data}))}},{key:"getProducts",value:function(){return fetch("demo/data/products.json").then((function(t){return t.json()})).then((function(t){return t.data}))}},{key:"getProductsWithOrdersSmall",value:function(){return fetch("demo/data/products-orders-small.json").then((function(t){return t.json()})).then((function(t){return t.data}))}}]),t}())}}]);